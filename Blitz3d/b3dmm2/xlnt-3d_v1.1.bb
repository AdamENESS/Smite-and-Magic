;=========================================================================
;XLNT GUI 3D INTERFACE V1.1
;A SIMPLE TO USE GUI FOR BLITZ BASIC PROGRAMS
;WRITTEN BY YAPPY (SINCE 11.04.01) (EMAIL:stew.yapp@btinternet.com)

;IMPORTANT:
;PLEASE LEAVE YOUR DEBUG ON UNTIL YOU ARE COMPLETELY SATISFIED THAT 
;YOUR PROGRAM WORKS-AND IF YOUR PC BLOWS UP ETC. IT`S NOT MY FAULT :)

;THE AUTHOR OF THIS CODE (STEWART YAPP) RESERVES THE COPYRIGHTS ON ALL FUNCTIONS AND FILES
;SUPPLIED IN THE XLNT-GUI DISTRIBUTION PACK. HOWEVER, THESE FILES ARE FREELY DISTRIBUTABLE VIA NON-COMMERCIAL
;MEANS AS LONG AS ALL FILES REMAIN INTACT. 

;PLEASE CONTACT ME IF YOU WANT TO DISTRIBUTE THIS PACK COMMERCIALLY

;CHEERS, HAVE FUN.
	
;=========================================================================

;=========================================================================
;XLNT GUI SETUP CODE
;=========================================================================
;IMPORTANT...
;THIS SECTION CONTAINS ALL GUI SETUP CODE AND ***-MUST-*** BE PLACED AT
;THE TOP OF YOUR PROGRAM...

;PLEASE REMOVE ALL OF THE ";==>" COMMENTS
;==>Include "XLNT-3D_v1.1.BB"		;INCLUDE THE GUI CODE

;THESE VARAIABLE ***-MUST-*** BE SET BEFORE ANY GUI FUNCTION ARE CALLED
;GUI_SCREENW=640		;WIDTH OF SCREEN
;GUI_SCREENH=480		;HEIGHT OF SCREEN

;AND THE FOLLOWING LINES ***-MUST-*** BE EXECUTED TOO.
;==>Graphics GUI_SCREENW,GUI_SCREENH,16,1		;SETUP OUR GRAPHICS DISPLAY
;==>GUI_GFXSETUP()

;END OF GUI SETUP
;=========================================================================

;XLNT GUI 3D v1.1
;
;STOP:	HAVE YOU PLACED THE SETUP CODE AT THE BEGGINING OF
;YOUR PROGRAM? DO IT NOW!!!
SeedRnd MilliSecs()

;=========================================================================
;USER ACCESSABLE VARIABLES				
;=========================================================================
;GUI WORLD VARIABLES
Global GUI_SCREENW=640			;DEFAULT SCREEN WIDTH 
Global GUI_SCREENH=480			;DEFAULT SCREEN HITE
Global GUI_MAXW=100				;DEFAULT MAXIMUM NUMBER OF WINDOWS
Global GUI_MAXG=200				;DEAFULT MAXIMUM NUMBER OF GADGETS
Global GUI_MAXM=200				;DEFAULT MAXIMUM NUMBER OF MENUS
Global GUI_MAXMI=300			;DEFAULT MAXIMUM NUMBER OF MENU ITEMS
Global GUI_QUICKMENU=0			;CONTAINS THE CURRENT QUICK MENU ID NUMBER
Global GUI_QMENU_ON=0			;QUICK MENUS ON OR OFF [0/1]
Global GUI_BACK_ON=0			;BACKGROUND IMAGE ON OR OFF [0/1]
Global GUI_BG=0					;BACKGROUND IMAGE ID
Global GUI_BG_X=0
Global GUI_BG_Y=0
Global GUI_BG_VX
Global GUI_BG_VY
Global GUI_BG_VW=-1
Global GUI_BG_VH=-1
Global GUI_MOUSE_ON=1			;MOUSE IMAGE ON/OFF
Global GUI_AUTO3D=False
Global GUI_KEYLOCK=False
Global GUI_3DPORT=False

Global GUI_SKIN0_NORM
Global GUI_SKIN0_LITE
Global GUI_SKIN0_DARK
Global GUI_SKIN0_DARK2

Global GUI_SKIN1_NORM
Global GUI_SKIN1_LITE
Global GUI_SKIN1_DARK
Global GUI_SKIN1_DARK2
Global GUI_DEF_WIN.WINDOW

;GUI RETURN VARIABLES
Global GUI_ACTIVEWIN.WINDOW=Null			;CONTAINS CURRENT ACTIVE GUI WINDOW
Global GUI_GADHIT.GADGET=Null			;CONTAINS CURRENT GADGET HIT
Global GUI_WINHIT.WINDOW=Null			;CONTAINS CURRENT WINDOW HIT
Global GUI_WINHOVER.WINDOW=Null
Global GUI_GADHOVER.GADGET=Null
Global GUI_GROUPHIT=False
Global EVENT$=""				;CURRENT/LAST GUI EVENT
Global GUI_MENUHIT=-1			;CONTAINS ID OF CURRENT MENU ITEM HIT
Global GUI_QMENUHIT=-1			;CONTAINS ID OF CURRENT QUICK MENU ITEM HIT
Global GUI_WINEVENT$=""			;CURRENT WINDOW EVENT (MAINLY USED INTERNALY)
Global GUI_GADEVENT$=""			;CURRENT GADGET EVENT (MAINLY USED INTERNALY)
Global GUI_OEVENT$=""

;=========================================================================
;INTERANAL CONTROL VARIABLES (DON`T TOUCH `EM)
;=========================================================================
Global GUI_ID=0
Global GUI_LASTKEY=0			;GUI_KEY PRESSED
Global GUI_CURGAD.GADGET=Null 		;CONTROL KEY OVER GAD
Global GUI_HELPX=0				;HELPBOX CHK X POS
Global GUI_HELPY=0				;HELPBOX CHK Y POS
Global GUI_HLPCOUNT=0			;HELPCOUNTER
Global GUI_FONTHITE=14			;FONTHITE
Global GUI_KEY=0				;KEY HIT
Global GUI_BUTCOL0=11			;BUTCOLORS
Global GUI_BUTCOL1=10
Global GUI_GADCNT=0				;DUNNO	:)
Global GUI_ZONEHIT=0			;ZONE HIT
Global GUI_FONT=0				;FONT NUMBER
Global GUI_RECHK=0				;INTERNAL CHK
Global GUI_INPUTMODE$=""		;TEXT INPUT MODE	
Global GUI_INPUTOFFSET=1		;OFFSET
Global GUI_CURX,GUI_CURY		;CURRENT CURSOR X,Y
Global GUI_ZONES.GUI_ZONE_TYPE	;ZONE STUFF
Global GUI_QMENUX=0				;QUICK MENU POSITION
Global GUI_QMENUY=0
Global GUI_QMENUOVER=0			;QUICK MENU HIT CHK
Global GUI_MENUOVER=0			
Global GUI_GADOVER.GADGET=Null		
Global GUI_MOUSE=0
Global GUI_EXCLAIM=0
Global GUI_POINTER=0
Global GUI_RESIZE=0
Global GUI_HAND=0
Global GUI_GO=0
Global GUI_CROSS=0
Global GUI_SLIDER_SCROLL=0
Global GUI_SLIDERGAD.GADGET=Null
Global GUI_TIME=0
Global GUI_DEBUG=0
Global GUI_FLAG=0
Global GUI_ICONS=0
Global GUI_UPDATE3D=True
Global GUI_FRM=0
Global GUI_DOMOUSE=False
Dim GUI_RGB(15)
Dim GUI_RGBADD(15)

;=========================================================================
;DATA ARRAYS - COULD CONVERT TO LINKED LISTS IN NEAR FUTURE (THANX 2 ROBINS)
;=========================================================================
;Dim WIN.WINDOW(GUI_MAXW)
;Dim GAD.GADGET(GUI_MAXG)
Dim MENUS.GUI_MENU_TYPE(GUI_MAXM)
Dim MITEM.GUI_MENUITEM_TYPE(GUI_MAXMI)
Dim GUI_SORT$(1001)
Dim GUI_MNULIST.GUI_MNU(10)

For T=0 To 10
	GUI_MNULIST.GUI_MNU(T)=New GUI_MNU
Next

For T=0 To GUI_MAXM
	MENUS.GUI_MENU_TYPE(T)=New GUI_MENU_TYPE
Next	

For T=0 To GUI_MAXMI
	MITEM.GUI_MENUITEM_TYPE(T)=New GUI_MENUITEM_TYPE
Next

;=========================================================================

;=========================================================================
;DATA TYPES
;=========================================================================
Type GUI_CAMS
	Field GAD.GADGET
	Field CAM
	Field W,H
	Field FRAME
	Field WIRE
End Type

Type GUI_TEXTLINE_TYPE
	Field TXT$,TYP$
	Field ICON,ID,ACT,GAD.GADGET
	Field NXT.GUI_TEXTLINE_TYPE
End Type

Type GUI_FILE_TYPE
	Field F$,TYP$,FLG,SIZE
End Type

Type GUI_CYCLE_TYPE
	Field TXT$,NUMITEMS,ITEM
End Type

Type GUI_SLIDER_TYPE
	Field HORZ,SIZE,VAL,MINV,MAXV,AGAD.GADGET
End Type

Type GUI_TXTBOX_TYPE
	Field CURL,MAXL,LINES,SLIDER.GADGET,CURPOS,IX,IY,IP,IL
	Field START.GUI_TEXTLINE_TYPE
End Type

Type GUI_TXTLIST_TYPE
	Field TXT.GUI_TEXTLINE_TYPE
	Field CURL,LINES,MAXL,SELECTED$,SLIDER.GADGET,WD
End Type

Type GUI_TXTINPUT_TYPE
	Field LABEL$,TXT$,MAXC,XPOS,OX
End Type

Type GUI_INTEGER_TYPE
	Field VAL,MIN,MAX,LABEL$,CLICK,MISC,OX
End Type

Type GUI_SELECTOR_TYPE
	Field TXT$,CURL,LINES,MAXL
End Type

Type GUI_IMAGEBOX_TYPE
	Field IMAGE,FILE$,SCALE,X,Y,H,W,IW,IH
End Type

Type GUI_IMAGESEL_TYPE
	Field SLIDER.GADGET,EXC,IW,IH,IMAGE,CURPOS,N_IMAGES,PLUS
	Field IPL,IPB
End Type

Type GUI_PROG_TYPE
	Field MINV,MAXV,VAL,SIZE
End Type

Type GUI_IMAGEBUT_TYPE
	Field VX,VY,VW,VH,IMAGE0,IMAGE1,BORDER,FILE$,ATTACH
End Type

Type GUI_FLOAT_TYPE
	Field VAL#,MIN#,MAX#,LABEL$,CLICK,MISC,OX
	Field PLUS#,COUNT,ACCEL#,DEC
End Type

Type GUI_PAL_TYPE
	Field COL
End Type

Type GUI_LINK_TYPE
	Field PARENT.GADGET
	Field GAD.GADGET
	Field NXT.GUI_LINK_TYPE
End Type

Type WINDOW
	Field ID,STATUS,X,Y,W,H,OW,OH,TAB,TITLE$,QUIT,MIN,SCALE,DRAG,Z,IMAGE,BACK,ACTIVE,QMENU
	Field ERED#,EGREEN#,EBLUE#
	Field START_GAD.GADGET
	Field SKIN0_NORM
	Field SKIN0_DARK,SKIN0_DARK2
	Field SKIN0_LITE
	Field SKIN1_NORM
	Field SKIN1_DARK,SKIN1_DARK2
	Field SKIN1_LITE
End Type

Type GUI_ZONE_TYPE
	Field ID,STATUS,GAD.GADGET,X,Y,W,H,RETCODE	,NXT.GUI_ZONE_TYPE
End Type

Type GUI_MENU_TYPE
	Field ID,WIN.WINDOW,STATUS,TYP,TITLE$,ITEMS,X,Y,W,H,MW,MH,OPEN,Z,OX,OY,OW,OH
End Type

Type GUI_MENUITEM_TYPE
	Field ID,MENU,STATUS,CAPTION$,TYP,MISC,GROUP,X,Y,W,H,ACTIVE,KEY$
End Type

Type GUI_MNU
	Field STATUS,MNU,X,Y,W,H
End Type

Type GADGET
	Field WIN.WINDOW
	Field NXT.GADGET
	Field PAR.GADGET
	Field ID,STATUS,GADTYPE,ACTIVE,TAB,X,Y,W,H,CAPTION$,HELP$,GROUP,ON,MISC,MISC2,SCROLL,QMENU,SKIN
	Field LINK.GUI_LINK_TYPE
	Field SLIDER.GUI_SLIDER_TYPE	
	Field TXTBOX.GUI_TXTBOX_TYPE	
	Field TXTLIST.GUI_TXTLIST_TYPE
	Field CYCLE.GUI_CYCLE_TYPE			
	Field TXTINPUT.GUI_TXTINPUT_TYPE	
	Field INTEGER.GUI_INTEGER_TYPE
	Field SELECTOR.GUI_SELECTOR_TYPE
	Field IMAGEBOX.GUI_IMAGEBOX_TYPE
	Field PROG.GUI_PROG_TYPE
	Field IMAGEBUT.GUI_IMAGEBUT_TYPE
	Field IMAGESEL.GUI_IMAGESEL_TYPE
	Field AFLOAT.GUI_FLOAT_TYPE
	Field ZONE.GUI_ZONE_TYPE
End Type
;=========================================================================


;=========================================================================
;XLNT-GUI USER ACCESSABLE FUNCTIONS
;=========================================================================

;=========================================================================
;WINDOW/GADGET SETUP FUNCTIONS
;=========================================================================

Function GUI_WINDOW.WINDOW(X,Y,W,H,TITLE$,QUIT,SCALE,DRAG,MIN,BACK)
	;SETS-UP A NEW WINDOW AND RETURNS THE WINDOW ID NUMBER
	T=GUI_ID:GUI_ID=GUI_ID+1
	WIN.WINDOW=New WINDOW
	WIN\ID=T
	If W<110 And TITLE$<>"" Then W=110
	WIN\W=W
	If H<GUI_FONTHITE+6 Then H=GUI_FONTHITE+6:WIN\H=H
	If X=-1 Then X=(GUI_SCREENW/2)-(W/2)
	If Y=-1 Then Y=(GUI_SCREENH/2)-(H/2)
	WIN\X=X:WIN\Y=Y:WIN\W=W:WIN\H=H
	WIN\TITLE$=TITLE$:WIN\QUIT=QUIT:WIN\SCALE=SCALE:WIN\MIN=MIN
	WIN\DRAG=DRAG:WIN\BACK=BACK
	WIN\STATUS=1
	WIN\ERED#=Rnd(40):WIN\EGREEN#=Rnd(150):WIN\EBLUE#=Rnd(60,200)
	WIN\QMENU=-1
	Return WIN
End Function

Function GUI_DEFAULT_SKIN(SKIN0,SKIN1=-1)
	GUI_SKIN0_NORM=CopyImage(SKIN0)
	GUI_SKIN0_DARK=CopyImage(SKIN0)
	GUI_SKIN0_LITE=CopyImage(SKIN0)
	GUI_SKIN0_DARK2=CopyImage(SKIN0)
	If SKIN1<1
		GUI_SKIN1_NORM=CopyImage(gui_SKIN0_norm)
		GUI_SKIN1_DARK=CopyImage(GUI_SKIN0_DARK)
		GUI_SKIN1_LITE=CopyImage(GUI_SKIN0_LITE)
		GUI_SKIN1_DARK2=CopyImage(GUI_SKIN0_DARK2)
		GUI_ALTER_IMAGE(GUI_SKIN1_NORM,16)
		GUI_ALTER_IMAGE(GUI_SKIN1_DARK,-16)
		GUI_ALTER_IMAGE(GUI_SKIN1_DARK2,-64)
		GUI_ALTER_IMAGE(GUI_SKIN1_LITE,48)
	Else
		GUI_SKIN1_NORM=CopyImage(SKIN1)
		GUI_SKIN1_DARK=CopyImage(SKIN1)
		GUI_SKIN1_LITE=CopyImage(SKIN1)
		GUI_SKIN1_DARK2=CopyImage(SKIN1)
		GUI_ALTER_IMAGE(GUI_SKIN1_DARK,-16)
		GUI_ALTER_IMAGE(GUI_SKIN1_LITE,48)
		GUI_ALTER_IMAGE(GUI_SKIN1_DARK2,-64)
	EndIf
	GUI_ALTER_IMAGE(GUI_SKIN0_DARK,-16)
	GUI_ALTER_IMAGE(GUI_SKIN0_LITE,48)
	GUI_ALTER_IMAGE(GUI_SKIN0_DARK2,-64)
	GUI_WIN_SKIN(GUI_DEF_WIN,GUI_SKIN0_NORM,GUI_SKIN1_NORM)
	
End Function


Function GUI_WIN_SKIN(WIN.WINDOW,SKIN0,SKIN1=-1)
	If SKIN0<>GUI_SKIN0_NORM
		WIN\SKIN0_NORM=CopyImage(SKIN0)
		WIN\SKIN0_DARK=CopyImage(SKIN0)
		WIN\SKIN0_LITE=CopyImage(SKIN0)
		WIN\SKIN0_DARK2=CopyImage(SKIN0)
		If SKIN1<1
			WIN\SKIN1_NORM=CopyImage(SKIN0)
			WIN\SKIN1_DARK=CopyImage(WIN\SKIN0_DARK)
			WIN\SKIN1_LITE=CopyImage(WIN\SKIN0_LITE)
			WIN\SKIN1_DARK2=CopyImage(WIN\SKIN0_DARK2)
			GUI_ALTER_IMAGE(WIN\SKIN1_NORM,16)
			GUI_ALTER_IMAGE(WIN\SKIN1_DARK,-16)
			GUI_ALTER_IMAGE(WIN\SKIN1_DARK2,-64)
			GUI_ALTER_IMAGE(WIN\SKIN1_LITE,48)
		Else
			WIN\SKIN1_NORM=CopyImage(SKIN1)
			WIN\SKIN1_DARK=CopyImage(SKIN1)
			WIN\SKIN1_LITE=CopyImage(SKIN1)
			WIN\SKIN1_DARK2=CopyImage(SKIN1)
			GUI_ALTER_IMAGE(WIN\SKIN1_DARK,-16)
			GUI_ALTER_IMAGE(WIN\SKIN1_LITE,48)
			GUI_ALTER_IMAGE(WIN\SKIN1_DARK2,-64)
		EndIf
		GUI_ALTER_IMAGE(WIN\SKIN0_DARK,-16)
		GUI_ALTER_IMAGE(WIN\SKIN0_LITE,48)
		GUI_ALTER_IMAGE(WIN\SKIN0_DARK2,-64)
	Else
		WIN\SKIN0_NORM=GUI_SKIN0_NORM
		WIN\SKIN0_DARK=GUI_SKIN0_DARK
		WIN\SKIN0_LITE=GUI_SKIN0_LITE
		WIN\SKIN0_DARK2=GUI_SKIN0_DARK2
		WIN\SKIN1_NORM=GUI_SKIN1_NORM
		WIN\SKIN1_DARK=GUI_SKIN1_DARK
		WIN\SKIN1_LITE=GUI_SKIN1_LITE
		WIN\SKIN1_DARK2=GUI_SKIN1_DARK2
	EndIf
	GUI_REFRESH(WIN)
End Function

Function GUI_OPENWIN(WIN.WINDOW)
	;OPENS THE WINDOW "T" ON THE SCREEN
	If WIN\IMAGE<>0
		FreeImage WIN\IMAGE
	EndIf
	WIN\IMAGE=CreateImage(WIN\W+1,WIN\H+1)
	WIN\STATUS=2:WIN\ACTIVE=1
	GUI_WINFRONT(WIN)
	GUI_DRAW_WINDOW(WIN)
	GUI_DRAWGADS(WIN)
	GUI_WINEVENT$="NONE"
	GUI_GADEVENT$="NONE"
	EVENT$="NONE"
	GUI_GADHIT=Null
	GUI_ACTIVEWIN=WIN
	If GUI_SKIN0_NORM>0
		GUI_WIN_SKIN(WIN,GUI_SKIN0_NORM,GUI_SKIN1_NORM)
	EndIf

	SetBuffer BackBuffer()
End Function

Function GUI_BUTTUN.GADGET(T.WINDOW,X,Y,W,A$,ACT,HELP$)
	;NORMAL CLICKABLE BUTTON
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	If W<StringWidth(A$)+4
		W=StringWidth(A$)+4
	EndIf
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=GUI_FONTHITE	
	GAD\ACTIVE=ACT:GAD\CAPTION$=A$
	GAD\STATUS=1:GAD\WIN=T
	GAD\GADTYPE=0:GAD\HELP$=HELP$
	Return GAD
End Function

Function GUI_SWITCH.GADGET(T.WINDOW,X,Y,W,A$,ON,GROUP,ACT,HELP$)
	;ON/OFF SWITCHABLE BUTTON
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	If W<StringWidth(A$)+4
		W=StringWidth(A$)+4
	EndIf
	GAD\ON=ON:GAD\HELP$=HELP$
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=GUI_FONTHITE	
	GAD\ACTIVE=ACT:GAD\CAPTION$=A$
	GAD\STATUS=1:GAD\WIN=T
	GAD\GADTYPE=1
	GAD\GROUP=GROUP
	Return GAD
End Function

Function GUI_CYCLE.GADGET(T.WINDOW,X,Y,W,A$,ITEM,ACT,HELP$)
	;TEXT CYCLE BUTTON
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\CYCLE.GUI_CYCLE_TYPE=New GUI_CYCLE_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=GUI_FONTHITE
	If Right$(A$,1)<>"#"
		A$=A$+"#"
	EndIf
	GAD\ACTIVE=ACT:GAD\CAPTION$=A$
	GAD\STATUS=1:GAD\WIN=T
	GAD\GADTYPE=2:GAD\HELP$=HELP$
	GAD\CYCLE\TXT$=A$
	GAD\CYCLE\NUMITEMS=GUI_TXTITEMS(A$,"#")
	ITEM=QLIMIT(ITEM-1,0,GAD\CYCLE\NUMITEMS-1)
	GAD\CYCLE\ITEM=ITEM
	For R=0 To GAD\CYCLE\NUMITEMS-1
		If W<StringWidth(GUI_PARSE$(A$,R))+4
			W=StringWidth(GUI_PARSE$(A$,R))+4
		EndIf
	Next
	GAD\W=W+16
	GAD\CAPTION$=GUI_PARSE$(A$,ITEM)
	Return GAD
End Function

Function GUI_SELECTOR.GADGET(T.WINDOW,X,Y,W,A$,ACT,HELP$)
	;PULL DOWN SELECTOR
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\SELECTOR.GUI_SELECTOR_TYPE=New GUI_SELECTOR_TYPE
	GAD\X=X:GAD\Y=Y:GAD\WIN=T:GAD\STATUS=1:GAD\ACTIVE=ACT:GAD\GADTYPE=10
	If Right$(A$,1)<>"#"
		A$=A$+"#"
	EndIf
	GAD\SELECTOR\MAXL=GUI_TXTITEMS(A$,"#")
	GAD\SELECTOR\TXT$=A$:GAD\HELP$=HELP$
	For R=0 To GAD\SELECTOR\MAXL-1
		If W<StringWidth(GUI_PARSE$(A$,R))+4
			W=StringWidth(GUI_PARSE$(A$,R))+4
		EndIf
	Next
	GAD\W=W+11:GAD\H=GUI_FONTHITE-1
	GAD\CAPTION$=GUI_PARSE$(A$,0)
	;MAXHITE=Int((WIN\H-Y)/(GUI_FONTHITE-1))
	MAXHITE=(GUI_SCREENH-Y)/(GUI_FONTHITE-1)
	If MAXHITE>5
		If GAD\SELECTOR\MAXL<6
			GAD\SELECTOR\LINES=GAD\SELECTOR\MAXL
		Else
			GAD\SELECTOR\LINES=6
		EndIf
	Else
		If GAD\SELECTOR\MAXL<MAXHITE
			GAD\SELECTOR\LINES=GAD\SELECTOR\MAXL
		Else	
			GAD\SELECTOR\LINES=MAXHITE
		EndIf
	EndIf	
	Return GAD
End Function	

Function GUI_TXTINPUT.GADGET(T.WINDOW,X,Y,W,A$,LAB$,MAX,ACT,HELP$)
	;TEXT INPUT BOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\TXTINPUT.GUI_TXTINPUT_TYPE=New GUI_TXTINPUT_TYPE
	W=QLIMIT(W,GUI_FONTHITE,GUI_SCREENW):H=GUI_FONTHITE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H	
	GAD\ACTIVE=ACT:GAD\CAPTION$=A$
	If LAB$<>""
	GAD\TXTINPUT\OX=(Int((StringWidth(LAB$)+StringWidth(" "))/StringWidth(" "))*StringWidth(" "))
	EndIf
	GAD\STATUS=1:GAD\WIN=T
	GAD\GADTYPE=3:GAD\HELP$=HELP$
	GAD\TXTINPUT\LABEL$=LAB$:GAD\TXTINPUT\MAXC=MAX:GAD\TXTINPUT\TXT$=A$
	GAD\CAPTION$=A$
	Return GAD
End Function

Function GUI_TXTBOX.GADGET(T.WINDOW,X,Y,W,H,A$,ACT,HELP$)
	;TEXT DISPLAY BOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\TXTBOX.GUI_TXTBOX_TYPE=New GUI_TXTBOX_TYPE
	If Asc(Right$(A$,1))>31
		A$=A$+Chr$(10)
	EndIf
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H	
	GAD\ACTIVE=ACT:GAD\CAPTION$=A$
	GAD\STATUS=1:GAD\WIN=T:GAD\TAB=0
	GAD\GADTYPE=4:GAD\HELP$=HELP$
	GAD\TXTBOX\CURL=0:GAD\TXTBOX\CURPOS=1
	L=GUI_CNTLINES(A$):If L=1 Then L=2
	If L=-1
		A$=A$+Chr$(10)
		GAD\CAPTION$=A$
		L=1
	EndIf
	GAD\TXTBOX\MAXL=L
	GAD\TXTBOX\START.GUI_TEXLINE_TYPE=New GUI_TEXTLINE_TYPE
	AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
	POS=1
	For L=0 To GAD\TXTBOX\MAXL-1
		AL\ID=L
		AL\GAD=GAD
		AL\ICON=-1
		AL\TXT$=GUI_GETLINE$(A$,POS)
		POS=POS+Len(AL\TXT$)+1
		AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
		AL=AL\NXT.GUI_TEXTLINE_TYPE
		AL\GAD=GAD
	Next
	GAD\TXTBOX\LINES=Int(H/(GUI_FONTHITE-3)):GAD\H=GAD\TXTBOX\LINES*(GUI_FONTHITE-3)+6:H=GAD\H
	SLD.GADGET=GUI_SLIDER(T,X+W+2,Y,H-24,0,0,QLIMIT(GAD\TXTBOX\MAXL-GAD\TXTBOX\LINES,0,9999),0,1,HELP$)
	SLD\SLIDER\AGAD=GAD
	GAD\TXTBOX\SLIDER=SLD
	Return GAD
End Function

Function GUI_TXTLIST.GADGET(T.WINDOW,X,Y,W,H,A$,ACT,HELP$)
	;TEXT LIST BOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\TXTLIST.GUI_TXTLIST_TYPE=New GUI_TXTLIST_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H	
	If Right$(A$,1)<>"#"
		A$=A$+"#"
	EndIf
	GAD\ACTIVE=ACT:GAD\CAPTION$="":GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
	GAD\TXTLIST\MAXL=GUI_TXTITEMS(A$,"#")
	GAD\TXTLIST\WD=W
	AL.GUI_TEXTLINE_TYPE=GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE
	AL\ICON=-1
	For R=0 To GAD\TXTLIST\MAXL-1
		C$=GUI_PARSE$(A$,R)
		ICL=Instr(Upper$(C$),"*IC")
		If ICL=0
			AL.GUI_TEXTLINE_TYPE\TXT$=C$
			AL.GUI_TEXTLINE_TYPE\ICON=-1
		Else
			L=Len(C$)
			AL.GUI_TEXTLINE_TYPE\TXT$=Mid$(C$,1,L-4)
			AL.GUI_TEXTLINE_TYPE\ICON=Right$(C$,1)
		EndIf
		AL.GUI_TEXTLINE_TYPE\ID=R
		AL.GUI_TEXTLINE_TYPE\ACT=0
		AL.GUI_TEXTLINE_TYPE\GAD=GAD
		If R<GAD\TXTLIST\MAXL-1
			AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
			AL.GUI_TEXTLINE_TYPE=AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE
		EndIf
	Next
	GAD\W=W:GAD\HELP$=HELP$
	GAD\TXTLIST\LINES=Int(H/(GUI_FONTHITE-3)):GAD\H=GAD\TXTLIST\LINES*(GUI_FONTHITE-3)+4:H=GAD\H
	GAD\STATUS=1:GAD\WIN=T
	GAD\GADTYPE=7:GAD\TXTLIST\CURL=0
	SH=GAD\TXTLIST\MAXL-GAD\TXTLIST\LINES:If SH<0 Then SH=0
	SLD.GADGET=GUI_SLIDER(T,X+W+2,Y,H-24,0,0,SH,0,1,HELP$)
	SLD\SLIDER\AGAD=GAD
	GAD\TXTLIST\SLIDER=SLD
	Return GAD
End Function

Function GUI_SLIDER.GADGET(T.WINDOW,X,Y,SIZE,VAL,MIN,MAX,HORZ,ACT,HELP$)
	;HORIZONTAL OR VERTICAL SLIDER
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\SLIDER.GUI_SLIDER_TYPE=New GUI_SLIDER_TYPE
	VAL=QLIMIT(VAL,MIN,MAX)
	If HORZ<>0
		GAD\W=SIZE+22
		GAD\H=10
	Else
		GAD\H=SIZE+22
		GAD\W=10
	EndIf
	GAD\GADTYPE=5:GAD\STATUS=1:GAD\WIN=T:GAD\HELP$=HELP$
	GAD\X=X:GAD\Y=Y:GAD\ACTIVE=ACT:GAD\SLIDER\HORZ=HORZ
	GAD\SLIDER\SIZE=SIZE:GAD\SLIDER\MINV=MIN:GAD\SLIDER\MAXV=MAX:GAD\SLIDER\VAL=VAL
	GAD\SLIDER\AGAD=Null
	Return GAD
End Function

Function GUI_INTEGER.GADGET(T.WINDOW,X,Y,LABEL$,VAL,MIN,MAX,ACT,HELP$)
	;NUMBER INPUT BOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\INTEGER.GUI_INTEGER_TYPE=New GUI_INTEGER_TYPE
	GAD\X=X:GAD\Y=Y:GAD\STATUS=1:GAD\GADTYPE=6
	GAD\INTEGER\OX=StringWidth(LABEL$)+StringWidth(" ")
	GAD\INTEGER\OX=Int(GAD\INTEGER\OX/StringWidth(" "))
	GAD\INTEGER\OX=GAD\INTEGER\OX*StringWidth(" ")
	If StringWidth(MAX)>StringWidth(MIN)
		GAD\W=GAD\INTEGER\OX+StringWidth(MAX)+18
	Else
		GAD\W=GAD\INTEGER\OX+StringWidth(MIN)+18
	EndIf	
	GAD\H=GUI_FONTHITE-1:GAD\INTEGER\CLICK=0
	GAD\WIN=T:GAD\ACTIVE=ACT
	VAL=QLIMIT(VAL,MIN,MAX):GAD\HELP$=HELP$
	GAD\INTEGER\VAL=VAL:GAD\INTEGER\MAX=MAX:GAD\INTEGER\MIN=MIN:GAD\INTEGER\LABEL$=LABEL$
	Return GAD
End Function

Function GUI_FLOAT.GADGET(T.WINDOW,X,Y,LABEL$,VAL#,MIN#,MAX#,ACT,HELP$,DEC=2)
	;NUMBER INPUT BOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\AFLOAT.GUI_FLOAT_TYPE=New GUI_FLOAT_TYPE
	GAD\X=X:GAD\Y=Y:GAD\STATUS=1:GAD\GADTYPE=19
	DEC=QLIMIT(DEC,1,5)
	GAD\AFLOAT\OX=StringWidth(LABEL$)+StringWidth(" ")
	GAD\AFLOAT\OX=Int(GAD\AFLOAT\OX/StringWidth(" "))
	GAD\AFLOAT\OX=GAD\AFLOAT\OX*StringWidth(" ")
	If StringWidth(GUI_FLOATER$(MAX#,DEC))>StringWidth(GUI_FLOATER$(MIN#,DEC))
		GAD\W=GAD\AFLOAT\OX+StringWidth(GUI_FLOATER$(MAX#,DEC))+18
	Else
		GAD\W=GAD\AFLOAT\OX+StringWidth(GUI_FLOATER$(MIN#,DEC))+18
	EndIf	
	GAD\H=GUI_FONTHITE-1:GAD\AFLOAT\CLICK=0
	GAD\WIN=T:GAD\ACTIVE=ACT
	GAD\AFLOAT\DEC=DEC
	VAL#=FLIMIT#(VAL#,MIN#,MAX#):GAD\HELP$=HELP$
	GAD\AFLOAT\VAL#=VAL#:GAD\AFLOAT\MAX#=MAX#:GAD\AFLOAT\MIN#=MIN#:GAD\AFLOAT\LABEL$=LABEL$
	GAD\AFLOAT\PLUS#=1/(10^DEC)
	GAD\AFLOAT\ACCEL#=GAD\AFLOAT\PLUS#
	Return GAD
End Function

Function GUI_PALLETE_BOX.GADGET(T.WINDOW,X,Y,W,H,COL,GRP,ACT,HELP$)
	
End Function

Function GUI_TICK.GADGET(T.WINDOW,X,Y,A$,ON,GROUP,ACT,HELP$)
	;CHECK/TICK BOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\ON=ON:GAD\W=StringWidth(A$)+14:GAD\H=10
	GAD\X=X:GAD\Y=Y:GAD\CAPTION$=A$:GAD\HELP$=HELP$
	GAD\ACTIVE=ACT:GAD\WIN=T:GAD\STATUS=1
	GAD\GADTYPE=8
	GAD\GROUP=GROUP
	Return GAD
End Function

Function GUI_FRAME.GADGET(T.WINDOW,X,Y,W,H,C$,TYP,HELP$)
	;GFX FRAME
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H
	GAD\STATUS=1:GAD\WIN=T
	If TYP=2 Then C$=""
	GAD\ACTIVE=1:GAD\CAPTION$=C$
	GAD\MISC=TYP:GAD\HELP$=HELP$
	GAD\GADTYPE=9
	Return GAD
End Function

Function GUI_TEXT.GADGET(T.WINDOW,X,Y,W,H,A$,HELP$)
	;SIMPLE TEXT MESSAGE
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H
	GAD\STATUS=1:GAD\ACTIVE=1:GAD\WIN=T
	GAD\GADTYPE=11:GAD\HELP$=HELP$
	GAD\CAPTION$=A$
	Return GAD
End Function

Function GUI_IMAGEBOX.GADGET(T.WINDOW,X,Y,W,H,F$,SCALE,ACT,HELP$)
	;SCROLLABLE/SCALEABLE IMAGEBOX
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\IMAGEBOX.GUI_IMAGEBOX_TYPE=New GUI_IMAGEBOX_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H:GAD\STATUS=1:GAD\WIN=T:GAD\ACTIVE=ACT
	GAD\GADTYPE=12
	GAD\IMAGEBOX\SCALE=SCALE
	GAD\IMAGEBOX\FILE$=F$:GAD\HELP$=HELP$
	If F$<>""
		GAD\IMAGEBOX\IMAGE=LoadImage(F$)
	EndIf
	If GAD\IMAGEBOX\IMAGE=0
		BUFF=GraphicsBuffer()
		GAD\IMAGEBOX\IMAGE=CreateImage(QLIMIT(W,1,GUI_SCREENW),QLIMIT(H,1,GUI_SCREENH))
		SetBuffer ImageBuffer(GAD\IMAGEBOX\IMAGE)
		ClsColor 10*17,10*17,10*17
		Cls
		SetBuffer BUFF
		ClsColor 0,0,0
	EndIf
	GAD\IMAGEBOX\W=ImageWidth(GAD\IMAGEBOX\IMAGE)
	GAD\IMAGEBOX\H=ImageHeight(GAD\IMAGEBOX\IMAGE)
	If SCALE<>0
		ResizeImage GAD\IMAGEBOX\IMAGE,W-2,H-2
	EndIf
	Return GAD
End Function

Function GUI_PROG.GADGET(T.WINDOW,X,Y,MIN,MAX,HELP$)
	;SIMPLE PROGRESS BAR
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\PROG.GUI_PROG_TYPE=New GUI_PROG_TYPE
	GAD\X=X:GAD\Y=Y:GAD\H=GUI_FONTHITE:GAD\W=102
	GAD\WIN=T:GAD\GADTYPE=13:GAD\STATUS=1:GAD\ACTIVE=1
	GAD\PROG\MINV=MIN:GAD\PROG\VAL=MIN
	GAD\PROG\MAXV=MAX:GAD\HELP$=HELP$
	GAD\CAPTION$=A$:GAD\PROG\VAL=MAX/2
	Return GAD
End Function

Function GUI_TAB.GADGET(T.WINDOW,X,Y,W,A$,TABNUMBER,HELP$)
	;WINDOW TAB BUTTON
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\X=X:GAD\Y=Y
	GAD\W=QLIMIT(W,StringWidth(A$)+4,GUI_SCREENW):GAD\H=GUI_FONTHITE
	GAD\WIN=T:GAD\STATUS=1:GAD\ACTIVE=1:GAD\TAB=0:GAD\GADTYPE=14
	GAD\MISC=TABNUMBER:GAD\CAPTION$=A$:GAD\HELP$=HELP$
	GAD\QMENU=-1
	Return GAD
End Function

Function GUI_IMAGE_SELECTOR.GADGET(T.WINDOW,X,Y,W,H,IW,IH,EXC,HELP$)
	;THUMBNAIL SELECTOR
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	W=QLIMIT(W,IW+10,1024)
	H=QLIMIT(H,IH+10,1024)
	GAD\IMAGESEL.GUI_IMAGESEL_TYPE=New GUI_IMAGESEL_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H
	GAD\WIN=T:GAD\STATUS=1
	GAD\IMAGESEL\IW=IW:GAD\IMAGESEL\IH=IH
	GAD\HELP$=HELP$:GAD\GADTYPE=16
	GAD\IMAGESEL\EXC=EXC
	SLD.GADGET=GUI_SLIDER(T,X+W+2,Y,H-24,0,0,0,0,1,HELP$)
	GAD\IMAGESEL\SLIDER=SLD
	SLD\SLIDER\AGAD=GAD
	GAD\IMAGESEL\IMAGE=CreateImage(IW,IH)
	GAD\ACTIVE=1
	IX=GAD\X+5
	Repeat
		IX=IX+IW+3
		C=C+1
		If IX+IW+2>GAD\X+GAD\W
			GAD\IMAGESEL\PLUS=C
			GAD\IMAGESEL\IPL=C
			DONE=True
		EndIf
	Until DONE=True
	Return GAD
End Function

Function GUI_IMAGEBUT.GADGET(T.WINDOW,X,Y,IMAGEOFF,IMAGEON,ACT,HELP$,BORDER=1,W=0,H=0)
	;IMAGE BUTTON/THUMBNAIL
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\IMAGEBUT.GUI_IMAGEBUT_TYPE=New GUI_IMAGEBUT_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H:GAD\STATUS=1:GAD\WIN=T:GAD\ACTIVE=ACT
	GAD\GADTYPE=15
	GAD\HELP$=HELP$
	If IMAGEOFF=0
		IMAGEOFF=CreateImage (QLIMIT(W,10,9999),QLIMIT(H,10,9999))
	EndIf
	If IMAGEON=0 Then IMAGEON=IMAGEOFF
	If W>0 And H>0
		ResizeImage IMAGEOFF,W,H
		ResizeImage IMAGEON,W,H
	EndIf
	GAD\W=ImageWidth(IMAGEOFF)+4
	GAD\H=ImageHeight(IMAGEOFF)+4
	GAD\IMAGEBUT\IMAGE0=IMAGEOFF
	GAD\IMAGEBUT\IMAGE1=IMAGEON
	GAD\IMAGEBUT\BORDER=BORDER
	Return GAD
End Function

Function GUI_IMAGE_SWITCH.GADGET(T.WINDOW,X,Y,IMAGEOFF,IMAGEON,GROUP,ON,ACT,HELP$,BORDER=1)
	;IMAGE BUTTON/THUMBNAIL
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\IMAGEBUT.GUI_IMAGEBUT_TYPE=New GUI_IMAGEBUT_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H:GAD\STATUS=1:GAD\WIN=T:GAD\ACTIVE=ACT
	GAD\GADTYPE=18
	GAD\HELP$=HELP$
	If IMAGEOFF=0
		IMAGEOFF=CreateImage (10,10)
	EndIf
	If IMAGEON=0 Then IMAGEON=IMAGEOFF
	GAD\W=ImageWidth(IMAGEOFF)+4
	GAD\H=ImageHeight(IMAGEOFF)+4
	GAD\ON=ON:GAD\GROUP=GROUP
	GAD\IMAGEBUT\IMAGE0=IMAGEOFF
	GAD\IMAGEBUT\IMAGE1=IMAGEON
	GAD\IMAGEBUT\BORDER=BORDER
	Return GAD
End Function

Function GUI_MULTI_INPUT.GADGET(T.WINDOW,X,Y,W,H,A$,ACT,HELP$)
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\TXTBOX.GUI_TXTBOX_TYPE=New GUI_TXTBOX_TYPE
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H	
	GAD\ACTIVE=ACT:GAD\CAPTION$=A$
	GAD\STATUS=1:GAD\WIN=T:GAD\TAB=0
	GAD\GADTYPE=17:GAD\HELP$=HELP$
	GAD\TXTBOX\CURL=0:GAD\TXTBOX\CURPOS=1
	L=GUI_CNTLINES(A$):If L=1 Then L=2
	If L=-1
		A$=A$+Chr$(10)
		GAD\CAPTION$=A$
		L=1
	EndIf
	GAD\CAPTION$=A$
	GAD\TXTBOX\MAXL=L
	GAD\TXTBOX\LINES=Int(H/(GUI_FONTHITE-3)):GAD\H=GAD\TXTBOX\LINES*(GUI_FONTHITE-3)+6:H=GAD\H
	SLD.GADGET=GUI_SLIDER(T,X+W+2,Y,H-24,0,0,GAD\TXTBOX\MAXL-GAD\TXTBOX\LINES,0,1,HELP$)
	SLD\SLIDER\AGAD=GAD
	GAD\TXTBOX\SLIDER=SLD
	If A$<>""
		GUI_TEXT_TO_MULTI(GAD)
	EndIf
	Return GAD
End Function

Function GUI_3D.GADGET(T.WINDOW,X,Y,W,H,HELP$,CAM=-1,WIRE=False)
	GAD.GADGET=GUI_FINDGAD(T)
	GAD\ID=GUI_ID:GUI_ID=GUI_ID+1
	GAD\X=X:GAD\Y=Y:GAD\W=W:GAD\H=H
	GAD\ACTIVE=1:GAD\GADTYPE=20
	GAD\HELP$=HELP$
	GAD\WIN=T:GAD\STATUS=1
	If CAM>0
		GAD\MISC=CAM
	Else
		SetBuffer BackBuffer()
		GAD\MISC=CreateCamera()
	EndIf
	CameraViewport GAD\MISC,0,0,W,H
	GC.GUI_CAMS=New GUI_CAMS
	GC\GAD=GAD
	GC\CAM=GAD\MISC
	GC\W=W
	GC\H=H
	GC\WIRE=WIRE
;	EntityOrder GAD\MISC,10
	HideEntity GAD\MISC
	GUI_3DPORT=GAD\MISC
	SetBuffer BackBuffer()
	Return GAD
End Function

;=========================================================================
;WINDOW/GADGET DELETION
;=========================================================================

Function GUI_FREEGAD(GAD.GADGET)
	;DELETES GADGET GAD
	WIN.WINDOW=GAD\WIN
	If GAD\GADTYPE=12
		If GAD\IMAGEBOX\IMAGE<>0
			FreeImage GAD\IMAGEBOX\IMAGE
		EndIf
	EndIf
	GUI_ZONES.GUI_ZONE_TYPE=First GUI_ZONE_TYPE
	For GUI_ZONES.GUI_ZONE_TYPE=Each GUI_ZONE_TYPE
		If GUI_ZONES<>Null
			If GUI_ZONES\GAD=GAD
				Delete GUI_ZONES
			EndIf
		EndIf
	Next
	
	If GAD\PAR<>Null
		PAR.GADGET=GAD\PAR
		NXT.GADGET=GAD\NXT
		PAR\NXT=NXT
		If NXT<>Null
			NXT\PAR=PAR
		EndIf
	Else
		NXT.GADGET=GAD\NXT
		If WIN<>Null And NXT<>Null
		WIN\START_GAD=NXT
		EndIf
	EndIf
		
	Select GAD\GADTYPE
		Case 2
			Delete GAD\CYCLE.GUI_CYCLE_TYPE
		Case 3
			Delete GAD\TXTINPUT.GUI_TXTINPUT_TYPE
		Case 4
			GUI_FREEGAD(GAD\TXTBOX\SLIDER)
			Delete GAD\TXTBOX.GUI_TXTBOX_TYPE
		Case 5
			Delete GAD\SLIDER.GUI_SLIDER_TYPE
		Case 6
			Delete GAD\INTEGER.GUI_INTEGER_TYPE
		Case 7
			AL.GUI_TEXTLINE_TYPE=GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE
			While AL\NXT.GUI_TEXTLINE_TYPE<>Null
				PT.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
				Delete AL.GUI_TEXTLINE_TYPE
				AL=PT
			Wend
			GUI_FREEGAD(GAD\TXTLIST\SLIDER)
			Delete GAD\TXTLIST.GUI_TXTLIST_TYPE
		Case 10
			Delete GAD\SELECTOR.GUI_SELECTOR_TYPE
		Case 12
			If GAD\IMAGEBOX\IMAGE<>0
				FreeImage GAD\IMAGEBOX\IMAGE
			EndIf
			Delete GAD\IMAGEBOX.GUI_IMAGEBOX_TYPE
		Case 13
			Delete GAD\PROG.GUI_PROG_TYPE
		Case 15
			If GAD\IMAGEBUT\IMAGE0<>0
				FreeImage GAD\IMAGEBUT\IMAGE0
				FreeImage GAD\IMAGEBUT\IMAGE1
			EndIf
			Delete GAD\IMAGEBUT.GUI_IMAGEBUT_TYPE
		Case 16
			If GAD\IMAGESEL\IMAGE<>0
				FreeImage GAD\IMAGESEL\IMAGE
			EndIf
			GUI_FREEGAD(GAD\IMAGESEL\SLIDER)
			Delete GAD\IMAGESEL.GUI_IMAGESEL_TYPE
		Case 17
			GUI_FREEGAD(GAD\TXTBOX\SLIDER)
			Delete GAD\TXTBOX.GUI_TXTBOX_TYPE
		Case 20
			If GUI_3DPORT=GAD\MISC
				GUI_3DPORT=False
			EndIf
			For GC.GUI_CAMS=Each GUI_CAMS
				If GC\GAD=GAD
					FreeEntity GC\CAM
					Delete GC
				EndIf
			Next
	End Select
	Delete GAD.GADGET
End Function

Function GUI_FREEWIN(WIN.WINDOW)
	;DELETES WINDOW T AND ALL ITS GADGETS
	GUI_WINBACK(WIN)
	GAD.GADGET=WIN\START_GAD
	If GAD<>Null
		Repeat
			NXT.GADGET=GAD\NXT
			GUI_FREEGAD(GAD)
			GAD.GADGET=NXT
		Until NXT=Null
	EndIf
	
	WIN\STATUS=0
	If WIN\IMAGE>0
		FreeImage WIN\IMAGE
	EndIf
	If WIN\SKIN0_NORM>0 And WIN\SKIN0_NORM<>GUI_SKIN0_NORM
		FreeImage WIN\SKIN0_NORM
		FreeImage WIN\SKIN0_LITE
		FreeImage WIN\SKIN0_DARK
		FreeImage WIN\SKIN0_DARK2
		If WIN\SKIN1_NORM>0 And WIN\SKIN1_NORM<>GUI_SKIN1_NORM
			FreeImage WIN\SKIN1_NORM
			FreeImage WIN\SKIN1_LITE
			FreeImage WIN\SKIN1_DARK
			FreeImage WIN\SKIN1_DARK2
		EndIf
	EndIf
	Delete WIN
	While MouseDown(1):Wend
End Function

Function GUI_END()
	;DELETES ALL GUI DATA
	For GAD.GADGET=Each GADGET
		If GAD<>Null
			GUI_FREEGAD(GAD)
		EndIf
	Next
	
	For WIN.WINDOW=Each WINDOW
		If WIN<>Null
			GUI_FREEWIN(WIN)
		EndIf
	Next
		
	FreeFont GUI_FONT
	FreeImage GUI_MOUSE
	FreeImage GUI_BACK
	FreeImage GUI_ICONS
End Function

;=========================================================================
;MENU/QMENU SETUP FUNCTIONS
;=========================================================================

Function GUI_MENU(WIN.WINDOW,A$)
	;SETUP A MENU
	M=GUI_FINDMENU()
	MENUS(M)\ID=M
	MENUS(M)\WIN=WIN
	If WIN=Null
		MENUS(M)\TYP=5
	Else
		MENUS(M)\TYP=0
	EndIf
	If Left$(A$,2)<>"  "
		A$="  "+A$
	EndIf
	If Right$(A$,2)<>"  "
		A$=A$+"  "
	EndIf
	MENUS(M)\TITLE$=A$:MENUS(M)\OPEN=False
	MENUS(M)\MW=0:MENUS(M)\MH=0
	Return M
End Function

Function GUI_SUBMENU(WIN.WINDOW)
	;SETUP A SUBMENU
	M=GUI_FINDMENU():A$=""
	MENUS(M)\ID=M
	MENUS(M)\WIN=WIN:MENUS(M)\TYP=1
	MENUS(M)\TITLE$=A$:MENUS(M)\OPEN=False
	MENUS(M)\X=MENUS(MM)\X+MENUS(MM)\MW
	MENUS(M)\MW=0:MENUS(M)\MH=0
	Return M
End Function

Function GUI_MENUITEM(MNU,CAPTION$,ACT,KEY$="")
	;ADD A MENU ITEM
	If Left$(CAPTION$,2)<>" "
		CAPTION$=" "+CAPTION$
	EndIf
	If Right$(CAPTION$,2)<>"  "
		CAPTION$=CAPTION$+"  "
	EndIf
	M=GUI_FINDITEM()
	MITEM(M)\MENU=MNU:MITEM(M)\ID=M
	MITEM(M)\TYP=0
	If KEY$<>""
		KEY$="   "+KEY$
	EndIf
	MITEM(M)\KEY$=KEY$
	MITEM(M)\CAPTION$=CAPTION$:MITEM(M)\ACTIVE=ACT
	W=StringWidth(CAPTION$)+8+StringWidth(KEY$)
	If MENUS(MNU)\MW<W Then MENUS(MNU)\MW=W
	MENUS(MNU)\MH=MENUS(MNU)\MH+StringHeight(CAPTION$);+1
	Return M
End Function

Function GUI_MENUBUTTUN(MNU,CAPTION$,ON,GROUP,ACT,KEY$="")
	;ADD A MENUBUTTON
	If Left$(CAPTION$,2)<>" "
		CAPTION$=" "+CAPTION$
	EndIf
	If Right$(CAPTION$,2)<>"  "
		CAPTION$=CAPTION$+"  "
	EndIf
	M=GUI_FINDITEM()
	MITEM(M)\MENU=MNU:MITEM(M)\ID=M:MITEM(M)\TYP=3
	MITEM(M)\CAPTION$=CAPTION$:MITEM(M)\ACTIVE=ACT:MITEM(M)\MISC=ON
	If KEY$<>""
		KEY$="   "+KEY$
	EndIf
	MITEM(M)\KEY$=KEY$
	W=StringWidth(CAPTION$)+20+StringWidth(KEY$)
	If MENUS(MNU)\MW<W Then MENUS(MNU)\MW=W
	MENUS(MNU)\MH=MENUS(MNU)\MH+StringHeight(CAPTION$)+1
	MITEM(M)\GROUP=GROUP
	Return M
End Function

Function GUI_SUBMENUITEM(MNU,NMNU,CAPTION$,ACT)
	;ADD A SUBMENU
	If Left$(CAPTION$,2)<>" "
		CAPTION$=" "+CAPTION$
	EndIf
	If Right$(CAPTION$,2)<>"  "
		CAPTION$=CAPTION$+"  "
	EndIf
	M=GUI_FINDITEM()
	MITEM(M)\MENU=MNU:MITEM(M)\ID=M:MITEM(M)\TYP=4
	MITEM(M)\CAPTION$=CAPTION$:MITEM(M)\ACTIVE=ACT
	MITEM(M)\MISC=NMNU
	W=StringWidth(CAPTION$)+10
	If MENUS(MNU)\MW<W Then MENUS(MNU)\MW=W
	MENUS(MNU)\MH=MENUS(MNU)\MH+StringHeight(CAPTION$)+1
	Return M
End Function

Function GUI_MENULINE(MNU)
	;ADD A MENU LINE
	M=GUI_FINDITEM()
	MITEM(M)\MENU=MNU:MITEM(M)\ID=M:MITEM(M)\TYP=1
	MITEM(M)\ACTIVE=1
	MITEM(M)\H=GUI_FONTHITE
	MENUS(MNU)\MH=MENUS(MNU)\MH+GUI_FONTHITE-4
End Function

Function GUI_MENUSPACE(MNU)
	;ADD A MENU SPACE
	M=GUI_FINDITEM()
	MITEM(M)\MENU=MNU:MITEM(M)\ID=M:MITEM(M)\TYP=2
	MITEM(M)\ACTIVE=1
	MENUS(MNU)\MH=MENUS(MNU)\MH+GUI_FONTHITE-4
End Function

;=========================================================================
;XLNT-GUI/USER INTERACTION FUNCTIONS
;=========================================================================

Function GUI()
	;DOES ALL GUI PROCESSING
	GUI_DELAY(0)
	GUI_GROUPHIT=False
	If MouseDown(1) Or MouseDown(2)
		GUI_HLPCOUNT=0:GUI_KEY=0:GUI_LASTKEY=0
	EndIf
	GUI_DRAWALL()
	GUI_GET_EVENT()
	If KeyDown(59) And KeyDown(29) And GUI_FRM=0
		SaveBuffer(BackBuffer(),"c:\Xlnt-Dump.bmp")
	EndIf
	If GUI_GADHIT<>Null And EVENT$="GUI_GADHIT"
		GUI_GROUPHIT=GUI_GADHIT\GROUP
	EndIf
	If KeyDown(1) And KeyDown(29)
		GUI_END()
		EndGraphics
		End
	EndIf
	If KeyDown(29) And KeyDown(88)
		While KeyDown(88) Wend
		GUI_DEBUG=1-GUI_DEBUG
	EndIf
	If GUI_DEBUG=1
		GUI_SHADOW(0,0,180,100)
		Color 0,255,0
		DY=1
		Text 2+50,DY,"DEBUG INFO":DY=DY+GUI_FONTHITE
		Text 2,DY,"X="+MouseX()+" Y="+MouseY():DY=DY+GUI_FONTHITE-2
		Text 2,DY,"MEM:"+AvailVidMem():DY=DY+GUI_FONTHITE-2
		If GUI_GADHIT<>Null
			A$=GUI_GADHIT\ID+" Type="+GUI_GADHIT\GADTYPE;GADTYPE
		Else
			A$="NA Type=NA"
		EndIf
		Text 2,DY,"GADHIT="+A$:DY=DY+GUI_FONTHITE-2
		Text 2,DY,"WINEVENT="+GUI_WINEVENT$:DY=DY+GUI_FONTHITE-2
		Text 2,DY,"GADEVENT="+GUI_GADEVENT$:DY=DY+GUI_FONTHITE-2
		Text 2,DY,"ZONEHIT="+GUI_ZONEHIT:DY=DY+GUI_FONTHITE-2
		Text 2,DY,"EVENT$="+EVENT$:DY=DY+GUI_FONTHITE-2
		Rect 0,0,180,101,0
		Rect 0,0,180,GUI_FONTHITE+1,0
	EndIf
End Function

Function GUI_SHADOW(X1,Y1,W,H)
	LockBuffer BackBuffer
	For X=X1 To X1+W; Step 2
		For Y=Y1 To Y1+H; Step 2
			col=ReadPixelFast(x,y) And $ffffff
			col=col And (~$6f6f6f)
			WritePixelFast X,Y,col,BackBuffer()
		Next
	Next
	UnlockBuffer BackBuffer()
End Function

Function GUI_RESIZE(GAD.GADGET,W,H)
	A$=GAD\CAPTION$
	Select GAD\GADTYPE
		Case 0,1,14
			GAD\H=GUI_FONTHITE
			GAD\W=QLIMIT(W,StringWidth(A$)+4,1024)
		Case 2
			A$=GAD\CYCLE\TXT$
			For R=0 To GAD\CYCLE\NUMITEMS-1
				If W<StringWidth(GUI_PARSE$(A$,R))+4
					W=StringWidth(GUI_PARSE$(A$,R))+4
				EndIf
			Next
			GAD\W=W+16
		Case 3
			GAD\H=GUI_FONTHITE
			GAD\W=QLIMIT(W,GUI_FONTHITE,1024)
		Case 4
			W=QLIMIT(W,10,1024)
			H=QLIMIT(H,40,1024)
			GAD\W=W:GAD\H=H
			GG.GADGET=GAD\TXTBOX\SLIDER
			GG\X=GAD\X+W+2
			GG\SLIDER\SIZE=H-24
		Case 5
			If GAD\SLIDER\HORZ=1
				GAD\SLIDER\SIZE=QLIMIT(W,40,1024)
			Else
				GAD\SLIDER\SIZE=QLIMIT(H,40,1024)
			EndIf
		Case 7
			If W<GAD\TXTLIST\WD
				W=GAD\TXTLIST\WD
			EndIf
			GAD\W=W
			H=QLIMIT(H,37,1024)
			GAD\TXTLIST\LINES=Int(H/(GUI_FONTHITE-3))
			GAD\H=GAD\TXTLIST\LINES*(GUI_FONTHITE-3)+4
			H=GAD\H
			GG.GADGET=GAD\TXTLIST\SLIDER
			GG\X=GAD\X+W+2
			GG\SLIDER\SIZE=H-24
		Case 9
			GAD\W=QLIMIT(W,2,1024)
			GAD\H=QLIMIT(H,2,1024)
		Case 10
			A$=GAD\SELECTOR\TXT$
			For R=0 To GAD\SELECTOR\MAXL-1
				If W<StringWidth(GUI_PARSE$(A$,R))+4
					W=StringWidth(GUI_PARSE$(A$,R))+4
				EndIf
			Next
			GAD\W=W+11:GAD\H=GUI_FONTHITE-1
		Case 11
			GAD\W=QLIMIT(W,10,1024)
			GAD\H=QLIMIT(H,10,1024)
		Case 12
			GAD\W=QLIMIT(W,10,1024)
			GAD\H=QLIMIT(H,10,1024)
			FreeImage GAD\IMAGEBOX\IMAGE
			GAD\IMAGEBOX\IMAGE=CreateImage(GAD\W-1,GAD\H-1)
		Case 16
			GAD\W=QLIMIT(W,GAD\IMAGESEL\IW+10,1024)
			GAD\H=QLIMIT(H,GAD\IMAGESEL\IH+10,1024)
			GG.GADGET=GAD\IMAGESEL\SLIDER
			H=GAD\H
			GG\X=GAD\X+W+2
			GG\SLIDER\SIZE=H-24
			IX=GAD\X+5
			IW=GAD\IMAGESEL\IW
			Repeat
				IX=IX+IW+3
				C=C+1
				If IX+IW+2>GAD\X+GAD\W
					GAD\IMAGESEL\PLUS=C
					DONE=True
				EndIf
			Until DONE=True

	End Select
	GUI_REFRESH(GAD\WIN)
End Function

Function GUI_REFRESH_GAD(GAD.GADGET)
	;REDRAWS GADGET GAD
	WIN.WINDOW=GAD\WIN
	SetBuffer ImageBuffer(WIN\IMAGE)
	Viewport 0,0,WIN\W-2,WIN\H-2
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$:ACT=GAD\ACTIVE
	If GAD\TAB=WIN\TAB Or GAD\TAB=0 And WIN\STATUS=2
	Select GAD\GADTYPE
		Case 0		;NORMAL GUI_BUTTUN
			GUI_DRAWBUTTUN(X,Y,W,H,C$,0,ACT,WIN)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 1		;ON/OFF GUI_BUTTUN
			If GAD\ON=1
				GUI_DRAWBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
				GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
			Else
				GUI_DRAWBUTTUN(X,Y,W,H,C$,0,ACT,WIN)
			EndIf
			GUI_ADDZONE(GAD,X,Y,W,H,1)
			While MouseDown(1):Wend
		Case 2		;GUI_CYCLE GADGET
			GAD\CAPTION$=GUI_PARSE$(GAD\CYCLE\TXT$,GAD\CYCLE\ITEM)
			GUI_CYCLEBUT(X,Y,W,H,C$,0,ACT,WIN)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 3		;GUI_TXTINPUT
			If GAD\TXTINPUT\LABEL$<>""
				GUI_COL(0)
				Text X,Y,GAD\TXTINPUT\LABEL$
				X=X+GAD\TXTINPUT\OX;StringWidth(GAD\TXTINPUT\LABEL$)+2
			EndIf
			GUI_DARKBUT(X,Y,W,H,WIN)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
			;GAD\TXTINPUT\TXT$=GUI_OUTPUT_PRINT$(X+4,Y,W,GAD\CAPTION$,0,0)
			GUI_TEXTINPUTPRINT(WIN,GAD)	
		Case 4		;GUI_TXTBOX
			GAD\TXTBOX\CURL=GUI_SLD_VAL(GAD,GAD\TXTBOX\SLIDER)
			GUI_BOXBUT(X,Y,W,H,1,WIN)
			GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
			GUI_TBXPRINT(GAD,X,Y,W,H,C$,GAD\TXTBOX\CURL,GAD\TXTBOX\MAXL,GAD\TXTBOX\LINES,GAD\TXTBOX\CURPOS)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
			GUI_REFRESH_GAD(GAD\TXTBOX\SLIDER)
		Case 5
			SIZE#=GAD\SLIDER\SIZE
			PEC#=GAD\SLIDER\MAXV/(SIZE#-5)
			PLUS=QLIMIT(GAD\SLIDER\VAL/PEC#,1,SIZE#-9)
			If GAD\SLIDER\HORZ<>0
				GUI_DARKBUT(X,Y,PLUS+1,10,WIN)						;LEFT SIDE
				If PLUS+10<GAD\SLIDER\SIZE
					GUI_DARKBUT(X+PLUS+8,Y,GAD\SLIDER\SIZE-PLUS-8,10,WIN)	;RITE SIDE
				EndIf
				GUI_BOXBUT(X+PLUS,Y+1,8,8,0,WIN)
				GUI_AFRAME(X,Y,GAD\SLIDER\SIZE,10,WIN)
				GUI_ADDZONE(GAD,X,Y,GAD\SLIDER\SIZE,10,1)
				GUI_BOXBUT(X+SIZE+2,Y,10,10,0,WIN):GUI_ARROW("L",X+SIZE+4,Y+2,0)
				GUI_ADDZONE(GAD,X+GAD\SLIDER\SIZE+2,Y,10,10,2)
				GUI_BOXBUT(X+SIZE+14,Y,10,10,0,WIN):GUI_ARROW("R",X+SIZE+18,Y+2,0)
				GUI_ADDZONE(GAD,X+GAD\SLIDER\SIZE+14,Y,10,10,3)
			Else
				GUI_DARKBUT(X,Y,10,PLUS+1,WIN)						;LEFT SIDE
				If PLUS+10<GAD\SLIDER\SIZE
					GUI_DARKBUT(X,Y+PLUS+8,10,GAD\SLIDER\SIZE-PLUS-8,WIN)	;RITE SIDE
				EndIf
				GUI_BOXBUT(X+1,Y+PLUS,8,8,0,WIN)
				GUI_AFRAME(X,Y,10,GAD\SLIDER\SIZE,WIN)
				GUI_ADDZONE(GAD,X,Y,10,GAD\SLIDER\SIZE,1)
				GUI_BOXBUT(X,Y+SIZE+2,10,10,0,WIN):GUI_ARROW("U",X+2,Y+SIZE+4,0)
				GUI_ADDZONE(GAD,X,Y+GAD\SLIDER\SIZE+2,10,10,2)
				GUI_BOXBUT(X,Y+SIZE+14,10,10,0,WIN):GUI_ARROW("D",X+2,Y+SIZE+18,0)
				GUI_ADDZONE(GAD,X,Y+GAD\SLIDER\SIZE+14,10,10,3)
			EndIf	
		Case 6
			If GAD\INTEGER\LABEL$<>""
				GUI_COL(0)
				Text X,Y+1,GAD\INTEGER\LABEL$
				X=X+GAD\INTEGER\OX;StringWidth(GAD\INTEGER\LABEL$)+2
			EndIf
			If StringWidth(GAD\INTEGER\MAX)>StringWidth(GAD\INTEGER\MIN)
				W=StringWidth(GAD\INTEGER\MAX)+6
			Else
				W=StringWidth(GAD\INTEGER\MIN)+6
			EndIf
			GAD\CAPTION$=GAD\INTEGER\VAL
			GUI_DARKBUT(X,Y,W+13,H+2,WIN)
			GUI_COL(0):Y=Y+1
			Text X+2+(W/2)-StringWidth(GAD\INTEGER\VAL)/2,Y,GAD\INTEGER\VAL	
			GUI_ADDZONE(GAD,X,Y,W-1,H-2,1)
			X=X+W+2
			GUI_BOXBUT(X,Y,10,6,0,WIN):GUI_ARROW("U",X+2,Y,0)
			GUI_ADDZONE(GAD,X,Y,10,6,2)
			GUI_BOXBUT(X,Y+7,10,6,0,WIN):GUI_ARROW("D",X+2,Y+9,0)
			GUI_ADDZONE(GAD,X,Y+7,10,6,3)
			X=X+14
		
		Case 7
			R$="":MAXL=0
			GAD\TXTLIST\CURL=GUI_SLD_VAL(GAD,GAD\TXTLIST\SLIDER)
			GUI_BOXBUT(X,Y,W,H,1,WIN)
			GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
			GUI_TLSPRINT(GAD)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
			SL.GADGET=GAD\TXTLIST\SLIDER
			;GUI_REFRESH_GAD(SL);:GUI_COL(15):Text 0,0,GAD\CAPTION$
		Case 8
			If GAD\ON=0
				GUI_BOXBUT(X,Y,10,10,1,WIN)
			Else
				GUI_BOXBUT(X,Y,10,10,1,WIN)
				GUI_BOXBUT(X+1,Y+1,8,8,0,WIN)
				GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
			EndIf
			GUI_COL(0)
			Text X+14,Y-1,GAD\CAPTION$
			GUI_ADDZONE(GAD,X,Y,14+StringWidth(GAD\CAPTION$),10,1)
		Case 9
			If GAD\CAPTION$<>""
				Y=Y+GUI_FONTHITE/2
				Y=Y-1
			EndIf
			TEMP=CreateImage(W,H)
			GrabImage TEMP,X,Y
			GUI_COL(10)
			MaskImage TEMP,ColorRed(),ColorGreen(),ColorBlue()
			Select GAD\MISC
				Case 1				;PICTURE GUI_FRAME
					GUI_WINBUT(X,Y,W,H,WIN)
					GUI_AFRAME(X+1,Y+1,W-2,H-2,WIN)
					If GAD\CAPTION$<>""
						GUI_COL(10)
						If WIN\SKIN0_NORM<1
							Rect X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE
						Else
							GUI_SHP_LINE(WIN,X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE,GraphicsBuffer(),WIN\SKIN0_NORM,0,0)
							FreeImage TEMP:TEMP=-1
						EndIf
						GUI_COL(0)
						Text X+GUI_FONTHITE/2+2,Y-(GUI_FONTHITE/2)+1,GAD\CAPTION$
					EndIf
				Case 2				;DARK BOX GUI_FRAME
					GUI_DARKBUT(X,Y,W,H,WIN)
				Default
					GUI_AFRAME(X,Y,W,H,WIN)
					GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
					If GAD\CAPTION$<>""
						GUI_COL(10)
						If WIN\SKIN0_NORM<1
							Rect X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE
						Else
							GUI_SHP_LINE(WIN,X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE,GraphicsBuffer(),WIN\SKIN0_NORM,0,0)
							FreeImage TEMP:TEMP=-1
						EndIf
						GUI_COL(0)
						Text X+GUI_FONTHITE/2+2,Y-(GUI_FONTHITE/2)+1,GAD\CAPTION$
					EndIf
			End Select
				If TEMP>0
						If WIN\SKIN0_NORM>0
							FreeImage TEMP
							TEMP=-1
						EndIf
					EndIf
			If TEMP>0
				DrawImage TEMP,X,Y
				FreeImage TEMP
			EndIf
		Case 10
			GUI_DARKBUT(X,Y,W,H,WIN)
			GUI_COL(0)
			Text X+4,Y,GAD\CAPTION$
			GUI_ARROW("D",X+W-9,Y+5,0)
			GUI_ADDZONE(GAD,X,Y,W,H,1)	
		Case 11
			GUI_WINPRINT(X,Y,W,H,GAD\CAPTION$)
		Case 12
			GUI_AFRAME(X,Y,W,H,WIN)
			GUI_COL(0)
			Rect X+1,Y+1,W-2,H-2
			GUI_SHOWIMAGE(X+1,Y+1,W-1,H-1,GAD)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 13
			GUI_AFRAME(X,Y,W,H,WIN)
			GUI_COL(0)
			Rect X+1,Y+1,W-1,H-1
			SIZE#=100
			PEC#=GAD\PROG\MAXV/(SIZE#)
			PLUS=QLIMIT(GAD\PROG\VAL/PEC#,0,SIZE#)
			X=X+1:Y=Y+1
			COLPLUS#=255/100
			BLUE=230:RED=0:GREEN=0
			For XX=0 To PLUS
				Color RED,GREEN,BLUE
				RED=RED+COLPLUS#
				BLUE=BLUE-COLPLUS#
				Rect X+XX,Y,1,GUI_FONTHITE-2
			Next
			PW=(StringWidth(PLUS)+StringWidth("%"))/2
			PX=(X+50)-PW
			GUI_COL(0)
			Text PX+1,Y,PLUS+"%"
			GUI_COL(15)
			Text PX,Y-1,PLUS+"%"
		Case 14
			If WIN\TAB=GAD\MISC
				GUI_TABBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
			Else
				GUI_TABBUTTUN(X,Y,W,H,C$,0,ACT,WIN)
			EndIf
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 15
			If GAD\ON=1
				;GUI_DRAWBUTTUN(X,Y,W,H,"",1,ACT)
				If GAD\IMAGEBUT\BORDER<>0
					GUI_BUT(X,Y,W,H,1,WIN)
					DrawBlock GAD\IMAGEBUT\IMAGE1,X+3,Y+3
				Else
					DrawBlock GAD\IMAGEBUT\IMAGE1,X,Y
				EndIf
			Else
				If GAD\IMAGEBUT\BORDER<>0
					GUI_BUT(X,Y,W,H,0,WIN)
					DrawBlock GAD\IMAGEBUT\IMAGE0,X+2,Y+2
				Else
					DrawBlock GAD\IMAGEBUT\IMAGE0,X,Y
				EndIf
			EndIf
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 16
			TEMP=CreateImage(W,H)
			GrabImage TEMP,X,Y
			GUI_COL(10)
			MaskImage TEMP,ColorRed(),ColorGreen(),ColorBlue()
			;GUI_AFRAME(X,Y,W,H)
			GUI_WINBUT(X,Y,W,H,WIN)
			GUI_AFRAME(X+1,Y+1,W-2,H-2,WIN)
			DrawImage TEMP,X,Y:FreeImage TEMP
			GUI_DRAW_ISEL(GAD)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 17	
			GAD\TXTBOX\CURL=GUI_SLD_VAL(GAD,GAD\TXTBOX\SLIDER)
			GUI_BOXBUT(X,Y,W,H,1,WIN)
			GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
			GUI_MULTI_PRINT(GAD)
			GUI_ADDZONE(GAD,X,Y,W,H,1)
			GUI_REFRESH_GAD(GAD\TXTBOX\SLIDER)
		Case 18
			GetColor X-1,Y-1
			Rect X-1,Y-1,W+2,H+2
			If GAD\ON=1
				;GUI_DRAWBUTTUN(X,Y,W,H,"",1,ACT)
				If GAD\IMAGEBUT\BORDER<>0
					GUI_BUT(X,Y,W,H,1,WIN)
					DrawBlock GAD\IMAGEBUT\IMAGE1,X+3,Y+3
				Else
					DrawBlock GAD\IMAGEBUT\IMAGE1,X,Y
				EndIf
			Else
				If GAD\IMAGEBUT\BORDER<>0
					GUI_BUT(X,Y,W,H,0,WIN)
					DrawBlock GAD\IMAGEBUT\IMAGE0,X+2,Y+2
				Else
					DrawBlock GAD\IMAGEBUT\IMAGE0,X,Y
				EndIf
			EndIf
			GUI_ADDZONE(GAD,X,Y,W,H,1)
		Case 19
			If GAD\AFLOAT\LABEL$<>""
				GUI_COL(0)
				Text X,Y+1,GAD\AFLOAT\LABEL$
				X=X+GAD\AFLOAT\OX;StringWidth(GAD\INTEGER\LABEL$)+2
			EndIf
			If StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))>StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))
				W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))+6
			Else
				W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))+6
			EndIf
			GAD\CAPTION$=GUI_FLOATER$(GAD\AFLOAT\VAL#,GAD\AFLOAT\DEC)
			
			GUI_DARKBUT(X,Y,W+13,H+2,WIN)
			GUI_COL(0):Y=Y+1
			Text X+2+(W/2)-StringWidth(GAD\CAPTION$)/2,Y,GAD\CAPTION$
			GUI_ADDZONE(GAD,X,Y,W-1,H-2,1)
			X=X+W+2
			GUI_BOXBUT(X,Y,10,6,0,WIN):GUI_ARROW("U",X+2,Y,0)
			GUI_ADDZONE(GAD,X,Y,10,6,2)
			GUI_BOXBUT(X,Y+7,10,6,0,WIN):GUI_ARROW("D",X+2,Y+9,0)
			GUI_ADDZONE(GAD,X,Y+7,10,6,3)
			X=X+14
		Case 20
			GUI_AFRAME(X-1,Y-1,W+2,H+2,WIN)
			GUI_ADDZONE(GAD,X-1,Y-1,W,H,1)
	End Select
	EndIf
	SetBuffer BackBuffer()
End Function

Function GUI_SKIN_GAD(GAD.GADGET,INV=0)
	W=GAD\W:H=GAD\H:WIN.WINDOW=GAD\WIN
	SKN=GAD\SKIN
	SW=ImageWidth(SKN):SH=ImageHeight(SKN)
	WINBUFF=GraphicsBuffer()
	If WINBUFF<>ImageBuffer(WIN\IMAGE)
		XS=WIN\X:YS=WIN\Y
	EndIf
	SBUFF=ImageBuffer(SKN)
	LockBuffer WINBUFF
	LockBuffer SBUFF
	For YY=YS+GAD\Y To YS+GAD\Y+H
		For XX=XS+GAD\X To XS+GAD\X+W
			WCOL=ReadPixelFast(XX,YY,WINBUFF) And $FFFFFF
			;If WCOL>0
				SCOL=ReadPixelFast(SX,SY,SBUFF) And $FFFFFF
				RD=SCOL Shr 16
				GR=SCOL Shr 8 And 255
				BL=SCOL And 255
				For T=1 To 15
					If WCOL=GUI_RGB(T)
						RD=QLIMIT(RD+GUI_RGBADD(T),0,255)
						GR=QLIMIT(GR+GUI_RGBADD(T),0,255)
						BL=QLIMIT(BL+GUI_RGBADD(T),0,255)
						SCOL=(RD Shl 16)+(GR Shl 8)+BL
						WritePixelFast XX,YY,SCOL,WINBUFF
						Exit
					EndIf
				Next
			;EndIf	
			SX=SX+1:If SX=SW Then SX=0
		Next
		SY=SY+1:If SY=SH Then SY=0
	Next
	UnlockBuffer WINBUFF
	UnlockBuffer SBUFF
End Function

Function GUI_REFRESH(WIN.WINDOW)
	;REDRAWS WINDOW T AND ALL ITS GADGETS
	BUF=GraphicsBuffer()
	If WIN\IMAGE>0
		If BUF=ImageBuffer(WIN\IMAGE)
			BUFFOK=True
		EndIf
		FreeImage WIN\IMAGE
	EndIf
	WIN\IMAGE=CreateImage(WIN\W+1,WIN\H+1)
	If BUFFOK=True
		BUF=ImageBuffer(WIN\IMAGE)
	EndIf
	GUI_DRAW_WINDOW(WIN)
	GUI_DRAWGADS(WIN)
	SetBuffer BUF
End Function

Function GUI_GROUP_RET.GADGET(WIN.WINDOW,GROUP)
	;RETURNS THE ID OF WHICH GADGET IN GROUP "GROUP" IS SELECTED/ON
	RET.GADGET=Null
	If GROUP<>0
		For GAD.GADGET=Each GADGET
			If GAD\GROUP=GROUP And GAD\STATUS<>0 And GAD\WIN=WIN
				If GAD\ON>0
					RET.GADGET=GAD
				EndIf
			EndIf
		Next
	EndIf
	Return RET
End Function

Function GUI_WINFRONT(CT.WINDOW)
	;PULL WINDOW CT TO THE FRONT
	For WIN.WINDOW=Each WINDOW
		WIN\Z=WIN\Z+1
	Next
	CT\Z=0
	GUI_ACTIVEWIN=CT
	CT\STATUS=2
End Function

Function GUI_WINBACK(CT.WINDOW)
	;PUSH WINDOW CT TO THE BACK
	MAXZ=GUI_MAXWINZ()
	For WIN.WINDOW=Each WINDOW
		If WIN\Z>CT\Z And WIN\STATUS>1
			WIN\Z=WIN\Z-1
		EndIf
	Next
	CT\Z=MAXZ
	For WIN.WINDOW=Each WINDOW
		If WIN\Z=0
			CLOSEST.WINDOW=WIN
		EndIf
	Next
	GUI_ACTIVEWIN=CLOSEST
End Function

Function GUI_FOCUS(GAD.GADGET,IT=0)
	;MAKES GADGET GAD THE CURRENTLY SELECTED GADGET
	;ALSO "IT" CAN BE USED TO MAKE ANY ITEM IN A LIST 
	;THE CURENTLY SELECTED ITEM
	If GAD\WIN=GUI_ACTIVEWIN
	If GUI_GADEVENT$="INPUT" Or GUI_GADEVENT$="SCROLL"
		If GUI_GADHIT\SCROLL=1
			GUI_GADHIT\SCROLL=0
			GUI_REFRESH_GAD(GUI_GADHIT)
		EndIf
	EndIf
	GUI_GADHIT=GAD
	Select GAD\GADTYPE
		Case 10
			IT=QLIMIT(IT,0,GAD\SELECTOR\MAXL-1)
			GAD\CAPTION$=GUI_PARSE$(GAD\SELECTOR\TXT$,IT)
		Case 7
			GUI_GADEVENT$="SCROLL"
			IT=QLIMIT(IT,0,GAD\TXTLIST\MAXL-1)
		
		Case 4
			GUI_GADEVENT$="SCROLL"
		Case 5
			GUI_GADEVENT$="SCROLL"
		Case 3
			GUI_GADEVENT$="INPUT"
			GUI_OEVENT$="INPUT"
		Case 12
			GUI_GADEVENT$="SCROLL"
		Case 6
			GUI_GADEVENT$="INPUT"
	End Select
	;GUI_CLICKIT(GAD\WIN,GAD)
	GUI_REFRESH_GAD(GAD)
	GUI_WINEVENT$="HIT"
	EndIf
End Function

Function GUI_GAD_TO_TAB(GAD.GADGET,TG.GADGET)
	;ATTACHES GADGET GAD TO TAB TG, WHERE TG IS TAB GADGET NUMBER
	GAD\TAB=TG\MISC
	Select GAD\GADTYPE
		Case 4
			GUI_GAD_TO_TAB(GAD\TXTBOX\SLIDER,TG)
		Case 7
			GUI_GAD_TO_TAB(GAD\TXTLIST\SLIDER,TG)
		Case 16
			GUI_GAD_TO_TAB(GAD\IMAGESEL\SLIDER,TG)
	End Select
End Function

Function GUI_SETTAB(WIN.WINDOW,TB.GADGET)
	TAB=TB\MISC
	WIN\TAB=TAB
	GUI_REFRESH(WIN)
End Function

Function GUI_WINTAB(WIN.WINDOW,GAD.GADGET)
	;SETS THE CURRENT WINDOW ACTIVE TAB AS TB, WHERE TB IS A VAILD TAB GADGET ID NUMBER
	If GAD\GADTYPE=14
		If GAD\WIN=WIN
			WIN\TAB=GAD\MISC
		EndIf
	EndIf
	GUI_REFRESH(WIN)
End Function

Function GUI_WINXY(WIN.WINDOW,X,Y)
	;POSITION WINDOW T AT X,Y
	WIN\X=X:WIN\Y=Y
End Function

Function GUI_HIDEWIN(WIN.WINDOW)
	;HIDES WINDOW T
	WIN\STATUS=1
End Function

Function GUI_SHOWWIN(WIN.WINDOW)
	;SHOWS WINDOW T
	If WIN\STATUS<>0
		WIN\STATUS=2
	EndIf
End Function

Function GUI_SETFLOAT(GAD.GADGET,V#)
	GAD\AFLOAT\VAL=FLIMIT(V,GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
End Function

Function GUI_FLOATVAL#(GAD.GADGET)
	Return GAD\AFLOAT\VAL#
End Function

Function GUI_SETWIRE(GAD.GADGET,WIRE)
	For GC.GUI_CAMS=Each GUI_CAMS
		If GC\GAD=GAD
			GC\WIRE=WIRE
		EndIf
	Next
	;GUI_FRM=0
	
End Function

Function GUI_SETVAL(GAD.GADGET,V)
	;SETS A GADGETS VALUE
	Select GAD\GADTYPE
		Case 1		;ON/OFF
			V=QLIMIT(V,0,1)
			GAD\ON=V
		Case 2		;GUI_CYCLE
			GAD\CYCLE\ITEM=QLIMIT(V,0,GAD\CYCLE\NUMITEMS-1)
		Case 4		;GUI_TXTBOX
			SL.GADGET=GAD\TXTBOX\SLIDER
			SL\SLIDER\VAL=QLIMIT(V,SL\SLIDER\MINV,SL\SLIDER\MAXV)
		Case 5		;GUI_SLIDER
			GAD\SLIDER\VAL=QLIMIT(V,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
		Case 6		;GUI_INTEGER
			GAD\INTEGER\VAL=QLIMIT(V,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
		Case 8		;GUI_TICK BOX
			GAD\ON=QLIMIT(V,0,1)
		Case 12	;GUI_IMAGEBOX
			FreeImage GAD\IMAGEBOX\IMAGE
			GAD\IMAGEBOX\IMAGE=CopyImage(V)
			If GAD\IMAGEBOX\SCALE<>0
				ResizeImage GAD\IMAGEBOX\IMAGE,GAD\W-2,GAD\H-2
			EndIf	
			GAD\IMAGEBOX\W=ImageWidth(GAD\IMAGEBOX\IMAGE)
			GAD\IMAGEBOX\H=ImageHeight(GAD\IMAGEBOX\IMAGE)
		Case 13	;GUI_PROG
			GAD\PROG\VAL=QLIMIT(V,GAD\PROG\MINV,GAD\PROG\MAXV)
		Case 18
			GAD\ON=V
	End Select
	If GAD\GROUP>0 And V>0
		GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
		GUI_REFRESH(GAD\WIN)
	Else
		GUI_REFRESH_GAD(GAD)
	EndIf
End Function

Function GUI_SETTEXT(GAD.GADGET,A$)
	;SETS A GADGETS TEXT
	WIN.WINDOW=GAD\WIN
	Select GAD\GADTYPE
		Case 0		;GUI_BUT
			GAD\CAPTION$=A$
			If GAD\W<StringWidth(A$)+4
				GAD\W=StringWidth(A$)+4
				GUI_REFRESH(GAD\WIN)
			Else
				GUI_REFRESH_GAD(GAD)
			EndIf
		Case 1		;ON/OFF
			GAD\CAPTION$=A$
			If GAD\W<StringWidth(A$)+4
				GAD\W=StringWidth(A$)+4
				GUI_REFRESH(GAD\WIN)
			Else
				GUI_REFRESH_GAD(GAD)
			EndIf
		Case 2		;GUI_CYCLE
			W=GAD\W
			GAD\CYCLE\TXT$=A$
			GAD\CYCLE\NUMITEMS=GUI_TXTITEMS(A$,"#")
			ITEM=QLIMIT(0,0,GAD\CYCLE\NUMITEMS-1)
			GAD\CYCLE\ITEM=ITEM
			For R=0 To GAD\CYCLE\NUMITEMS-1
				If W<StringWidth(GUI_PARSE$(A$,R))+4
					W=StringWidth(GUI_PARSE$(A$,R))+4
				EndIf
			Next
			GAD\CAPTION$=GUI_PARSE$(A$,ITEM)
			If W<>GAD\W
				GAD\W=W+16
				GUI_REFRESH(GAD\WIN)
			Else
				GUI_REFRESH_GAD(GAD)
			EndIf
		Case 3		;GUI_TXTINPUT
			GAD\CAPTION$=A$
			GAD\TXTINPUT\TXT$=A$
			GUI_REFRESH_GAD(GAD)
		Case 4		;GUI_TXTBOX
			If Asc(Right$(A$,1))>31
				A$=A$+Chr$(10)
			EndIf
			GAD\CAPTION$=A$
			GUI_CLEAR_MULTI(GAD)
			GAD\TXTBOX\CURL=0:GAD\TXTBOX\CURPOS=1
			L=GUI_CNTLINES(A$):If L=1 Then L=2
			If L=-1
				A$=A$+Chr$(10)
				GAD\CAPTION$=A$
				L=1
			EndIf
			GAD\TXTBOX\MAXL=L
			GAD\TXTBOX\START.GUI_TEXLINE_TYPE=New GUI_TEXTLINE_TYPE
			AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
			POS=1
			For L=0 To GAD\TXTBOX\MAXL-1
				AL\ID=L
				AL\GAD=GAD
				AL\ICON=-1
				AL\TXT$=GUI_GETLINE$(A$,POS)
				POS=POS+Len(AL\TXT$)+1
				AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
				AL=AL\NXT.GUI_TEXTLINE_TYPE
				AL\GAD=GAD
			Next
			SL.GADGET=GAD\TXTBOX\SLIDER
			SL\SLIDER\VAL=0
			SL\SLIDER\MAXV=QLIMIT(GAD\TXTBOX\MAXL-GAD\TXTBOX\LINES,0,9999)
			GUI_REFRESH(GAD\WIN)
		Case 7		;GUI_TXTLIST
			For AL.GUI_TEXTLINE_TYPE=Each GUI_TEXTLINE_TYPE
				If AL<>Null
					If AL\GAD=GAD
						Delete AL.GUI_TEXTLINE_TYPE
					EndIf
				EndIf
			Next
			GAD\TXTLIST\CURL=0
			GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
			GAD\TXTLIST\MAXL=GUI_TXTITEMS(A$,"#")
			AL.GUI_TEXTLINE_TYPE=GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE
			For R=0 To GAD\TXTLIST\MAXL-1
				C$=GUI_PARSE$(A$,R)
				ICL=Instr(Upper$(C$),"*IC")
				If ICL=0
					AL.GUI_TEXTLINE_TYPE\TXT$=C$
					AL.GUI_TEXTLINE_TYPE\ICON=-1
				Else
					L=Len(C$)
					AL.GUI_TEXTLINE_TYPE\TXT$=Mid$(C$,1,L-4)
					AL.GUI_TEXTLINE_TYPE\ICON=Right$(C$,1)
				EndIf
				AL.GUI_TEXTLINE_TYPE\ID=R
				AL.GUI_TEXTLINE_TYPE\ACT=0
				AL.GUI_TEXTLINE_TYPE\GAD=GAD
				If R<GAD\TXTLIST\MAXL-1
					AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
					AL.GUI_TEXTLINE_TYPE=AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE
				EndIf
			Next
			SLD.GADGET=GAD\TXTLIST\SLIDER
			SH=GAD\TXTLIST\MAXL-GAD\TXTLIST\LINES
			If SH<0 Then SH=0
			SLD\SLIDER\MAXV=SH
			SLD\SLIDER\VAL=0
			GAD\CAPTION$=""
			GUI_REFRESH_GAD(GAD)
		Case 10	;GUI_SELECTOR
			GAD\CAPTION$="":W=GAD\W
			GAD\SELECTOR\MAXL=GUI_TXTITEMS(A$,"#")
			GAD\SELECTOR\TXT$=A$
			For R=0 To GAD\SELECTOR\MAXL-1
				If W<StringWidth(GUI_PARSE$(A$,R))+4
					W=StringWidth(GUI_PARSE$(A$,R))+4
				EndIf
			Next
			GAD\CAPTION$=GUI_PARSE$(A$,0)
			MAXHITE=Int((WIN\H-GAD\Y)/(GUI_FONTHITE-1))
			If MAXHITE>5
				If GAD\SELECTOR\MAXL<6
					GAD\SELECTOR\LINES=GAD\SELECTOR\MAXL
				Else
					GAD\SELECTOR\LINES=6
				EndIf
			Else
				If GAD\SELECTOR\MAXL<MAXHITE
					GAD\SELECTOR\LINES=GAD\SELECTOR\MAXL
				Else	
					GAD\SELECTOR\LINES=MAXHITE
				EndIf
			EndIf
			If GAD\W<>W
				GAD\W=W+11
				GUI_REFRESH(GAD\WIN)
			Else
				GUI_REFRESH_GAD(GAD)
			EndIf
		Case 11	;GUI_TEXT
			GAD\CAPTION$=A$
			GUI_REFRESH(GAD\WIN)
		Case 12	;GUI_IMAGEBOX
			TFormFilter 0
			If Instr(A$,":\\")
				A$=Replace$(A$,":\\",":\")
			EndIf
			If GAD\IMAGEBOX\IMAGE<>0
				FreeImage GAD\IMAGEBOX\IMAGE
			EndIf
			GAD\IMAGEBOX\FILE$=A$
			GAD\IMAGEBOX\IMAGE=LoadImage(A$)
			If GAD\IMAGEBOX\IMAGE=0
				GAD\IMAGEBOX\IMAGE=CreateImage(GAD\W,GAD\H)
			EndIf
			GAD\IMAGEBOX\W=ImageWidth(GAD\IMAGEBOX\IMAGE)
			GAD\IMAGEBOX\H=ImageHeight(GAD\IMAGEBOX\IMAGE)
			GAD\IMAGEBOX\X=0:GAD\IMAGEBOX\Y=0
			If GAD\IMAGEBOX\SCALE<>0
				ResizeImage GAD\IMAGEBOX\IMAGE,GAD\W-1,GAD\H-1
			EndIf
			GUI_REFRESH_GAD(GAD)
		Case 17
			GAD\CAPTION$=A$
			GUI_TEXT_TO_MULTI(GAD)
			GUI_REFRESH_GAD(GAD)
	End Select
End Function

Function GUI_GADVAL(GAD.GADGET)
	;RETURNS A GADGETS VALUE
	Select GAD\GADTYPE
		Case 1
			RET=GAD\ON
		Case 2
			RET=GAD\CYCLE\ITEM
		Case 3
			RET=GAD\CAPTION$
		Case 4
			RET=GAD\TXTBOX\CURL
		Case 5
			RET=GAD\SLIDER\VAL
		Case 6
			RET=GAD\INTEGER\VAL
		Case 8
			RET=GAD\ON
		Case 10
			RET=0:A$=GAD\CAPTION$:C$=GAD\SELECTOR\TXT$
			SL=1
			Repeat
				EL=Instr(C$,"#",SL)
				R$=Mid$(C$,SL,EL-SL)
				If R$=A$
					DONE=True
				Else
					SL=EL+1
					RET=RET+1
				EndIf
			Until DONE=True Or EL=0
		Case 12
			RET=GAD\IMAGEBOX\IMAGE
		Case 13
			RET=GAD\PROG\VAL
		Case 18
			RET=GAD\ON
		Case 20
			RET=GAD\MISC
	End Select
	Return RET
End Function

Function GUI_GADTEXT$(GAD.GADGET)
	;RETURNS A GADGETS TEXT
	Select GAD\GADTYPE
		Case 0		;GUI_BUT
			A$=GAD\CAPTION$
		Case 1		;ON/OFF
			A$=GAD\CAPTION$
		Case 2		;GUI_CYCLE
			A$=GAD\CAPTION$
		Case 3		;GUI_TXTINPUT
			A$=GAD\CAPTION$
		Case 4		;GUI_TXTBOX
			A$=GAD\CAPTION$
		Case 7		;GUI_TXTLIST
			A$=GAD\CAPTION$
		Case 8		;GUI_TICK BOX
			A$=GAD\CAPTION$
		Case 9		;GUI_FRAME
			A$=GAD\CAPTION$
		Case 10		;GUI_SELECTOR
			A$=GAD\CAPTION$
		Case 11		;GUI_TEXT
			A$=GAD\CAPTION$
		Case 12		;GUI_IMAGEBOX
			A$=GAD\IMAGEBOX\FILE$
		Case 14		;GUI_TAB
			A$=GAD\CAPTION$
		Case 17		;GUI_MULTI
			A$=GAD\CAPTION$
	End Select
	Return A$
End Function

Function GUI_GADACTIVE(GAD.GADGET,A)
	;ACTIVATES/DEACTIVATES GADGET GAD WHERE A IS [0/1]
	GAD\ACTIVE=A
	GUI_REFRESH(GAD\WIN)
End Function

Function GUI_SETSCALE(GAD.GADGET,ON_OFF)
	;SCALES/RESIZES IMAGEBOX`S GAD IMAGE WHERE ON_OFF = [0/1]
	If GAD\IMAGEBOX\FILE$<>"" And GAD\IMAGEBOX\FILE$<>"ERROR"
		GAD\IMAGEBOX\IMAGE=LoadImage(GAD\IMAGEBOX\FILE$)
	Else
		GAD\IMAGEBOX\IMAGE=CreateImage(GAD\W-2,GAD\H-2)
	EndIf
	TFormFilter 0;1
	GAD\IMAGEBOX\SCALE=ON_OFF
	If ON_OFF<>0 And GAD\IMAGEBOX\IMAGE<>0 And GAD\IMAGEBOX\FILE$<>""
		ResizeImage GAD\IMAGEBOX\IMAGE,GAD\W-2,GAD\H-2
	EndIf
	GAD\IMAGEBOX\W=ImageWidth(GAD\IMAGEBOX\IMAGE)
	GAD\IMAGEBOX\H=ImageHeight(GAD\IMAGEBOX\IMAGE)
	GAD\IMAGEBOX\X=0
	GAD\IMAGEBOX\Y=0
	GUI_REFRESH_GAD(GAD)
End Function

Function GUI_IMAGE_SELECTED(GAD.GADGET,I)
	RET=0
	If GUI_IMAGEON(GAD\CAPTION$,I)<>1
		RET=1
	EndIf
	Return RET
End Function

Function GUI_SELECTED_IMAGE(GAD.GADGET,S=0,E=999999)
	RET=-1
	If S>E
		D=S:S=E:E=D
	EndIf
	E=QLIMIT(E,0,GAD\IMAGESEL\N_IMAGES)
	For T=S To E
		If GUI_IMAGEON(GAD\CAPTION$,T)<>0
			Return T
		EndIf
	Next
	Return RET
End Function

Function GUI_CLEAR_IMAGES(GAD.GADGET)
	;CLEAR IMAGESELCTOR IMAGES
	FreeImage GAD\IMAGESEL\IMAGE
	GAD\IMAGESEL\IMAGE=CreateImage(GAD\IMAGESEL\IW,GAD\IMAGESEL\IH)
	GAD\IMAGESEL\CURPOS=0
	GAD\IMAGESEL\N_IMAGES=0
	GAD\CAPTION$=""
End Function

Function GUI_IMAGE_TO_SELECTOR(IMG,GAD.GADGET)
	R#=0
	OLDBUFFER=GraphicsBuffer()
	IMAGE=CopyImage(IMG)
	TFormFilter 0
	W#=ImageWidth(IMAGE)
	H#=ImageHeight(IMAGE)
	ResizeImage IMAGE,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH		
	RS=False
	If W<>GAD\IMAGESEL\IW And H<>GAD\IMAGESEL\IH
	If W>H
		R#=(H/W)
		SZ#=GAD\IMAGESEL\IH*R#
		ResizeImage IMAGE,GAD\IMAGESEL\IW,SZ#
		TEMP2=CreateImage(GAD\IMAGESEL\IW,GAD\IMAGESEL\IH)
		SetBuffer ImageBuffer(TEMP2)
		GUI_COL(9):Rect 0,0,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH
		GUI_COL(8):Rect 0,0,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH,0
		DrawBlock IMAGE,0,(GAD\IMAGESEL\IH/2)-SZ#/2
		FreeImage IMAGE
		IMAGE=TEMP2
		RS=True
	Else
		If H>W
			R#=(W/H)
			SZ#=GAD\IMAGESEL\IW*R#
			ResizeImage IMAGE,SZ#,GAD\IMAGESEL\IH
			TEMP2=CreateImage(GAD\IMAGESEL\IW,GAD\IMAGESEL\IH)
			SetBuffer ImageBuffer(TEMP2)
			GUI_COL(9):Rect 0,0,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH
			GUI_COL(8):Rect 0,0,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH,0
			DrawBlock IMAGE,(GAD\IMAGESEL\IW/2)-SZ#/2,0
			FreeImage IMAGE
			IMAGE=TEMP2
			RS=True
		Else
			;ResizeImage IMAGE,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH
		EndIf
	EndIf
	EndIf
	
	;ResizeImage IMAGE,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH
	If GAD\IMAGESEL\IMAGE<>0
		IMGE=GAD\IMAGESEL\IMAGE
		IMW=ImageWidth(IMGE)
	EndIf
	
	TEMP=CreateImage(IMW+GAD\IMAGESEL\IW,GAD\IMAGESEL\IH)
	SetBuffer ImageBuffer(TEMP)
	DrawBlock GAD\IMAGESEL\IMAGE,0,0
	DrawBlock IMAGE,IMW-GAD\IMAGESEL\IW,0
	FreeImage GAD\IMAGESEL\IMAGE
	FreeImage IMAGE
	GAD\IMAGESEL\IMAGE=TEMP
	GAD\IMAGESEL\N_IMAGES=GAD\IMAGESEL\N_IMAGES+1
	GAD\CAPTION$=GAD\CAPTION$+"0"
	;DebugLog GAD\IMAGESEL\CURPOS
	GAD=GAD\IMAGESEL\SLIDER
	GAD\SLIDER\MAXV=GAD\SLIDER\MAXV+1
	;DebugLog GAD\SLIDER\MAXV
	SetBuffer OLDBUFFER
End Function

Function GUI_IMAGE_TO_SELECTOR2(IMG,GAD.GADGET)
	OLDBUFFER=GraphicsBuffer()
	IMAGE=CopyImage(IMG)
	TFormFilter 0
	ResizeImage IMAGE,GAD\IMAGESEL\IW,GAD\IMAGESEL\IH
	If GAD\IMAGESEL\IMAGE<>0
		IMGE=GAD\IMAGESEL\IMAGE
		IMW=ImageWidth(IMGE)
	EndIf
	TEMP=CreateImage(IMW+GAD\IMAGESEL\IW,GAD\IMAGESEL\IH)
	SetBuffer ImageBuffer(TEMP)
	DrawBlock GAD\IMAGESEL\IMAGE,0,0
	DrawBlock IMAGE,IMW-GAD\IMAGESEL\IW,0
	FreeImage GAD\IMAGESEL\IMAGE
	FreeImage IMAGE
	GAD\IMAGESEL\IMAGE=TEMP
	GAD\IMAGESEL\N_IMAGES=GAD\IMAGESEL\N_IMAGES+1
	GAD\CAPTION$=GAD\CAPTION$+"0"
	;DebugLog GAD\IMAGESEL\CURPOS
	GAD=GAD\IMAGESEL\SLIDER
	GAD\SLIDER\MAXV=GAD\SLIDER\MAXV+1
	;DebugLog GAD\SLIDER\MAXV
	SetBuffer OLDBUFFER
End Function

Function GUI_DIR_TO_SELECTOR(DIREC$,GAD.GADGET)
	WCARD$="ALL IMAGES"
	FORD$="F"
	ChangeDir DIREC$				;CHANGE THE CURRENT DIRECTORY
	DIR=ReadDir(CurrentDir$())
	Repeat
		F$=NextFile$(DIR)				;GET THE NEXT ENTRY
		If F$=""							
			DONE=True					;IF THERE AIN`T ONE THEN WE`RE DONE
		Else
			T=FileType(F$)				;GET THE TYPE OF FILE
			F$=Trim$(F$)
			Select T
				Case 1
					If WCARD$="ALL IMAGES"
						If Upper$(Right$(F$,4))=".BMP" Or Upper$(Right$(F$,4))=".JPG" Or Upper$(Right$(F$,4))=".PNG"
							If Upper$(FORD$)="F"
								IMG=LoadImage(F$)
								GUI_IMAGE_TO_SELECTOR(IMG,GAD)
								FreeImage IMG
							EndIf
						EndIf
					EndIf
			End Select
		EndIf
	Until DONE=True
	CloseDir DIR
End Function

Function GUI_MENUSTATE(ITEM)
	;RETURNS IF MENU ITEM M IS ON OR OFF
	Return MITEM(ITEM)\MISC
End Function

Function GUI_SETSTATE(ITEM,OF)
	;SETS THE STATE OF MENUITEM "ITEM"
	If MITEM(ITEM)\TYP=3
		MITEM(ITEM)\MISC=OF
		If OF=True And MITEM(ITEM)\GROUP>0
			GUI_MENUGROUP(MITEM(ITEM)\GROUP,ITEM)
		EndIf			
	EndIf
End Function
	
Function GUI_TOGGLEITEM(ITEM,OF)
	;TOGGLES MENUITEM ACTIVE/DEACTIVE
	MITEM(ITEM)\ACTIVE=OF
End Function

Function GUI_GETBACK()
	;GRABS THE CURRENT BACKBUFFER() AS THE BACKGROUND IMAGE
	BUFF=GraphicsBuffer()
	If GUI_BG=0
		GUI_BG=CreateImage(GUI_SCREENW,GUI_SCREENH)
	EndIf
	SetBuffer BUFF
	GrabImage GUI_BG,0,0
End Function

Function GUI_GRABQUICKMENU(M)
	;SETS NORMAL MENU M AS A QUICK MENU
	GUI_QUICKMENU=M
	MENUS(M)\TYP=5
End Function

Function GUI_TITLECOLOR(WIN.WINDOW,RD,GR,BL)
	WIN\ERED#=RD:WIN\EGREEN#=GR:WIN\EBLUE#=BL
	GUI_WINTITLE(WIN,WIN\TITLE$)
End Function

Function GUI_WINTITLE(WIN.WINDOW,A$)
	;CHANGES WINDOW "T" TITLE TO A$
	WIN\TITLE$=A$
	BUFF=GraphicsBuffer()
	SetBuffer ImageBuffer(WIN\IMAGE)
	X=0:Y=0:W=WIN\W:H=WIN\H:Q=WIN\QUIT:S=WIN\SCALE:TITLE$=WIN\TITLE$:M=WIN\MIN
	If W<110 Then W=110:WIN\W=W
	If H<GUI_FONTHITE+6 Then H=GUI_FONTHITE+6:WIN\H=H
	
	;Rect X,Y,W,H,0
	If TITLE$<>""
		GUI_BOXBUT(X+2,Y+2,W-4,GUI_FONTHITE,1,WIN)
		GUI_COL(0)
		Rect X+2,Y+2,W-4,GUI_FONTHITE
		GUI_BOXBUT(X+3,Y+3,GUI_FONTHITE-2,GUI_FONTHITE-2,0,WIN)
		GUI_BOXBUT(X+W-GUI_FONTHITE-1,Y+3,GUI_FONTHITE-2,GUI_FONTHITE-2,0,WIN)
		GUI_BOXBUT(X+W-GUI_FONTHITE*2,Y+3,GUI_FONTHITE-2,GUI_FONTHITE-2,0,WIN)
		ERED#=WIN\ERED#:EGREEN#=WIN\EGREEN#:EBLUE#=WIN\EBLUE#
		RS#=ERED#/(W-4-GUI_FONTHITE-GUI_FONTHITE-GUI_FONTHITE)
		BS#=EBLUE#/(W-4-GUI_FONTHITE-GUI_FONTHITE-GUI_FONTHITE)
		GS#=EGREEN#/(W-4-GUI_FONTHITE-GUI_FONTHITE-GUI_FONTHITE)
		For XX=GUI_FONTHITE To W-5-GUI_FONTHITE-GUI_FONTHITE
			Color RD#,GR#,BL#
			RD#=RD#+RS#:GR#=GR#+GS#:BL#=BL#+BS#
			Rect X+XX+3,Y+3,1,GUI_FONTHITE-1
		Next
		GUI_COL(14)
		Locate X+GUI_FONTHITE+4,Y+2
		If X+GUI_FONTHITE+4+StringWidth(TITLE$)<(X+(W-GUI_FONTHITE*2))-2
			Text X+GUI_FONTHITE+4,Y+2,TITLE$
		Else
			L=1
			Repeat
				B$=Mid$(TITLE$,L,1)
				If X+GUI_FONTHITE+4+StringWidth(C$+B$)<(X+(W-GUI_FONTHITE*2))-2
					C$=C$+B$
				Else
					DONE=True
				EndIf
				L=L+1
			Until DONE=True Or L>Len(TITLE$)
			Text X+GUI_FONTHITE+4,Y+2,C$
		EndIf
		GUI_COL(12)
		Locate X+7,Y+3
		Text  X+7,Y+3,"X"
		GUI_COL(10)
		Locate X+5,Y+1
		Text X+5,Y+1,"X"
		If Q<>0
			GUI_COL(0)
		Else
			GUI_COL(9)
		EndIf
		Locate X+6,Y+2
		Text X+6,Y+2,"X"
		If WIN\STATUS=2
			GUI_COL(12)
			Rect X+W-GUI_FONTHITE+3,Y+GUI_FONTHITE-3,GUI_FONTHITE-7,3
			GUI_COL(10)
			Rect X+W-GUI_FONTHITE+1,Y+GUI_FONTHITE-5,GUI_FONTHITE-7,3
			If M<>0
				GUI_COL(0)
			Else
				GUI_COL(9)
			EndIf
			Rect X+W-GUI_FONTHITE+2,Y+GUI_FONTHITE-4,GUI_FONTHITE-7,3
		Else
			GUI_COL(12)
			Rect X+W-GUI_FONTHITE+3,Y+6,GUI_FONTHITE-7,3
			GUI_COL(10)
			Rect X+W-GUI_FONTHITE+1,Y+4,GUI_FONTHITE-7,3
			If M<>0
				GUI_COL(0)
			Else
				GUI_COL(9)
			EndIf
			Rect X+W-GUI_FONTHITE+2,Y+5,GUI_FONTHITE-7,3
		EndIf
		GUI_BOXBUT(X+W-GUI_FONTHITE*2+1,Y+4,7,7,1,WIN)
		GUI_WINBUT(X+W-GUI_FONTHITE*2+3,Y+6,7,7,WIN)
	EndIf
	SetBuffer BUFF
End Function

Function GUI_WHICHTAB.GADGET(WIN.WINDOW)
	;RETURNS THE TAB ID NUMBER OF WINDOW "W" CURRENT ACTIVE TAB
	RET.GADGET=Null
	If WIN\TAB=0
		RET=Null
	Else
		TAB=WIN\TAB
		For GAD.GADGET=Each GADGET
			If GAD\GADTYPE=14
				If GAD\WIN=WIN And GAD\MISC=TAB
					RET=GAD
				EndIf
			EndIf
		Next
	EndIf
	Return RET
End Function

Function GUI_INTCLICK(GAD.GADGET,CLC)
	;IF CLC=1 THEN INTGAD "GAD" ONLY ADVANCES ONCE PER MOUSECLICK CLICK
	If GAD\GADTYPE=6
		GAD\INTEGER\CLICK=CLC
		GAD\INTEGER\MISC=0
	EndIf
	If GAD\GADTYPE=19
		GAD\AFLOAT\CLICK=CLC
		GAD\AFLOAT\MISC=0
	EndIf
End Function

Function GUI_WINACTIVE(WIN.WINDOW,A)
	;ACTIVATES/DEAVIVATES ALL GADGETS ON WINDOW W
	A=QLIMIT(A,0,1)
	WIN\ACTIVE=A
End Function

Function GUI_WINOPTIONS(WIN.WINDOW,QUIT,SCALE,BACK,MIN,DRAG)
	;USED TO SET THE TASKBAR OPTIONS OF WINDOW T
	WIN\QUIT=QUIT:WIN\SCALE=SCALE:WIN\MIN=MIN
	WIN\DRAG=DRAG:WIN\BACK=BACK
	GUI_REFRESH(WIN)
End Function

Function GUI_QMENU_TO_WIN(M,WIN.WINDOW,GAD.GADGET)
	;ATTACHES QMENU M TO WINDOW T,TAB T
	If GAD<>Null
		If GAD\WIN=WIN 
			GAD\QMENU=M
		EndIf
	Else
		WIN\QMENU=M
	EndIf
End Function

Function GUI_REDRAW_ALL()
	GUI_SCREENW=GraphicsWidth()
	GUI_SCREENH=GraphicsHeight()
	GUI_GFXSETUP()
	For WIN.WINDOW=Each WINDOW
		If WIN\IMAGE<>0
			FreeImage WIN\IMAGE
			WIN\IMAGE=0
		EndIf
		If WIN\STATUS>1
			GUI_DRAW_WINDOW(WIN)
			GUI_DRAWGADS(WIN)
		EndIf
	Next
	SetBuffer BackBuffer()
End Function


;=========================================================================
;=========================================================================



;=========================================================================
;INTERNAL XLNT FUNCTIONS
;=========================================================================

;IMPORTANT :
;THESE ARE THE CORE FUNCTIONS OF THE XLNT-GUI SYSTEM
;PLEASE DO NOT ALTER THESE FUNCTIONS UNLESS YOU HAVE A GOOD IDEA OF WHAT
;YOU ARE DOING
;CONSIDER YOURSELF WARNED - HEHEHE

;=========================================================================
;BASIC DRAWING FUNCTIONS
;=========================================================================
	
Function GUI_COL(c)
	;SET A GREY SCALE COLOR 0-15
	c=c*17
	Color c,c,c
End Function

Function GUI_HLINE(x,y,X2)
	;HORIZNONTAL LINE
	;Line x,y,x2+1,y
	Rect x,y,(x2-x)+1,1
End Function

Function GUI_VLINE(x,y,y2)
	;VERTICAL LINE
	;Line x,y,x,y2+1
	Rect x,y,1,(y2-y)+1
End Function

Function GUI_ARROW(A$,X,Y,GUI_COL)
	;DRAWS AN ARROW IN SELECTED GREY COLOR
	GUI_COL(GUI_COL)
	H=7
	A$=Upper$(A$)
	Select A$
		Case "R"
			For T=0 To 3
				Rect X,Y,1,H
				X=X+1
				Y=Y+1
				H=H-2
			Next
		Case "L"
			X=X+4
			For T=0 To 3
				Rect X,Y,1,H
				X=X-1
				Y=Y+1
				H=H-2
			Next
		Case "D"
			For T=0 To 3
				Rect X,Y,H,1
				X=X+1
				Y=Y+1
				H=H-2
			Next
		Default 
			Y=Y+4
			For T=0 To 3
				Rect X,Y,H,1
				X=X+1
				Y=Y-1
				H=H-2
			Next
	End Select
End Function


Function GUI_BOXBUT(x,y,w,h,INV,WIN.WINDOW)
	;DRAWS A NORMAL OR INVERTED BUTTUN
	If WIN=Null
		WIN=GUI_DEF_WIN
	EndIf

	If WIN\SKIN0_NORM<1
		If INV=0
			GUI_COL(0)
			Rect x-1,y-1,w+2,h+2
			Color 200,0,0:Rect x,y,w,h
			x1=x:x2=x+w
			y1=y:y2=y+h
			GUI_COL(11)
			Rect x1,y1,w,h
			GUI_COL(14)
			GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
			GUI_COL(12)
			GUI_HLINE(x1+1,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
			GUI_COL(10) 
			GUI_HLINE(x1+2,y2-1,x2-1):GUI_VLINE(x2-1,y1+2,y2-2)
			GUI_COL(2)
			GUI_HLINE(x1+1,y2,x2):GUI_VLINE(x2,y1+1,y2-1)
		Else
			Color 200,0,0:Rect x,y,w,h
			x1=x:x2=x+w
			y1=y:y2=y+h
			GUI_COL(10)
			Rect x1,y1,w,h
			GUI_COL(0)
			GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
			GUI_COL(9)
			Plot x2,y1:Plot x1,y2
			GUI_COL(6)
			Plot x1+1,y1+1
			GUI_COL(7)
			GUI_HLINE(x1+2,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
			GUI_COL(8)
			Plot x2-1,y1+1:Plot x1+1,y2-1:Plot x1+2,y1+2
			GUI_COL(9)
			GUI_HLINE(x1+3,y1+2,x2-2):GUI_VLINE(x1+2,y1+3,y2-2)
			GUI_COL(11)
			GUI_HLINE(x1+3,y2-1,x2-1):GUI_VLINE(x2-1,y1+3,y2-2)
			GUI_COL(13)
			Plot x1+1,y2:Plot x2,y1+1
			GUI_COL(14)
			Plot x1+2,y2:Plot x2,y1+2
			GUI_COL(14)
			GUI_HLINE(x1+3,y2,x2):GUI_VLINE(x2,y1+3,y2-1)
		EndIf
	Else
		GUI_BOXBUT_SKIN(x,y,w,h,INV,WIN.WINDOW)
	EndIf
End Function

Function GUI_DARKBUT(x,y,w,h,WIN.WINDOW)
	;DRAWS AN INVERTED DARK BUTTUN
	If WIN=Null
		WIN=GUI_DEF_WIN
	EndIf

	If WIN\SKIN0_NORM<1
		Color 200,0,0:Rect x,y,w,h
		x1=x:x2=x+w
		y1=y:y2=y+h
		GUI_COL(9)
		Rect x1,y1,w,h
		GUI_COL(0)
		GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
		GUI_COL(7)
		Plot x2,y1:Plot x1,y2:GUI_HLINE(x1+2,y1+1,x2-1):GUI_VLINE(x1+1,y1+2,y2-1):Plot x1+2,y1+2
		GUI_COL(6)
		Plot x1+1,y1+1
		GUI_COL(8)
		GUI_HLINE(x1+3,y1+2,x2-1):GUI_VLINE(x1+2,y1+3,y2-1)
		GUI_COL(12)
		Plot x1+1,y2:Plot x2,y1+1
		GUI_COL(13)
		Plot x1+2,y2:Plot x2,y1+2
		GUI_COL(14)
		GUI_HLINE(x1+3,y2,x2):GUI_VLINE(x2,y1+3,y2-1)
	Else
		GUI_DARKBUT_SKIN(x,y,w,h,WIN.WINDOW)
	EndIf
End Function

Function GUI_WINBUT(x,y,w,h,WIN.WINDOW)
	;DRAWS A WINDOW COLORED BUTTUN
	If WIN<>Null
		If WIN\SKIN0_NORM<1
			x1=x:x2=x+w
			y1=y:y2=y+h
			GUI_COL(10)
			Rect x1,y1,w,h
			GUI_COL(14)
			GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
			GUI_COL(11)
			GUI_HLINE(x1+1,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
			GUI_COL(9)
			GUI_HLINE(x1+2,y2-1,x2-1):GUI_VLINE(x2-1,y1+2,y2-2)
			GUI_COL(0)
			GUI_HLINE(x1+1,y2,x2):GUI_VLINE(x2,y1+1,y2-1)
		Else
			GUI_WINBUT_SKIN(x,y,w,h,WIN.WINDOW)
		EndIf
	Else
		GUI_WINBUT(X,Y,W,H,GUI_DEF_WIN)
	EndIf
End Function

Function GUI_DRAW_WINDOW(WIN.WINDOW)
	;DRAWS A WINDOW
	If WIN\IMAGE=0
		WIN\IMAGE=CreateImage(WIN\W+1,WIN\H+1)
	EndIf
	SetBuffer ImageBuffer(WIN\IMAGE)
	X=0:Y=0:W=WIN\W:H=WIN\H:Q=WIN\QUIT:S=WIN\SCALE:TITLE$=WIN\TITLE$:M=WIN\MIN
	If W<110 And WIN\TITLE$<>"" Then W=110
	WIN\W=W
	If H<GUI_FONTHITE+6 Then H=GUI_FONTHITE+6:WIN\H=H
	GUI_WINBUT(X,Y,W,H,WIN)
	;Rect X,Y,W,H,0
	If TITLE$<>""
		GUI_BOXBUT(X+2,Y+2,W-4,GUI_FONTHITE,1,WIN)
		GUI_COL(0)
		Rect X+2,Y+2,W-4,GUI_FONTHITE
		GUI_BOXBUT(X+3,Y+3,GUI_FONTHITE-2,GUI_FONTHITE-2,0,WIN)
		GUI_BOXBUT(X+W-GUI_FONTHITE-1,Y+3,GUI_FONTHITE-2,GUI_FONTHITE-2,0,WIN)
		GUI_BOXBUT(X+W-GUI_FONTHITE*2,Y+3,GUI_FONTHITE-2,GUI_FONTHITE-2,0,WIN)
		ERED#=WIN\ERED#:EGREEN#=WIN\EGREEN#:EBLUE#=WIN\EBLUE#
		RS#=ERED#/(W-4-GUI_FONTHITE-GUI_FONTHITE-GUI_FONTHITE)
		BS#=EBLUE#/(W-4-GUI_FONTHITE-GUI_FONTHITE-GUI_FONTHITE)
		GS#=EGREEN#/(W-4-GUI_FONTHITE-GUI_FONTHITE-GUI_FONTHITE)
		For XX=GUI_FONTHITE To W-5-GUI_FONTHITE-GUI_FONTHITE
			Color RD#,GR#,BL#
			RD#=RD#+RS#:GR#=GR#+GS#:BL#=BL#+BS#
			Rect X+XX+3,Y+3,1,GUI_FONTHITE-1
		Next
		GUI_COL(14)
		Locate X+GUI_FONTHITE+4,Y+2
		If X+GUI_FONTHITE+4+StringWidth(TITLE$)<(X+(W-GUI_FONTHITE*2))-2
			Text X+GUI_FONTHITE+4,Y+2,TITLE$
		Else
			L=1
			Repeat
				B$=Mid$(TITLE$,L,1)
				If X+GUI_FONTHITE+4+StringWidth(C$+B$)<(X+(W-GUI_FONTHITE*2))-2
					C$=C$+B$
				Else
					DONE=True
				EndIf
				L=L+1
			Until DONE=True Or L>Len(TITLE$)
			Text X+GUI_FONTHITE+4,Y+2,C$
		EndIf
		GUI_COL(12)
		Locate X+7,Y+3
		Text  X+7,Y+3,"X"
		GUI_COL(10)
		Locate X+5,Y+1
		Text X+5,Y+1,"X"
		If Q<>0
			GUI_COL(0)
		Else
			GUI_COL(9)
		EndIf
		Locate X+6,Y+2
		Text X+6,Y+2,"X"
		If WIN\STATUS=2
			GUI_COL(12)
			Rect X+W-GUI_FONTHITE+3,Y+GUI_FONTHITE-3,GUI_FONTHITE-7,3
			GUI_COL(10)
			Rect X+W-GUI_FONTHITE+1,Y+GUI_FONTHITE-5,GUI_FONTHITE-7,3
			If M<>0
				GUI_COL(0)
			Else
				GUI_COL(9)
			EndIf
			Rect X+W-GUI_FONTHITE+2,Y+GUI_FONTHITE-4,GUI_FONTHITE-7,3
		Else
			GUI_COL(12)
			Rect X+W-GUI_FONTHITE+3,Y+6,GUI_FONTHITE-7,3
			GUI_COL(10)
			Rect X+W-GUI_FONTHITE+1,Y+4,GUI_FONTHITE-7,3
			If M<>0
				GUI_COL(0)
			Else
				GUI_COL(9)
			EndIf
			Rect X+W-GUI_FONTHITE+2,Y+5,GUI_FONTHITE-7,3
		EndIf
		GUI_BOXBUT(X+W-GUI_FONTHITE*2+1,Y+4,7,7,1,WIN)
		GUI_WINBUT(X+W-GUI_FONTHITE*2+3,Y+6,7,7,WIN)
	EndIf
	Color 0,0,0
	;GRID(WIN)	
End Function

Function GUI_EMBOSS(X,Y,C$,BASECOL)
	GUI_COL(BASECOL+1)
	Locate X+1,Y+1
	Text X+1,Y+1,C$
	GUI_COL(BASECOL-2)
	Text X,Y,C$
End Function

Function GUI_BUT(X,Y,W,H,INV,WIN.WINDOW)
If WIN=Null
		WIN=GUI_DEF_WIN
	EndIf

If WIN\SKIN0_NORM<1
If INV=0
		GUI_COL(0)
		Rect x-1,y-1,w+2,h+2
		Color 200,0,0:Rect x,y,w,h
		x1=x:x2=x+w
		y1=y:y2=y+h
		GUI_COL(11)
		Rect x1,y1,w,h
		GUI_COL(14)
		GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
		GUI_COL(12)
		GUI_HLINE(x1+1,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
		GUI_COL(10) 
		GUI_HLINE(x1+2,y2-1,x2-1):GUI_VLINE(x2-1,y1+2,y2-2)
		GUI_COL(2)
		GUI_HLINE(x1+1,y2,x2):GUI_VLINE(x2,y1+1,y2-1)
		GUI_COL(10)
		Rect X-1,Y-1,2,1
		Rect X+W-1,Y-1,2,1
		Rect X-1,Y-1,1,2
		Rect X+W,Y-1,1,2
		Color 0,0,0:Plot X,Y:Plot X+W-1,Y
		GUI_COL(10)
		;Color 255,0,0
		Rect X-1,Y+H,2,1
		Rect X+W-1,Y+H,2,1
		Rect X-1,Y+H-1,1,2
		Rect X+W,Y+H-1,1,2
		Color 0,0,0:Plot X,Y+H-1:Plot X+W-1,Y+H-1
		
	Else
		Color 200,0,0:Rect x,y,w,h
		x1=x:x2=x+w
		y1=y:y2=y+h
		GUI_COL(10)
		Rect x1,y1,w,h
		GUI_COL(0)
		GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
		GUI_COL(9)
		Plot x2,y1:Plot x1,y2
		GUI_COL(6)
		Plot x1+1,y1+1
		GUI_COL(7)
		GUI_HLINE(x1+2,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
		GUI_COL(8)
		Plot x2-1,y1+1:Plot x1+1,y2-1:Plot x1+2,y1+2
		GUI_COL(9)
		GUI_HLINE(x1+3,y1+2,x2-2):GUI_VLINE(x1+2,y1+3,y2-2)
		GUI_COL(11)
		GUI_HLINE(x1+3,y2-1,x2-1):GUI_VLINE(x2-1,y1+3,y2-2)
		GUI_COL(13)
		Plot x1+1,y2:Plot x2,y1+1
		GUI_COL(14)
		Plot x1+2,y2:Plot x2,y1+2
		GUI_COL(14)
		GUI_HLINE(x1+3,y2,x2):GUI_VLINE(x2,y1+3,y2-1)
		GUI_COL(10)
		Rect X,Y,2,1
		Rect X+W-2,Y,2,1
		Rect X+W,Y,1,2
		Rect X,Y,1,2
		Plot X+W-1,Y
		;GUI_COL(14)
		;Rect X+W-1,Y,1,2
		GUI_COL(11)
		Plot X+W,Y+2
		Color 0,0,0:Plot X+1,Y+1:GUI_COL(9):Plot X+W-1,Y+1
		GUI_COL(6):Plot X+W-3,Y
		GUI_COL(11)
		Rect X,Y+H-1,1,2:Rect X+W,Y+H-1,1,2
		Rect X,Y+H,2,1:Rect X+W-1,Y+H,2,1
		Color 0,0,0:Plot X+1,Y+H-1:GUI_COL(14):Plot X+W-1,Y+H-1
		;GUI_COL(5):Plot X+W-3,Y+H
	EndIf
Else
	GUI_BUT_SKIN(X,Y,W,H,INV,WIN.WINDOW)
EndIf
End Function

Function GUI_TABBUT(X,Y,W,H,INV,WIN.WINDOW)
If WIN=Null
		WIN=GUI_DEF_WIN
	EndIf

If WIN\SKIN0_NORM<1
If INV=0
		GUI_COL(0)
		Rect x-1,y-1,w+2,h+2
		Color 200,0,0:Rect x,y,w,h
		x1=x:x2=x+w
		y1=y:y2=y+h
		GUI_COL(12)
		Rect x1,y1,w,h
		GUI_COL(15)
		GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
		GUI_COL(13)
		GUI_HLINE(x1+1,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
		GUI_COL(11) 
		GUI_HLINE(x1+2,y2-1,x2-1):GUI_VLINE(x2-1,y1+2,y2-2)
		GUI_COL(3)
		GUI_HLINE(x1+1,y2,x2):GUI_VLINE(x2,y1+1,y2-1)
		GUI_COL(10)
		Rect X-1,Y-1,2,1
		Rect X+W-1,Y-1,2,1
		Rect X-1,Y-1,1,2
		Rect X+W,Y-1,1,2
		Color 0,0,0:Plot X,Y:Plot X+W-1,Y
	Else
		Color 200,0,0:Rect x,y,w,h
		x1=x:x2=x+w
		y1=y:y2=y+h
		GUI_COL(11)
		Rect x1,y1,w,h
		GUI_COL(0)
		GUI_HLINE(x1,y1,x2-1):GUI_VLINE(x1,y1+1,y2-1)
		GUI_COL(9)
		Plot x2,y1:Plot x1,y2
		GUI_COL(6)
		Plot x1+1,y1+1
		GUI_COL(7)
		GUI_HLINE(x1+2,y1+1,x2-2):GUI_VLINE(x1+1,y1+2,y2-2)
		GUI_COL(8)
		Plot x2-1,y1+1:Plot x1+1,y2-1:Plot x1+2,y1+2
		GUI_COL(9)
		GUI_HLINE(x1+3,y1+2,x2-2):GUI_VLINE(x1+2,y1+3,y2-2)
		GUI_COL(11)
		GUI_HLINE(x1+3,y2-1,x2-1):GUI_VLINE(x2-1,y1+3,y2-2)
		GUI_COL(13)
		Plot x1+1,y2:Plot x2,y1+1
		GUI_COL(14)
		Plot x1+2,y2:Plot x2,y1+2
		GUI_COL(14)
		GUI_HLINE(x1+3,y2,x2):GUI_VLINE(x2,y1+3,y2-1)
		GUI_COL(10)
		Rect X,Y,2,1
		Rect X+W-2,Y,2,1
		Rect X+W,Y,1,2
		Rect X,Y,1,2
		Plot X+W-1,Y
		;GUI_COL(14)
		;Rect X+W-1,Y,1,2
		GUI_COL(11)
		Plot X+W,Y+2
		Color 0,0,0:Plot X+1,Y+1:GUI_COL(9):Plot X+W-1,Y+1
		GUI_COL(6):Plot X+W-3,Y
	EndIf
Else
	GUI_TABBUT_SKIN(X,Y,W,H,INV,WIN.WINDOW)
EndIf
End Function

Function GUI_TABBUTTUN(X,Y,W,H,C$,INV,ACT,WIN.WINDOW)
	GUI_TABBUT(X,Y,W,H,INV,WIN.WINDOW)
	PY=Y
	If W>StringWidth(C$)+4
		PX=X+(W/2)-(StringWidth(C$)/2)
	Else
		PX=X+3
	EndIf
	If ACT<>0
		GUI_COL(0)
		If INV=0
			Locate PX,Y
			Text PX,Y,C$
		Else
			Locate PX+1,Y+1
			Text PX+1,Y,C$
		EndIf
	Else
		If INV=0
			GUI_EMBOSS(PX,Y,C$,GUI_BUTCOL0)
		Else
			GUI_EMBOSS(PX+1,Y+1,C$,GUI_BUTCOL1)
		EndIf
	EndIf
End Function

	
Function GUI_DRAWBUTTUN(X,Y,W,H,C$,INV,ACT,WIN.WINDOW)
	GUI_BUT(X,Y,W,H,INV,WIN.WINDOW)
	PY=Y
	If W>StringWidth(C$)+4
		PX=X+(W/2)-(StringWidth(C$)/2)
	Else
		PX=X+3
	EndIf
	If ACT<>0
		Color 0,0,0
		If INV=0
			Locate PX,Y
			Text PX,Y,C$
		Else
			Locate PX+1,Y+1
			Text PX+1,Y,C$
		EndIf
	Else
		If INV=0
			GUI_EMBOSS(PX,Y,C$,GUI_BUTCOL0)
		Else
			GUI_EMBOSS(PX+1,Y+1,C$,GUI_BUTCOL1)
		EndIf
	EndIf
End Function

Function GUI_CYCLEBUT(X,Y,W,H,C$,INV,ACT,WIN.WINDOW)
	GUI_DRAWBUTTUN(X,Y,W,H,"",INV,ACT,WIN)
	PX=X+7+(W/2)-(StringWidth(C$)/2)
	If ACT=1
		If INV=0
			GUI_COL(GUI_BUTCOL0-2)
			Rect X+12,Y+3,1,H-5
			GUI_COL(GUI_BUTCOL0+2)
			Rect X+13,Y+3,1,H-5
			GUI_ARROW("D",X+3,Y+8,0)
			GUI_ARROW("U",X+3,Y+2,0)
			GUI_COL(0):Locate PX,Y:Text PX,Y,C$
		Else
			GUI_COL(GUI_BUTCOL1+2)
			Rect X+12,Y+3,1,H-5
			GUI_COL(GUI_BUTCOL1-2)
			Rect X+13,Y+3,1,H-5
			GUI_ARROW("D",X+4,Y+9,0)
			GUI_ARROW("U",X+4,Y+3,0)
			GUI_COL(0):Locate PX+1,Y+1:Text PX+1,Y+1,C$
		EndIf
	Else
		GUI_EMBOSS(PX,Y,C$,GUI_BUTCOL0)
		GUI_COL(GUI_BUTCOL1+2)
		Rect X+12,Y+3,1,H-5
		GUI_COL(GUI_BUTCOL1-2)
		Rect X+13,Y+3,1,H-5
		GUI_ARROW("D",X+4,Y+9,GUI_BUTCOL0+1)
		GUI_ARROW("U",X+4,Y+3,GUI_BUTCOL0+1)
		GUI_ARROW("D",X+2,Y+7,GUI_BUTCOL0-2)
		GUI_ARROW("U",X+2,Y+1,GUI_BUTCOL0-2)
		GUI_ARROW("D",X+3,Y+8,GUI_BUTCOL0)
		GUI_ARROW("U",X+3,Y+2,GUI_BUTCOL0)
	EndIf
	
End Function

Function GUI_GETWORD$(A$,T)
	If A$<>""
		Repeat
			B$=Mid$(A$,T,1)
			If Asc(B$)<32
				RET$=C$+B$
				DONE=True
			Else
				If B$=" "
					DONE=True
					RET$=C$+" "
				Else
					C$=C$+B$
					T=T+1
				EndIf
			EndIf
			If T=Len(A$)+1
				RET$=C$
				DONE=True
			EndIf
		Until DONE=True
	EndIf
	Return RET$
End Function

Function GUI_MCPOS(GAD.GADGET)
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:A$=GAD\CAPTION$
	LINES=GAD\TXTBOX\LINES:MAXL=GAD\TXTBOX\MAXL:CURPOS=GAD\TXTBOX\CURL
	If A$<>""
		If CURPOS<1 Then CURPOS=1
		XX=X+4:YY=Y+2
		Repeat
			WORD$=GUI_GETWORD$(A$,CURPOS)			
			If WORD$<>""
				WW=StringWidth(WORD$)
				If XX+WW<X+W-4
					XX=XX+WW
					If Right$(WORD$,1)=Chr$(10)
						YY=YY+GUI_FONTHITE-3
						XX=X+4
						CL=CL+1
						If CL=LINES
							DONE=True
						EndIf
					EndIf
				Else
					If XX>X+4
						XX=X+4:YY=YY+GUI_FONTHITE-3
						CL=CL+1
					EndIf
					If CL<LINES
						PRINTED=False
						WL=1
						Repeat
							C$=Mid$(WORD$,WL,1)
							If C$<>Chr$(10)
								If XX+StringWidth(C$)<X+W-4
									XX=XX+StringWidth(C$)
								Else
									If XX>X+4
										XX=X+4:YY=YY+GUI_FONTHITE-3
										CL=CL+1
									EndIf
									If CL=LINES
										DONE=True:PRINTED=True
									Else
										XX=XX+StringWidth(C$)
									EndIf
								EndIf
							Else
								If XX>X+4
									XX=X+4:YY=YY+GUI_FONTHITE-3
									CL=CL+1
								EndIf
								If CL=LINES
									DONE=True:PRINTED=True
								EndIf
							EndIf
							WL=WL+1
							If WL=Len(WORD$)+1
								PRINTED=True
							EndIf
						Until PRINTED=True Or DONE=True
					Else
						DONE=True
					EndIf
				EndIf
				CURPOS=CURPOS+Len(WORD$)
			Else
				DONE=True
			EndIf	
		Until DONE=True
		EndIf
		GAD\TXTBOX\IX=QLIMIT(XX,GAD\X+4,99999)
		GAD\TXTBOX\IY=QLIMIT(YY-1,GAD\Y+3,99999)
End Function

Function GUI_CLEAR_MULTI(GAD.GADGET)
	AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
	Repeat
		If AL<>Null
			If AL\GAD=GAD And AL\GAD<>Null
				BL.GUI_TEXTLINE_TYPE=AL\NXT
				Delete AL.GUI_TEXTLINE_TYPE
				AL=BL
				If AL=Null
					DONE=True
				EndIf
			Else
				If AL\GAD=Null
					DONE=True
				EndIf
			EndIf
		Else
			DONE=True
		EndIf
	Until DONE=True
End Function

Function GUI_TEXT_TO_MULTI(GAD.GADGET)
	GUI_CLEAR_MULTI(GAD)
	;Stop
	IP=0
	IPS=GAD\TXTBOX\IP
	;GAD\TXTBOX\CURPOS=1:GAD\TXTBOX\CURL=0
	A$=GAD\CAPTION$
	If A$<>""
		GAD\TXTBOX\START.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
		AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
		L=1
		W=GAD\W:LINES=GAD\TXTBOX\LINES
		XX=4
		Repeat
			;Stop
			WORD$=GUI_GETWORD$(A$,L)
			If WORD$<>""
				WW=StringWidth(Trim$(WORD$))
				If XX+WW+8<W-15
					ALINE$=ALINE$+WORD$
					XX=XX+WW
					If Asc(Right$(WORD$,1))<31
						XX=4
						AL\TXT$=ALINE$
						ALINE$=""
						AL\ID=CL:AL\GAD=GAD
						CL=CL+1
						AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
						AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
					EndIf
				Else
					;If XX>4
						XX=4
						AL\TXT$=ALINE$
						ALINE$=""
						AL\ID=CL:AL\GAD=GAD
						CL=CL+1
						AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
						AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
					;EndIf	
					XX=4
					PRINTED=False
					WL=1
					Repeat
						C$=Mid$(WORD$,WL,1)
						If Asc(C$)>31
							If XX+StringWidth(C$)+8<W-15
								ALINE$=ALINE$+C$
								XX=XX+StringWidth(C$)
							Else
								XX=4
								AL\TXT$=ALINE$
								ALINE$=C$
								XX=XX+StringWidth(C$)
								AL\ID=CL:AL\GAD=GAD
								CL=CL+1
								AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
								AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE	
							EndIf
						Else
							If ALINE$<>""
								XX=4
								AL\TXT$=ALINE$
								ALINE$=C$
								XX=XX+StringWidth(C$)
								AL\ID=CL:AL\GAD=GAD
								CL=CL+1
								AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
								AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
							EndIf 
						EndIf
						WL=WL+1
						If WL>Len(WORD$)
							PRINTED=True
						EndIf
					Until PRINTED=True
				EndIf
			Else
				DONE=True
			EndIf
			L=L+Len(WORD$)
			If L>Len(A$)
				DONE=True
			EndIf			
		Until DONE=True
		If ALINE$<>""
			AL\TXT$=ALINE$
			ALINE$=""
			AL\ID=CL:AL\GAD=GAD
			CL=CL+1
			AL\NXT.GUI_TEXTLINE_TYPE=New GUI_TEXTLINE_TYPE
			AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
		EndIf
	EndIf
	GAD\TXTBOX\MAXL=CL
	GAD\TXTBOX\CURL=QLIMIT(CL,0,CL)
	SL.GADGET=GAD\TXTBOX\SLIDER
	SL\SLIDER\MAXV=QLIMIT(CL-GAD\TXTBOX\LINES,0,9999999)
	SL\SLIDER\VAL=QLIMIT(GAD\TXTBOX\CURL,SL\SLIDER\MINV,SL\SLIDER\MAXV)
End Function

Function GUI_MULTI_PRINT(GAD.GADGET)
	;BUFF=GraphicsBuffer()
	;T=GAD\WIN
	;SetBuffer ImageBuffer((WIN\IMAGE))
	;Viewport 0,0,WIN\W-4,WIN\H-4
	SL.GADGET=GAD\TXTBOX\SLIDER
	GAD\TXTBOX\CURL=SL\SLIDER\VAL
	CURLINE=GAD\TXTBOX\CURL
	GUI_COL(0)
	;Stop
	AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
	CPOS=GAD\TXTBOX\IP
	LP=0
	If AL<>Null
		X=GAD\X+4:Y=GAD\Y+2
		Repeat
			If AL<>Null
				If AL\GAD=GAD And AL\ID=CURLINE
					CURLINE=CURLINE+1
					If CURLINE=GAD\TXTBOX\MAXL
						DONE=True
					EndIf
					If CURLINE=GAD\TXTBOX\MAXL
						A$=Left$(AL\TXT$,QLIMIT(GAD\TXTBOX\IP-LP,1,9999))
						If Asc(Right$(A$,1))<32
						GAD\TXTBOX\IX=StringWidth(Trim$(A$))
						Else
						GAD\TXTBOX\IX=StringWidth(A$)
						EndIf
						GAD\TXTBOX\IY=CL	
					EndIf
					Text X,Y,Trim$(AL\TXT$)
					LP=LP+Len(AL\TXT$)
					CL=CL+1
					Y=Y+GUI_FONTHITE-3
					AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
					If CL=GAD\TXTBOX\LINES
						DONE=True
					EndIf
				Else
					AL.GUI_TEXTLINE_TYPE=AL\NXT.GUI_TEXTLINE_TYPE
				EndIf
			Else
				DONE=True
			EndIf	
		Until DONE=True
	Else
		GAD\TXTBOX\IX=0
		GAD\TXTBOX\IY=0
	EndIf
	;SetBuffer BUFF
End Function

Function GUI_MULTI_PRINT2(GAD.GADGET)
	GUI_COL(0)
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:A$=GAD\CAPTION$
	LINES=GAD\TXTBOX\LINES:MAXL=GAD\TXTBOX\MAXL:CURPOS=GAD\TXTBOX\CURL
	If A$<>""
		If CURPOS<1 Then CURPOS=1
		XX=X+4:YY=Y+2
		Repeat
			WORD$=GUI_GETWORD$(A$,CURPOS)			
			If WORD$<>""
				WW=StringWidth(WORD$)
				If XX+WW<X+W-4
					Text XX,YY,Trim$(WORD$)
					XX=XX+WW
					If Right$(WORD$,1)=Chr$(10)
						YY=YY+GUI_FONTHITE-3
						XX=X+4
						CL=CL+1
						If CL=LINES
							DONE=True
						EndIf
					EndIf
				Else
					If XX>X+4
						XX=X+4:YY=YY+GUI_FONTHITE-3
						CL=CL+1
					EndIf
					If CL<LINES
						PRINTED=False
						WL=1
						Repeat
							C$=Mid$(WORD$,WL,1)
							If C$<>Chr$(10)
								If XX+StringWidth(C$)<X+W-4
									Text XX,YY,C$
									XX=XX+StringWidth(C$)
								Else
									If XX>X+4
										XX=X+4:YY=YY+GUI_FONTHITE-3
										CL=CL+1
									EndIf
									If CL=LINES
										DONE=True:PRINTED=True
									Else
										Text XX,YY,C$
										XX=XX+StringWidth(C$)
									EndIf
								EndIf
							Else
								If XX>X+4
									XX=X+4:YY=YY+GUI_FONTHITE-3
									CL=CL+1
								EndIf
								If CL=LINES
									DONE=True:PRINTED=True
								EndIf
							EndIf
							WL=WL+1
							If WL=Len(WORD$)+1
								PRINTED=True
							EndIf
						Until PRINTED=True Or DONE=True
					Else
						DONE=True
					EndIf
				EndIf
				CURPOS=CURPOS+Len(WORD$)
			Else
				DONE=True
			EndIf	
		Until DONE=True
		EndIf
End Function

Function GUI_TBXPRINT(GAD.GADGET,X,Y,W,H,C$,CURL,MAXL,LINES,CURPOS)
	GUI_COL(0)
	AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
	Repeat
		If AL<>Null
			If AL\GAD=GAD And AL\ID=CURL
				FINI=True
			Else
				AL=AL\NXT.GUI_TEXTLINE_TYPE
			EndIf
		Else
			FINI=True
		EndIf
	Until FINI=True
	YY=Y
	Repeat
		XX=X
		If AL<>Null
			If AL\GAD=GAD
				A$=Trim$(AL\TXT$)
				GUI_OUTPUT_PRINT$(XX+4,YY,W-4,A$,1,0)
				AL=AL\NXT.GUI_TEXTLINE_TYPE
				YY=YY+GUI_FONTHITE-3
				CL=CL+1
				If CL=LINES
					DONE=True
				EndIf
			EndIf
		Else
			DONE=True
		EndIf
	Until DONE=True
End Function

Function GUI_TLSPRINT(GAD.GADGET)
	X=GAD\X+3:Y=GAD\Y+1:W=GAD\W
	GUI_COL(0)
	CL=GAD\TXTLIST\CURL:MX=GAD\TXTLIST\MAXL
	;If CL>0 Then Stop
	AL.GUI_TEXTLINE_TYPE=GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE
	While AL\ID<GAD\TXTLIST\CURL
		AL.GUI_TEXTLINE_TYPE=AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE
	Wend
	For YY=0 To GAD\TXTLIST\LINES-1
		If AL<>Null
			If AL.GUI_TEXTLINE_TYPE\GAD=GAD And AL.GUI_TEXTLINE_TYPE\ID=CL
				Color 0,0,0
				If AL\ICON>-1
					DrawBlock GUI_ICONS,X+1,Y+3,AL\ICON
					;Text X+13,Y,AL\TXT$
					GUI_OUTPUT_PRINT(X+13,Y,W-4-13,AL\TXT$,1,0)
				Else
					GUI_OUTPUT_PRINT(X,Y,W-4,AL\TXT$,1,0)
				EndIf
				If AL\TXT$=GAD\CAPTION$ And AL\TXT$<>"ERROR" And AL\TXT$<>""
					Color 0,0,150
					If AL\ICON>-1
						Rect X+12,Y+2,GAD\W-5-12,GUI_FONTHITE-4
						DrawBlock GUI_ICONS,X+1,Y+3,AL\ICON
						GUI_OUTPUT_PRINT(X+13,Y,W-4-13,AL\TXT$,1,15)
					Else
						Rect X,Y+2,GAD\W-5,GUI_FONTHITE-4
						GUI_OUTPUT_PRINT(X,Y,W-4,AL\TXT$,1,14)
					EndIf
				EndIf
				Y=Y+GUI_FONTHITE-3
			EndIf
			AL.GUI_TEXTLINE_TYPE=AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE
			CL=CL+1
		EndIf
	Next
End Function

Function GUI_TLSPRINT2(GAD.GADGET,X,Y,W,MAXL,C$)
	T=1
	GUI_COL(0)
	XX=X+3:YYY=Y+1
	For YY=0 To MAXL-1
		A$=GUI_GETLINE$(C$,T)
		T=T+Len(A$)+1
		If A$<>GAD\CAPTION$
			A$=GUI_OUTPUT_PRINT$(XX,YYY,W-4,A$,1,0)
		Else
			Color 0,0,150
			Rect X+2,YYY+1,W-3,GUI_FONTHITE-3
			GUI_COL(15)
			GUI_OUTPUT_PRINT(XX,YYY,W-4,GAD\CAPTION$,1,15)
		EndIf
		YYY=YYY+GUI_FONTHITE-3
	Next
End Function

Function GUI_OUTPUT_PRINT$(X,Y,W,C$,L,GUI_COL)
	SWW=StringWidth(C$)
	GUI_COL(GUI_COL):Locate X,Y
	If SWW<W-6
		Text X,Y,C$
		B$=C$
	Else
		If L<>0		;PRINT THE LEFT SIDE
			T=1
			Repeat
				A$=Mid$(C$,T,1)
				OLDB$=B$
				B$=B$+A$
				If StringWidth(B$)>W-6
					B$=OLDB$
					DONE=True
				Else
					T=T+1
				EndIf
			Until DONE=True Or T>Len(C$)
			Text X,Y,B$	
		Else
			T=Len(C$)
			Repeat
				A$=Mid$(C$,T,1)
				OLDB$=B$
				B$=B$+A$
				If StringWidth(B$)>W-6
					B$=OLDB$
					DONE=True
				Else
					T=T-1
				EndIf
			Until DONE=True Or T=1
			OLDB$=""
			For T=Len(B$) To 1 Step -1
				OLDB$=OLDB$+Mid$(B$,T,1)
			Next
			B$=OLDB$
			Text X,Y,B$
		EndIf
	EndIf
	Return B$
End Function

;=========================================================================


;=========================================================================
;MORE ADVANCED SHIT THAT I COULD`NT BE ARSED TO COMMENT
;=========================================================================

Function GUI_GETLINE$(A$,T)
	TEN=Instr(A$,Chr$(10),T)
	If TEN>0
		R$=Mid$(A$,T,TEN-T)
	Else
		R$=Mid$(A$,T)
	EndIf
	Return R$
End Function
		

Function GUI_GETLINE2$(A$,T)
	Repeat
		C$=Mid$(A$,T,1)
		If Asc(C$)>31
			B$=B$+C$
			T=T+1
		Else
		;	If Asc(C$)=13 Stop
			DONE=True
		EndIf
	Until DONE=True Or T>Len(A$)
	Return B$
End Function

Function GUI_TEXTINPUTPRINT(WIN.WINDOW,GAD.GADGET)
	C$=GAD\CAPTION$
	If C$="" Then C$=" "
	LENCAP=Len(C$)
	WIDCAP=StringWidth(C$)
	X=GAD\X+GAD\TXTINPUT\OX+3
	Y=GAD\Y:GUI_CURY=Y+1
	GUI_COL(0)
	Select GUI_INPUTMODE$
		Case "INSERT"
			If WIDCAP<GAD\W-6		;NOT AS BIG AS THE BOX 
				Text X,Y,C$
				A$=Left$(C$,GUI_INPUTOFFSET)
				GUI_CURX=X+StringWidth(A$)
			Else
				LT$=Left$(C$,GUI_INPUTOFFSET)
				RT$=Mid$(C$,GUI_INPUTOFFSET+1)
				If StringWidth(LT$)<GAD\W-6 Or StringWidth(RT$)<GAD\W-6
					If StringWidth(LT$)<GAD\W-6 ;PRINT THE LEFT PART THEN A BIT OF THE RIGHT
						GUI_CURX=X+StringWidth(LT$)
						T=1
						Repeat
							A$=Mid$(RT$,T,1)
							If StringWidth(LT$+B$+A$)<GAD\W-6
								B$=B$+A$
								T=T+1
							Else
								DONE=True
							EndIf	
						Until DONE=True Or T=Len(RT$)
						Text X,Y,LT$+B$
					Else
						If StringWidth(RT$)<GAD\W-6 ;PRINT THE RITE PART THEN A BIT OF THE LEFT
							T=Len(LT$)
							Repeat
								A$=Mid$(LT$,T,1)
								If StringWidth(RT$+B$+A$)<GAD\W-6
									B$=B$+A$
									T=T-1
								Else
									DONE=True
								EndIf	
							Until DONE=True Or T=1
							For T=Len(B$) To 1 Step-1
								OB$=OB$+Mid$(B$,T,1)
							Next
							GUI_CURX=X+StringWidth(OB$)
							Text X,Y,OB$+RT$
						EndIf	
					EndIf
				Else
					T=GUI_INPUTOFFSET
					Repeat
						A$=Mid$(LT$,T,1)
						If StringWidth(B$+A$)<GAD\W-6
							B$=B$+A$
							T=T-1
						Else
							DONE=True
						EndIf	
					Until DONE=True Or T=1
					For T=Len(B$) To 1 Step-1
						OB$=OB$+Mid$(B$,T,1)
					Next
					GUI_CURX=X+StringWidth(OB$)
					Text X,Y,OB$
				EndIf
			EndIf
		Default
			If WIDCAP<GAD\W-6		;NOT AS BIG AS THE BOX 
				Text X,Y,C$
				GUI_CURX=X+WIDCAP+1
			Else
				If C$="" Then C$=" "
				T=Len(C$)						;GOT TO PRINT THE RIGHT HAND SIDE
				Repeat
					A$=Mid$(C$,T,1)
					If StringWidth(B$+A$)<GAD\W-6
						B$=B$+A$
						T=T-1
					Else
						DONE=True
					EndIf
				Until DONE=True Or T=1
				For T=Len(B$) To 1 Step -1
					OLDB$=OLDB$+Mid$(B$,T,1)
				Next
				B$=OLDB$;:DebugLog B$
				Text X,Y,B$
				GUI_CURX=X+StringWidth(B$)+1
			EndIf
	End Select
End Function

Function GUI_GETMULTINPUT(WIN.WINDOW,GAD.GADGET,FLASH)
	ASCII=GUI_LASTKEY
	IX=GAD\TXTBOX\IX
	IY=GAD\Y
	IY=IY+(GAD\TXTBOX\IY*(GUI_FONTHITE-3))
	IY=IY+5
	IX=GAD\X+IX+4
	If GAD\TXTBOX\IP<1 Then GAD\TXTBOX\IP=1
	If FLASH=1
		If GAD\MISC>6
			GAD\MISC2=1-GAD\MISC2:GAD\MISC=0
			If GAD\MISC2=0
				GUI_REFRESH_GAD(GAD)
				;SetBuffer ImageBuffer(WIN\IMAGE)
				;GUI_COL(10)
				;Rect IX,IY,1,GUI_FONTHITE-6
			Else
				GUI_REFRESH_GAD(GAD)
				;GUI_COL(10)
				;Rect IX,IY,1,GUI_FONTHITE-6
				Color 0,0,0
				If GAD\TXTBOX\IY<GAD\TXTBOX\LINES+1
					SetBuffer ImageBuffer(WIN\IMAGE)
					Rect IX,IY,1,GUI_FONTHITE-6
				EndIf
				SetBuffer BackBuffer()
			EndIf
		Else
			GAD\MISC=GAD\MISC+1
		EndIf
	Else	
		If ASCII>31 And ASCII<128
			POS=GAD\TXTBOX\IP
			A$=GAD\CAPTION$
			;L$=(Left$(A$,POS-1))
			;L$=L$+Chr$(ASCII)
			;R$=Trim$(Mid$(A$,POS))
			A$=A$+Chr$(ASCII);L$+R$
			GAD\TXTBOX\IP=GAD\TXTBOX\IP+1
			GAD\CAPTION$=A$
			GUI_TEXT_TO_MULTI(GAD)
			;GUI_REFRESH_GAD(GAD\TXTBOX\SLIDER)
			GUI_REFRESH_GAD(GAD)
		Else
			Select ASCII
				Case 13
					GAD\CAPTION$=GAD\CAPTION$+Chr$(10)
					GAD\TXTBOX\IP=GAD\TXTBOX\IP+1
					GAD\TXTBOX\IX=0
					GAD\TXTBOX\IY=QLIMIT(GAD\TXTBOX\IY+1,0,GAD\TXTBOX\LINES)
					GAD\TXTBOX\CURL=GAD\TXTBOX\CURL+1
					GAD\TXTBOX\MAXL=GAD\TXTBOX\MAXL+1
					GUI_TEXT_TO_MULTI(GAD)
					GUI_REFRESH_GAD(GAD)
				Case 8
					L=Len(GAD\CAPTION$)-1
					If L<1
						GAD\CAPTION$=""
					Else
						GAD\CAPTION$=Left$(GAD\CAPTION$,L)
					EndIf
					GAD\TXTBOX\IP=GAD\TXTBOX\IP-1
					GUI_TEXT_TO_MULTI(GAD)
					GUI_REFRESH_GAD(GAD)
				Default
						
			End Select
		EndIf
	EndIf	
	
End Function

Function GUI_FINDLINE.GUI_TEXTLINE_TYPE(GAD.GADGET)
	AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START
	Repeat
		If AL<>Null
			If AL\GAD=GAD And AL\ID=GAD\TXTBOX\IL
				DONE=True
			Else
				AL=AL\NXT
			EndIf	
		Else 
			DONE=True
		EndIf
	Until DONE=True
	Return AL
End Function 
	

Function GUI_GETINPUT(WIN.WINDOW,GAD.GADGET,FLASH)
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$
	ASCII=GUI_LASTKEY
	LABEL$=GAD\TXTINPUT\LABEL$
	If LABEL$<>""
		X=X+GAD\TXTINPUT\OX;StringWidth(LABEL$)+2
	EndIf
	If FLASH=0
		Select GUI_INPUTMODE$
			Case "INSERT"
				CAP$=Left$(GAD\CAPTION$,GUI_INPUTOFFSET)
				RT$=Mid$(GAD\CAPTION$,GUI_INPUTOFFSET+1)
				If ASCII>31 And ASCII<127
					CAP$=CAP$+Chr$(ASCII)
					GUI_INPUTOFFSET=GUI_INPUTOFFSET+1
				Else
					Select ASCII
						Case 13
							;Stop
							GUI_GADEVENT$="NONE"
							GUI_WINEVENT$="NONE"
							EVENT$="TEXT INPUT"
						Case 8				;BACKSPACE
							CAP$=Mid$(CAP$,1,Len(CAP$)-1)
							GUI_INPUTOFFSET=QLIMIT(GUI_INPUTOFFSET-1,0,5000)
					End Select
				EndIf
				If KeyDown(211)
					RT$=Mid$(RT$,2)
				EndIf
				GAD\CAPTION$=CAP$+RT$
				If GUI_INPUTOFFSET=Len(GAD\CAPTION$)
					GUI_INPUTMODE$="APPEND"
				EndIf
				GUI_REFRESH_GAD(GAD)	
			Default
				GUI_INPUTMODE$="APPEND"
				If ASCII>31 And ASCII<127
					GAD\CAPTION$=GAD\CAPTION$+Chr$(ASCII)
				Else
					Select ASCII
						Case 13
							;Stop
							GUI_GADEVENT$="NONE"
							GUI_WINEVENT$="NONE"
							EVENT$="TEXT INPUT"
						Case 8				;BACKSPACE
							GAD\CAPTION$=Mid$(GAD\CAPTION$,1,Len(GAD\CAPTION$)-1)
					End Select
				EndIf
				GUI_INPUTOFFSET=Len(GAD\CAPTION$)
				GUI_REFRESH_GAD(GAD)
		End Select
		If KeyDown(203)
			GUI_INPUTMODE$="INSERT"
			GUI_INPUTOFFSET=QLIMIT(GUI_INPUTOFFSET-1,0,Len(GAD\CAPTION$))
		EndIf
		If KeyDown(205)
			GUI_INPUTMODE$="INSERT"
			GUI_INPUTOFFSET=QLIMIT(GUI_INPUTOFFSET+1,0,Len(GAD\CAPTION$))
			If GUI_INPUTOFFSET=Len(GAD\CAPTION$)
				GUI_INPUTMODE$="APPEND"
			EndIf
		EndIf
	Else
		If GAD\MISC>6
			GAD\MISC2=1-GAD\MISC2:GAD\MISC=0
			If GAD\MISC2=0
				GUI_REFRESH_GAD(GAD)
			Else
				GUI_REFRESH_GAD(GAD)
				If GUI_INPUTMODE$="INSERT"
					GUI_COL(14)
				Else
					GUI_COL(0)
				EndIf
				SetBuffer ImageBuffer(WIN\IMAGE)
				Rect GUI_CURX,Y+3,1,GUI_FONTHITE-5
				SetBuffer BackBuffer()
			EndIf
		Else
			GAD\MISC=GAD\MISC+1
		EndIf	
	EndIf
	If KeyDown(199) ;HOME
		GUI_INPUTOFFSET=0
		GUI_INPUTMODE$="INSERT"
	EndIf
	If KeyDown(207) ;END
		GUI_INPUTOFFSET=Len(GAD\CAPTION$)
		GUI_INPUTMODE$="APPEND"
	EndIf
	If GUI_INPUTOFFSET=Len(GAD\CAPTION$)
		GUI_INPUTMODE$="APPEND"
	EndIf
End Function

Function GUI_OLDINPUTCODE(WIN.WINDOW,GAD.GADGET,FLASH)
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$
	Select GAD\GADTYPE
		Case 3			;GUI_TXTINPUT
			LABEL$=GAD\TXTINPUT\LABEL$
		Case 6			;NUMERIC
			W=StringWidth(GAD\INTEGER\MAX)+4
			LABEL$=GAD\INTEGER\LABEL$
			Y=Y+1
	End Select
	
	If LABEL$<>""
		X=X+StringWidth(LABEL$)+2
	EndIf
	SetBuffer ImageBuffer(WIN\IMAGE)
	If GAD\GADTYPE=3
		If FLASH=0
			ASCII=GUI_LASTKEY
			If ASCII>31 And ASCII<127
				GAD\CAPTION$=GAD\CAPTION$+Chr$(ASCII)
				GUI_DARKBUT(X,Y,W,H,WIN)
				GAD\TXTINPUT\TXT$=GUI_OUTPUT_PRINT(X+4,Y,W,GAD\CAPTION$,0,0)
			Else
				Select ASCII
					Case 13				;ENTER
						GUI_GADEVENT$="NONE"
						GUI_REFRESH_GAD(GAD)
					Case 8				;BACKSPACE
						GUI_DARKBUT(X,Y,W,H,WIN)
						GAD\CAPTION$=Mid$(GAD\CAPTION$,1,Len(GAD\CAPTION$)-1)
						GAD\TXTINPUT\TXT$=GUI_OUTPUT_PRINT(X+4,Y,W,GAD\CAPTION$,0,0)
						;GUI_REFRESH_GAD(GAD)
						;SetBuffer ImageBuffer(WIN\IMAGE)
				End Select
			EndIf
		Else
			If GAD\MISC=7
				GAD\MISC2=1-GAD\MISC2:GAD\MISC=0
				If GAD\MISC2=0
					GUI_DARKBUT(X,Y,W,H,WIN)
					GAD\TXTINPUT\TXT$=GUI_OUTPUT_PRINT(X+4,Y,W,GAD\CAPTION$,0,0)
				Else
					GUI_DARKBUT(X,Y,W,H,WIN)
					GAD\TXTINPUT\TXT$=GUI_OUTPUT_PRINT(X+4,Y,W,GAD\CAPTION$,0,0)
					X=X+StringWidth(GAD\TXTINPUT\TXT$)+5
					GUI_COL(0)
					Rect X,Y+2,1,GUI_FONTHITE-2
				EndIf
			Else
				GAD\MISC=GAD\MISC+1
			EndIf
		EndIf
	Else
		If FLASH=0
			ASCII=GUI_LASTKEY
			If ASCII>=48 And ASCII<=57
				TXT$=GAD\CAPTION$
				TXT$=TXT$+Chr$(ASCII)
				If Int(TXT$)>GAD\INTEGER\MIN-1 And Int(TXT$)<GAD\INTEGER\MAX+1
					GAD\INTEGER\VAL=TXT$
					GAD\CAPTION$=TXT$
					GUI_REFRESH(GAD\WIN)
				EndIf
			Else
				Select ASCII
					Case 13				;ENTER
						GUI_GADEVENT$="NONE"
						GUI_REFRESH(GAD\WIN)
					Case 8				;BACKSPACE
						GAD\CAPTION$=Mid$(GAD\CAPTION$,1,Len(GAD\CAPTION$)-1)
						GAD\INTEGER\VAL=QLIMIT(GAD\CAPTION$,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
						GUI_REFRESH(GAD\WIN)
						SetBuffer ImageBuffer(WIN\IMAGE)
				End Select
			EndIf
		Else
			If GAD\MISC=7
				GAD\MISC2=1-GAD\MISC2:GAD\MISC=0
				If GAD\MISC2=0
					GUI_REFRESH(GAD\WIN)
				Else
					GUI_COL(0)
					Text X+2+(W/2)-StringWidth(GAD\INTEGER\VAL)/2,Y,GAD\INTEGER\VAL
					X=X+2+(W/2)-StringWidth(GAD\INTEGER\VAL)/2+StringWidth(GAD\CAPTION$)
					GUI_COL(0)
					Rect X,Y+2,1,GUI_FONTHITE-2	
				EndIf
			Else
				GAD\MISC=GAD\MISC+1
			EndIf
		EndIf	
	EndIf
	SetBuffer BackBuffer()			
End Function

Function GUI_NUMBERINPUT(WIN.WINDOW,GAD.GADGET,FLASH)
	If GAD\GADTYPE<>19
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$
	If GAD\INTEGER\LABEL$<>""
		X=X+GAD\INTEGER\OX;StringWidth(GAD\INTEGER\LABEL$)+2
	EndIf
	If StringWidth(GAD\INTEGER\MAX)>StringWidth(GAD\INTEGER\MIN)
		W=StringWidth(GAD\INTEGER\MAX)+6
	Else
		W=StringWidth(GAD\INTEGER\MIN)+6
	EndIf
	LABEL$=GAD\INTEGER\LABEL$
	Y=Y+1
	If LABEL$<>""
		;X=X+StringWidth(LABEL$)+2
	EndIf
	SetBuffer ImageBuffer(WIN\IMAGE)
	If FLASH=0
		ASCII=GUI_LASTKEY
		If (ASCII>=48 And ASCII<=57) Or ASCII=Asc("-")
			If Chr$(ASCII)="-"
				If -GAD\INTEGER\VAL>=GAD\INTEGER\MIN And -GAD\INTEGER\VAL<=GAD\INTEGER\MAX
					GAD\INTEGER\VAL=-GAD\INTEGER\VAL
				EndIf
			Else
			TXT$=GAD\CAPTION$
			TXT$=TXT$+Chr$(ASCII)
			If Int(TXT$)<GAD\INTEGER\MAX+1
				GAD\INTEGER\VAL=TXT$
				GAD\CAPTION$=TXT$
				GUI_REFRESH(GAD\WIN)
			EndIf
			EndIf
		Else
			Select ASCII
				Case 13				;ENTER
					GUI_GADEVENT$="NONE":GUI_WINEVENT$="NONE"
					GUI_REFRESH(GAD\WIN)
				Case 8				;BACKSPACE
					GAD\CAPTION$=Mid$(GAD\CAPTION$,1,Len(GAD\CAPTION$)-1)
					GAD\INTEGER\VAL=GAD\CAPTION$;QLIMIT(GAD\CAPTION$,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
					GUI_REFRESH(GAD\WIN)
					SetBuffer ImageBuffer(WIN\IMAGE)
			End Select
		EndIf
	Else
		If GAD\MISC>6
			GAD\MISC2=1-GAD\MISC2:GAD\MISC=0
			If GAD\MISC2=0
				GUI_REFRESH(GAD\WIN)
			Else
				GUI_COL(0)
				Text X+2+(W/2)-StringWidth(GAD\INTEGER\VAL)/2,Y,GAD\INTEGER\VAL
				X=X+2+(W/2)-StringWidth(GAD\INTEGER\VAL)/2+StringWidth(GAD\CAPTION$)
				GUI_COL(0)
				Rect X,Y+3,1,GUI_FONTHITE-5
			EndIf
		Else
			GAD\MISC=GAD\MISC+1
		EndIf
	EndIf
	;GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
	;GUI_REFRESH(GAD\WIN)	
	SetBuffer BackBuffer()
	Else
		GUI_FLOATINPUT(WIN,GAD,FLASH)
	EndIf			
End Function

Function GUI_FLOATINPUT(WIN.WINDOW,GAD.GADGET,FLASH)
X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$
	If GAD\AFLOAT\LABEL$<>""
		X=X+GAD\AFLOAT\OX;StringWidth(GAD\INTEGER\LABEL$)+2
	EndIf
	If StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))>StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))
		W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))+6
	Else
		W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))+6
	EndIf
	LABEL$=GAD\AFLOAT\LABEL$
	Y=Y+1
	If LABEL$<>""
		;X=X+StringWidth(LABEL$)+2
	EndIf
	SetBuffer ImageBuffer(WIN\IMAGE)
	If FLASH=0
		ASCII=GUI_LASTKEY
		If (ASCII>=48 And ASCII<=57) Or ASCII=Asc("-") Or ASCII=Asc(".")
			If Chr$(ASCII)="-"
				If -GAD\AFLOAT\VAL>=GAD\AFLOAT\MIN And -GAD\AFLOAT\VAL<=GAD\AFLOAT\MAX
					GAD\AFLOAT\VAL=-GAD\AFLOAT\VAL
				EndIf
			Else
			TXT$=GAD\CAPTION$
			TXT$=TXT$+Chr$(ASCII)
			If Int(TXT$)<GAD\AFLOAT\MAX+1
				GAD\AFLOAT\VAL=TXT$
				GAD\CAPTION$=TXT$
				GUI_REFRESH(GAD\WIN)
			EndIf
			EndIf
		Else
			Select ASCII
				Case 13				;ENTER
					GUI_GADEVENT$="NONE":GUI_WINEVENT$="NONE"
					GUI_REFRESH(GAD\WIN)
				Case 8				;BACKSPACE
					GAD\CAPTION$=GUI_FLOATER(Mid$(GAD\CAPTION$,1,Len(GAD\CAPTION$)-1),GAD\AFLOAT\DEC)
					GAD\AFLOAT\VAL=GAD\CAPTION$;QLIMIT(GAD\CAPTION$,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
					GUI_REFRESH(GAD\WIN)
					SetBuffer ImageBuffer(WIN\IMAGE)
			End Select
		EndIf
	Else
		If GAD\MISC>6
			GAD\MISC2=1-GAD\MISC2:GAD\MISC=0
			If GAD\MISC2=0
				GUI_REFRESH(GAD\WIN)
			Else
				GUI_COL(0)
				Text X+2+(W/2)-StringWidth(GUI_FLOATER$(GAD\AFLOAT\VAL,GAD\AFLOAT\DEC))/2,Y,GAD\CAPTION$
				X=X+2+(W/2)-StringWidth(GAD\AFLOAT\VAL)/2+StringWidth(GAD\CAPTION$)
				GUI_COL(0)
				Rect X,Y+3,1,GUI_FONTHITE-5
			EndIf
		Else
			GAD\MISC=GAD\MISC+1
		EndIf
	EndIf
SetBuffer BackBuffer()
End Function

Function GUI_AFRAME(X,Y,W,H,WIN.WINDOW)
	If WIN\SKIN0_NORM<1
		GUI_COL(0)
		GUI_HLINE(X,Y,X+W)
		GUI_VLINE(X,Y,Y+H)
		GUI_COL(14)
		GUI_HLINE(X,Y+H,X+W)
		GUI_VLINE(X+W,Y,Y+H)
	Else
		GUI_AFRAME_SKIN(X,Y,W,H,WIN)
	EndIf
End Function

Function GUI_SLD_VAL(CURGAD.GADGET,SLDGAD.GADGET)
	RET=SLDGAD\SLIDER\VAL
	Return RET
End Function

Function GUI_SHOWIMAGE(X,Y,W,H,GAD.GADGET)
	WIN.WINDOW=GAD\WIN
	IMG=GAD\IMAGEBOX\IMAGE
	SX=GAD\IMAGEBOX\X
	SY=GAD\IMAGEBOX\Y
	If GAD\IMAGEBOX\SCALE<>0
		DrawBlock IMG,X,Y
	Else
		If GAD\W>GAD\IMAGEBOX\W
			DX=(GAD\X+(GAD\W/2))-(GAD\IMAGEBOX\W/2)
			IW=GAD\IMAGEBOX\W
			SX=0
		Else
			DX=GAD\X+1
			IW=GAD\W-2
		EndIf
		If GAD\H>GAD\IMAGEBOX\H
			DY=(GAD\Y+(GAD\H/2))-(GAD\IMAGEBOX\H/2)
			IH=GAD\IMAGEBOX\H
			SY=0
		Else
			DY=GAD\Y+1
			IH=GAD\H-2
		EndIf
		OB=GraphicsBuffer()
		TEMP=CreateImage(IW,IH)
		SetBuffer ImageBuffer(GAD\IMAGEBOX\IMAGE)
		GrabImage TEMP,SX,SY
		SetBuffer ImageBuffer(WIN\IMAGE)
		Viewport 0,0,WIN\W-2,WIN\H-2
		DrawBlock TEMP,DX,DY
		FreeImage TEMP
		SetBuffer OB

	EndIf
End Function
	
Function GUI_DRAWGADS(WIN.WINDOW)
	SetBuffer ImageBuffer(WIN\IMAGE)
	Viewport 0,0,WIN\W-2,WIN\H-2
	For GAD.GADGET=Each GADGET
		If GAD\WIN=WIN And WIN\STATUS=2 And GAD\STATUS<>0 And GAD\STATUS<>10 And (GAD\TAB=WIN\TAB Or GAD\TAB=0)
			X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$:ACT=GAD\ACTIVE
			Select GAD\GADTYPE
				Case 0		;NORMAL GUI_BUTTUN
					GUI_DRAWBUTTUN(X,Y,W,H,C$,0,ACT,WIN)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 1		;ON/OFF GUI_BUTTUN
					If GAD\ON=1
						GUI_DRAWBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
						GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
						If GUI_RECHK=0 Then GUI_RECHK=1
					Else
						GUI_DRAWBUTTUN(X,Y,W,H,C$,0,ACT,WIN)
					EndIf
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 2		;GUI_CYCLE GADGET
					GUI_CYCLEBUT(X,Y,W,H,C$,0,ACT,WIN)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 3		;GUI_TXTINPUT
					If GAD\TXTINPUT\LABEL$<>""
						GUI_COL(0)
						Text X,Y,GAD\TXTINPUT\LABEL$
						X=X+GAD\TXTINPUT\OX;StringWidth(GAD\TXTINPUT\LABEL$)+2
					EndIf
					GUI_DARKBUT(X,Y,W,H,WIN)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
					;GAD\TXTINPUT\TXT$=GUI_OUTPUT_PRINT$(X+4,Y,W,GAD\CAPTION$,1,0)	
					GUI_TEXTINPUTPRINT(WIN,GAD)
				Case 4		;GUI_TXTBOX
					GAD\TXTBOX\CURL=GUI_SLD_VAL(GAD,GAD\TXTBOX\SLIDER)
					GUI_BOXBUT(X,Y,W,H,1,WIN)
					GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
					GUI_TBXPRINT(GAD,X,Y,W,H,C$,GAD\TXTBOX\CURL,GAD\TXTBOX\MAXL,GAD\TXTBOX\LINES,GAD\TXTBOX\CURPOS)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 5
					SIZE#=GAD\SLIDER\SIZE
					PEC#=GAD\SLIDER\MAXV/(SIZE#-5)
					PLUS=QLIMIT(GAD\SLIDER\VAL/PEC#,1,SIZE#-9)
					If GAD\SLIDER\HORZ<>0
						GUI_DARKBUT(X,Y,PLUS+1,10,WIN)						;LEFT SID
						If PLUS+10<GAD\SLIDER\SIZE
							GUI_DARKBUT(X+PLUS+8,Y,GAD\SLIDER\SIZE-PLUS-8,10,WIN)	;RITE SIDE
						EndIf
						GUI_BOXBUT(X+PLUS,Y+1,8,8,0,WIN)
						GUI_AFRAME(X,Y,GAD\SLIDER\SIZE,10,WIN)
						
						GUI_ADDZONE(GAD,X,Y,GAD\SLIDER\SIZE,10,1)
						GUI_BOXBUT(X+SIZE+2,Y,10,10,0,WIN):GUI_ARROW("L",X+SIZE+4,Y+2,0)
						GUI_ADDZONE(GAD,X+GAD\SLIDER\SIZE+2,Y,10,10,2)
						GUI_BOXBUT(X+SIZE+14,Y,10,10,0,WIN):GUI_ARROW("R",X+SIZE+18,Y+2,0)
						GUI_ADDZONE(GAD,X+GAD\SLIDER\SIZE+14,Y,10,10,3)
					Else
						GUI_DARKBUT(X,Y,10,PLUS+1,WIN)						;LEFT SIDE
						If PLUS+10<GAD\SLIDER\SIZE
							GUI_DARKBUT(X,Y+PLUS+8,10,GAD\SLIDER\SIZE-PLUS-8,WIN)
								;RITE SIDE
						EndIf
						GUI_BOXBUT(X+1,Y+PLUS,8,8,0,WIN)
						GUI_AFRAME(X,Y,10,GAD\SLIDER\SIZE,WIN)
						GUI_ADDZONE(GAD,X,Y,10,GAD\SLIDER\SIZE,1)
						GUI_BOXBUT(X,Y+SIZE+2,10,10,0,WIN):GUI_ARROW("U",X+2,Y+SIZE+4,0)
						GUI_ADDZONE(GAD,X,Y+GAD\SLIDER\SIZE+2,10,10,2)
						GUI_BOXBUT(X,Y+SIZE+14,10,10,0,WIN):GUI_ARROW("D",X+2,Y+SIZE+18,0)
						GUI_ADDZONE(GAD,X,Y+GAD\SLIDER\SIZE+14,10,10,3)
					EndIf	
				Case 6
					If GAD\INTEGER\LABEL$<>""
						GUI_COL(0)
						If GAD\ACTIVE>0
						Text X,Y+1,GAD\INTEGER\LABEL$
						Else
						GUI_EMBOSS(X,Y+1,GAD\INTEGER\LABEL$,10)
						EndIf
						X=X+GAD\INTEGER\OX;StringWidth(GAD\INTEGER\LABEL$)+2
					EndIf

					If StringWidth(GAD\INTEGER\MAX)>StringWidth(GAD\INTEGER\MIN)
						W=StringWidth(GAD\INTEGER\MAX)+6
					Else
						W=StringWidth(GAD\INTEGER\MIN)+6
					EndIf
					GAD\CAPTION$=GAD\INTEGER\VAL
					GUI_DARKBUT(X,Y,W+13,H+2,WIN)
					GUI_COL(0):Y=Y+1
					If GAD\ACTIVE<1
						GUI_COL(7)
					EndIf
					Text X+2+(W/2)-StringWidth(GAD\INTEGER\VAL)/2,Y,GAD\INTEGER\VAL	
					GUI_ADDZONE(GAD,X,Y,W-1,H-2,1)
					X=X+W+2
					GUI_BOXBUT(X,Y,10,6,0,WIN):GUI_ARROW("U",X+2,Y,0)
					GUI_ADDZONE(GAD,X,Y,10,6,2)
					GUI_BOXBUT(X,Y+7,10,6,0,WIN):GUI_ARROW("D",X+2,Y+9,0)
					GUI_ADDZONE(GAD,X,Y+7,10,6,3)
					X=X+14
				Case 7
					R$="":MAXL=0
					GAD\TXTLIST\CURL=GUI_SLD_VAL(GAD,GAD\TXTLIST\SLIDER)
					GUI_BOXBUT(X,Y,W,H,1,WIN)
					GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
					GUI_TLSPRINT(GAD)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 8
					If GAD\ON=0
						GUI_BOXBUT(X,Y,10,10,1,WIN)
					Else
						GUI_BOXBUT(X,Y,10,10,1,WIN)
						GUI_BOXBUT(X+1,Y+1,8,8,0,WIN)
						GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
						If GUI_RECHK=0 Then GUI_RECHK=1
					EndIf
					GUI_COL(0)
					If GAD\ACTIVE<>0
						Text X+14,Y-1,GAD\CAPTION$
					Else
						GUI_EMBOSS(X+14,Y-1,GAD\CAPTION$,10)
					EndIf	
					GUI_ADDZONE(GAD,X,Y,14+StringWidth(GAD\CAPTION$),10,1)
				Case 9
					If GAD\CAPTION$<>""
						Y=Y+GUI_FONTHITE/2
						Y=Y-1
					EndIf
					TEMP=CreateImage(W,H)
					GrabImage TEMP,X,Y
					GUI_COL(10)
					MaskImage TEMP,ColorRed(),ColorGreen(),ColorBlue()
					Select GAD\MISC
						Case 1				;PICTURE GUI_FRAME
							GUI_WINBUT(X,Y,W,H,WIN)
							GUI_AFRAME(X+1,Y+1,W-2,H-2,WIN)
							If GAD\CAPTION$<>""
								GUI_COL(10)
								If WIN\SKIN0_NORM<1
									Rect X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE
								Else
									GUI_SHP_LINE(WIN,X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE,GraphicsBuffer(),WIN\SKIN0_NORM,0,0)
									FreeImage TEMP:TEMP=-1
								EndIf
								GUI_COL(0)
								Text X+GUI_FONTHITE/2+2,Y-(GUI_FONTHITE/2)+1,GAD\CAPTION$
							EndIf
						Case 2				;DARK BOX GUI_FRAME
							GUI_DARKBUT(X,Y,W,H,WIN)
						Default
							GUI_AFRAME(X,Y,W,H,WIN)
							GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
							If GAD\CAPTION$<>""
								GUI_COL(10)
								If WIN\SKIN0_NORM<1
									Rect X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE
								Else
									GUI_SHP_LINE(WIN,X+GUI_FONTHITE/2,Y-(GUI_FONTHITE/2)+1,StringWidth(GAD\CAPTION$)+2,GUI_FONTHITE,GraphicsBuffer(),WIN\SKIN0_NORM,0,0)
									FreeImage TEMP:TEMP=-1
								EndIf

							
								GUI_COL(0)
								Text X+GUI_FONTHITE/2+2,Y-(GUI_FONTHITE/2)+1,GAD\CAPTION$
							EndIf
					End Select
				;;	DrawImage TEMP,X,Y
					If TEMP>0
						If WIN\SKIN0_NORM>0
							FreeImage TEMP
							TEMP=-1
						EndIf
					EndIf
					If TEMP>0
						DrawImage TEMP,X,Y
						FreeImage TEMP
					EndIf
				Case 10
					GUI_DARKBUT(X,Y,W,H,WIN)
					GUI_COL(0)
					Text X+4,Y,GAD\CAPTION$
					GUI_ARROW("D",X+W-9,Y+5,0)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 11
					GUI_WINPRINT(X,Y,W,H,GAD\CAPTION$)
				Case 12
					GUI_AFRAME(X,Y,W,H,WIN)
					GUI_COL(0)
					Rect X+1,Y+1,W-2,H-2
					GUI_SHOWIMAGE(X+1,Y+1,W-1,H-1,GAD)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 13
					GUI_AFRAME(X,Y,W,H,WIN)
					GUI_COL(0)
					Rect X+1,Y+1,W-1,H-1
					GUI_ADDZONE(GAD,X-1,Y-1,W,H,1)
				Case 14
					If WIN\TAB=GAD\MISC
						GUI_TABBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
					Else
						GUI_TABBUTTUN(X,Y,W,H,C$,0,ACT,WIN)
					EndIf
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 15
					If GAD\IMAGEBUT\BORDER<>0
						GUI_BUT(X,Y,W,H,0,WIN)
						DrawBlock GAD\IMAGEBUT\IMAGE0,X+2,Y+2
						If GAD\ACTIVE<1
								GUI_IMAGE_DARK(X+2,Y+2,ImageWidth(GAD\IMAGEBUT\IMAGE0),ImageHeight(GAD\IMAGEBUT\IMAGE0))
						EndIf
					Else
						DrawBlock GAD\IMAGEBUT\IMAGE0,X,Y
						If GAD\ACTIVE<1
							GUI_IMAGE_DARK(X,Y,ImageWidth(GAD\IMAGEBUT\IMAGE0),ImageHeight(GAD\IMAGEBUT\IMAGE0))
						EndIf
					EndIf
						GUI_ADDZONE(GAD,X,Y,W,H,1)
						Viewport 0,0,WIN\W-2,WIN\H-2
				Case 16
					TEMP=CreateImage(W,H)
					GrabImage TEMP,X,Y
					GUI_COL(10)
					MaskImage TEMP,ColorRed(),ColorGreen(),ColorBlue()
					;GUI_AFRAME(X,Y,W,H)
					GUI_WINBUT(X,Y,W,H,WIN)
					GUI_AFRAME(X+1,Y+1,W-2,H-2,WIN)
					DrawImage TEMP,X,Y:FreeImage TEMP
					GUI_DRAW_ISEL(GAD)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 17
					GAD\TXTBOX\CURL=GUI_SLD_VAL(GAD,GAD\TXTBOX\SLIDER)
					GUI_BOXBUT(X,Y,W,H,1,WIN)
					GUI_WINBUT(X+1,Y+1,W-2,H-2,WIN)
					GUI_MULTI_PRINT(GAD)
					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 18
					If GAD\ON=1
						;GUI_DRAWBUTTUN(X,Y,W,H,"",1,ACT)
						If GAD\IMAGEBUT\BORDER<>0
							GUI_BUT(X,Y,W,H,1,WIN)
							DrawBlock GAD\IMAGEBUT\IMAGE1,X+3,Y+3
							If GAD\ACTIVE<1
								GUI_IMAGE_DARK(X+3,Y+3,ImageWidth(GAD\IMAGEBUT\IMAGE1),ImageHeight(GAD\IMAGEBUT\IMAGE1))
							EndIf
						Else
							DrawBlock GAD\IMAGEBUT\IMAGE1,X,Y
							If GAD\ACTIVE<1
								GUI_IMAGE_DARK(X,Y,ImageWidth(GAD\IMAGEBUT\IMAGE1),ImageHeight(GAD\IMAGEBUT\IMAGE1))
							EndIf
						EndIf
					Else
						If GAD\IMAGEBUT\BORDER<>0
							GUI_BUT(X,Y,W,H,0,WIN)
							DrawBlock GAD\IMAGEBUT\IMAGE0,X+2,Y+2
							If GAD\ACTIVE<1
								GUI_IMAGE_DARK(X+2,Y+2,ImageWidth(GAD\IMAGEBUT\IMAGE0),ImageHeight(GAD\IMAGEBUT\IMAGE0))
							EndIf
						Else
							DrawBlock GAD\IMAGEBUT\IMAGE0,X,Y
							If GAD\ACTIVE<1
								GUI_IMAGE_DARK(X,Y,ImageWidth(GAD\IMAGEBUT\IMAGE0),ImageHeight(GAD\IMAGEBUT\IMAGE0))
							EndIf
						EndIf
					EndIf

					GUI_ADDZONE(GAD,X,Y,W,H,1)
				Case 19
						If GAD\AFLOAT\LABEL$<>""
						GUI_COL(0)
						If GAD\ACTIVE>0
						Text X,Y+1,GAD\AFLOAT\LABEL$
						Else
						GUI_EMBOSS(X,Y+1,GAD\AFLOAT\LABEL$,10)
						EndIf
						X=X+GAD\AFLOAT\OX;StringWidth(GAD\INTEGER\LABEL$)+2
					EndIf

						If StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))>StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))
				W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))+6
			Else
				W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))+6
			EndIf					
					GAD\CAPTION$=GUI_FLOATER$(GAD\AFLOAT\VAL#,GAD\AFLOAT\DEC)
					GUI_DARKBUT(X,Y,W+13,H+2,WIN)
					GUI_COL(0):Y=Y+1
					If GAD\ACTIVE<1
						GUI_COL(7)
					EndIf
					Text X+2+(W/2)-StringWidth(GAD\CAPTION$)/2,Y,GAD\CAPTION$	
					GUI_ADDZONE(GAD,X,Y,W-1,H-2,1)
					X=X+W+2
					GUI_BOXBUT(X,Y,10,6,0,WIN):GUI_ARROW("U",X+2,Y,0)
					GUI_ADDZONE(GAD,X,Y,10,6,2)
					GUI_BOXBUT(X,Y+7,10,6,0,WIN):GUI_ARROW("D",X+2,Y+9,0)
					GUI_ADDZONE(GAD,X,Y+7,10,6,3)
					X=X+14
			Case 20
				GUI_AFRAME(X-1,Y-1,W+2,H+2,WIN)
				GUI_ADDZONE(GAD,X-1,Y-1,W,H,1)
			End Select
		EndIf
	Next
	If GUI_RECHK=1
		GUI_RECHK=2
		GUI_REFRESH(WIN)
		GUI_RECHK=0
	EndIf
End Function

Function GUI_LPARSE$(GAD.GADGET,L)
	RET$="ERROR"
	AL.GUI_TEXTLINE_TYPE=GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE
	For YY=0 To GAD\TXTLIST\MAXL-1
		If AL<>Null
			If AL\GAD=GAD And AL\ID=L
				RET$=AL\TXT$
			EndIf
			AL.GUI_TEXTLINE_TYPE=AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE
		EndIf
	Next
	Return RET$
End Function

Function GUI_DRAW_ISEL(GAD.GADGET)
	OLDBUFFER=GraphicsBuffer()
	WIN.WINDOW=GAD\WIN
	
	X=GAD\X:Y=GAD\Y:W=GAD\W:H=GAD\H
	
	;TEMP=CreateImage(W,H)
	SetBuffer ImageBuffer(WIN\IMAGE)
	;GrabImage TEMP,X,Y
	;GUI_COL(10)
	;MaskImage TEMP,ColorRed(),ColorGreen(),ColorBlue()
	;GUI_AFRAME(X,Y,W,H)
	GUI_WINBUT(X,Y,W,H,WIN)
	GUI_AFRAME(X+1,Y+1,W-2,H-2,WIN)
	;DrawImage TEMP,X,Y:FreeImage TEMP

	
	
	DX=GAD\X+5:DY=GAD\Y+5
	VX=DX:VY=DY
	IX=DX:IY=DY
	VW=GAD\W-10:VH=GAD\H-10
	If GAD\X+VW>WIN\W-3
		VW=(WIN\W-2)-DX
	EndIf
	If GAD\Y+VH>WIN\H-3
		VH=(WIN\H-2)-DY
	EndIf
	
	IW=GAD\IMAGESEL\IW:IH=GAD\IMAGESEL\IH
	
	TEMP=CreateImage(IW,IH)
	
	CUR_I=GAD\IMAGESEL\CURPOS
	
	Repeat
		If CUR_I<GAD\IMAGESEL\N_IMAGES
			SetBuffer ImageBuffer(GAD\IMAGESEL\IMAGE)
			GrabImage TEMP,CUR_I*IW,0						
			SetBuffer ImageBuffer(WIN\IMAGE)
			Viewport VX,VY,VW,VH
			If GUI_IMAGEON(GAD\CAPTION$,CUR_I)=0
			
				DrawBlock TEMP,IX,IY
			Else
				DrawBlock TEMP,IX,IY
				;Color 240,240,255
				Color 0,0,0:Rect IX,IY,IW,IH,0
				
				GUI_COL(10)
				Color 255,255,255;0,0,0
				Rect IX+1,IY+1,IW-2,IH-2,0
				GUI_COL(0)
				Rect IX+2,IY+2,IW-4,IH-4,0
				gui_col(10)
				Rect IX+3,IY+3,IW-6,IH-6,0
				;Color 0,0,0:Rect IX-1,IY-1,IW+2,IH+2,0
			EndIf
			IX=IX+IW+3
			If IX+IW+2>GAD\X+GAD\W
				IX=DX
				IY=IY+IH+3
				If IY+IH+2>GAD\Y+GAD\H
					DONE=True
				EndIf
			EndIf
			CUR_I=CUR_I+1
		Else
			DONE=True
		EndIf
	Until DONE=True
	
	FreeImage TEMP
	SetBuffer OLDBUFFER
End Function

Function GUI_CLICKIT(WIN.WINDOW,GAD.GADGET)
	X=WIN\X+GAD\X:Y=WIN\Y+GAD\Y:W=GAD\W:H=GAD\H:C$=GAD\CAPTION$:ACT=GAD\ACTIVE
	If GAD\WIN=WIN And GAD\STATUS>0 And GAD\ACTIVE>0 And (GAD\TAB=0 Or GAD\TAB=WIN\TAB)
		SetBuffer BackBuffer():Viewport WIN\X,WIN\Y,WIN\W-2,WIN\H-2
		Select GAD\GADTYPE
			Case 0
				Viewport WIN\X,WIN\Y,WIN\W-2,WIN\H-2
				GetColor X-1,Y-1
				Rect X-1,Y-1,W+2,H+2
				GUI_DRAWBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
				Viewport 0,0,GUI_SCREEHW,GUI_SCREENH
			Case 1
				If GUI_GADEVENT$="HIT"
					GAD\ON=1-GAD\ON
				EndIf
				SetBuffer ImageBuffer(WIN\IMAGE)
				If GAD\ON=1
					GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
					If GUI_RECHK=0 Then GUI_RECHK=1
				EndIf
				GUI_DRAWBUTTUN(X-WIN\X,Y-WIN\Y,W,H,C$,GAD\ON,ACT,WIN)
				SetBuffer BackBuffer():Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			Case 2
				If GUI_GADEVENT$="HIT"
					GAD\CYCLE\ITEM=QWRAP(GAD\CYCLE\ITEM+1,0,GAD\CYCLE\NUMITEMS-1)
				EndIf
				C$=GAD\CAPTION$
				GUI_CYCLEBUT(X,Y,W,H,C$,1,ACT,WIN)
				VWait:SetBuffer FrontBuffer():Viewport WIN\X,WIN\Y,WIN\W-2,WIN\H-2
				GetColor X-1,Y-1
				Rect X-1,Y-1,W+2,H+2
				GUI_CYCLEBUT(X,Y,W,H,C$,1,ACT,WIN)
				Viewport 0,0,GUI_SCREENW,GUI_SCREENH
				DrawImage GUI_MOUSE,MouseX(),MouseY()
				GAD\CAPTION$=GUI_PARSE$(GAD\CYCLE\TXT$,GAD\CYCLE\ITEM)
				If GUI_GADEVENT$="HIT"
					GUI_REFRESH_GAD(GAD)
				EndIf
				SetBuffer BackBuffer()
			Case 3
				GUI_GADEVENT$="INPUT"
				FlushKeys
			Case 4
				GUI_GADEVENT$="SCROLL"
				GAD\SCROLL=1
			Case 5
				GUI_GADEVENT$="SCROLL"
				EVENT$="SCROLLER"
				GUI_SLIDER_SCROLL=1
				GAD\SCROLL=1
				Select GUI_ZONEHIT
					Case 1
						GUI_SLIDERGAD=GAD
						GUI_SLIDER_SCROLL=1
						SIZE#=GAD\SLIDER\SIZE
						PEC#=GAD\SLIDER\MAXV/(SIZE#-5)
						GX=MouseX():GY=MouseY()
						If GAD\SLIDER\HORZ<>0
							If GX<GAD\X+WIN\X Then GX=GAD\X+WIN\X
							If GX>GAD\X+WIN\X+SIZE# Then GX=GAD\X+WIN\X+SIZE# 
							XP=GX-WIN\X
							XP=XP-GAD\X
							GAD\SLIDER\VAL=QLIMIT(XP*PEC#,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
						Else
							If GY<GAD\Y+WIN\Y Then GY=GAD\Y+WIN\Y
							If GY>GAD\Y+WIN\Y+SIZE# Then GY=GAD\Y+WIN\Y+SIZE# 
							YP=GY-WIN\Y
							YP=YP-GAD\Y
							GAD\SLIDER\VAL=QLIMIT(YP*PEC#,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
						EndIf
					Case 2
						GUI_SLIDERGAD=Null
						GUI_SLIDER_SCROLL=0
						If GAD\SLIDER\HORZ=0
							GUI_BOXBUT(X,Y+GAD\SLIDER\SIZE+2,10,10,1,WIN):GUI_ARROW("U",X+2,Y+GAD\SLIDER\SIZE+4,0)
						Else
							GUI_BOXBUT(X+GAD\SLIDER\SIZE+2,Y,10,10,1,WIN):GUI_ARROW("L",X+GAD\SLIDER\SIZE+4,Y+2,0)
						EndIf
						GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL-1,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
					Case 3
						GUI_SLIDERGAD=Null
						GUI_SLIDER_SCROLL=0
						If GAD\SLIDER\HORZ<1
							GUI_BOXBUT(X,Y+GAD\SLIDER\SIZE+14,10,10,1,WIN):GUI_ARROW("D",X+2,Y+GAD\SLIDER\SIZE+18,0)
						Else
							GUI_BOXBUT(X+GAD\SLIDER\SIZE+14,Y,10,10,1,WIN):GUI_ARROW("R",X+GAD\SLIDER\SIZE+18,Y+2,0)
						EndIf
						GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL+1,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
				End Select
				If GAD\SLIDER\AGAD<>Null
					
					AGAD.GADGET=GAD\SLIDER\AGAD
					If AGAD\GADTYPE<>16
						;GUI_GADHIT=GAD\SLIDER\AGAD
						GUI_REFRESH_GAD(AGAD)
						GUI_REFRESH_GAD(GAD)
					Else
						GG.GADGET=GAD\SLIDER\AGAD
						VAL=QLIMIT(GAD\SLIDER\VAL,0,GG\IMAGESEL\N_IMAGES)
						VAL=Int(VAL/GG\IMAGESEL\PLUS)*GG\IMAGESEL\PLUS
						GG\IMAGESEL\CURPOS=VAL;QLIMIT(GAD\SLIDER\VAL,0,GG\IMAGESEL\N_IMAGES)
						GUI_REFRESH_GAD(GAD)
						GUI_REFRESH_GAD(GG)
						GUI_DELAY(10)
					EndIf
				Else
					GUI_REFRESH_GAD(GAD)
				EndIf
			Case 6
				If GAD\INTEGER\LABEL$<>""
					X=X+GAD\INTEGER\OX;StringWidth(GAD\INTEGER\LABEL$)+2
				EndIf
				If StringWidth(GAD\INTEGER\MAX)>StringWidth(GAD\INTEGER\MIN)
					W=StringWidth(GAD\INTEGER\MAX)+6
				Else
					W=StringWidth(GAD\INTEGER\MIN)+6
				EndIf
				Select GUI_ZONEHIT
					Case 1
						GUI_GADEVENT$="INPUT"
						EVENT$="INPUT"
					Case 2
						X=X+W+2
						GUI_BOXBUT(X,Y,10,6,1,WIN):GUI_ARROW("U",X+2,Y,0)
						;If GAD\INTEGER\MISC=0
							GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL+1,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
						;	If GAD\INTEGER\CLICK=1
						;		GAD\INTEGER\MISC=1
						;	EndIf
						;EndIf
						GUI_REFRESH_GAD(GAD):GUI_GADEVENT$="SCROLL":GAD\SCROLL=1:GUI_DELAY(50)
					Case 3
						X=X+W+2
						GUI_BOXBUT(X,Y+7,10,6,1,WIN):GUI_ARROW("D",X+2,Y+9,0)
						;If GAD\INTEGER\MISC=0
							GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL-1,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
						;	If GAD\INTEGER\CLICK=1
						;		GAD\INTEGER\MISC=1
						;	EndIf
						;EndIf
						GUI_REFRESH_GAD(GAD):GUI_GADEVENT$="SCROLL":GAD\SCROLL=1:GUI_DELAY(50)
				End Select
			Case 7
				;GUI_REFRESH_GAD(GAD)
				If GUI_GADEVENT$="HIT"
					LY=MouseY()-Y
					LY=QLIMIT(Int(LY/(GUI_FONTHITE-3)),0,GAD\TXTLIST\LINES-1)
					MY=Y+LY*(GUI_FONTHITE-3)
					A$=GUI_LPARSE$(GAD,GAD\TXTLIST\CURL+LY)
					If A$<>GAD\CAPTION$ And A$<>"ERROR"
						GAD\CAPTION$=A$
						GUI_GADEVENT$="SCROLL":GAD\SCROLL=1
					Else
						GAD\CAPTION$=""
						GUI_GADEVENT$="SCROLL":GAD\SCROLL=1
					EndIf
					GUI_REFRESH_GAD(GAD)
					While MouseDown(1) Wend
					;EndIf
				EndIf
				
				;GUI_REFRESH_GAD(GAD)
			Case 8
				If GUI_GADEVENT$="HIT"
					SetBuffer ImageBuffer(WIN\IMAGE):Viewport 0,0,WIN\W-2,WIN\H-2
					GAD\ON=1-GAD\ON
					If GAD\ON=0
						GUI_BOXBUT(GAD\X,GAD\Y,10,10,1,WIN)
					Else
						GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
						If GUI_RECHK=0 Then GUI_RECHK=1
						GUI_BOXBUT(GAD\X,GAD\Y,10,10,1,WIN)
						GUI_BOXBUT(GAD\X+3,GAD\Y+3,4,4,1,WIN)
						GUI_COL(0)
						Rect GAD\X+4,GAD\Y+4,3,3
					EndIf
					SetBuffer BackBuffer()
				EndIf
			Case 10
				MAXHITE=(GUI_SCREENH-Y)/(GUI_FONTHITE-1)
				If MAXHITE>5
					If GAD\SELECTOR\MAXL<6
						GAD\SELECTOR\LINES=GAD\SELECTOR\MAXL
					Else
						GAD\SELECTOR\LINES=6
					EndIf
				Else
					If MAXHITE<2 Then MAXHITE=2
					If GAD\SELECTOR\MAXL<MAXHITE
						GAD\SELECTOR\LINES=GAD\SELECTOR\MAXL
					Else	
						GAD\SELECTOR\LINES=MAXHITE
					EndIf
				EndIf
				Viewport 0,0,GUI_SCREENW,GUI_SCREENH
				GUI_BOXBUT(X,Y,W,GAD\SELECTOR\LINES*(GUI_FONTHITE-1)+2,0,WIN)
				GUI_COL(0)
				GUI_ARROW("U",X+W-9,Y+5,0)
				GUI_ARROW("D",X+W-9,Y+GAD\SELECTOR\LINES*(GUI_FONTHITE-1)-7,0)
				For YY=0 To GAD\SELECTOR\LINES-1
					A$=GUI_QPARSE$(GAD\SELECTOR\TXT$,GAD\SELECTOR\CURL+YY)
					If A$<>"ERROR"
						If RectsOverlap(MouseX(),MouseY(),1,1,X,Y+(YY*(GUI_FONTHITE-1)-1),W,GUI_FONTHITE-1)
							GUI_BOXBUT(X+1,Y+(YY*(GUI_FONTHITE-1)-1)+2,W-3,GUI_FONTHITE-2,1,WIN)
							GUI_COL(0)
							GAD\CAPTION$=A$
							If YY>0 And YY<GAD\SELECTOR\LINES-1
								GAD\MISC=0
							EndIf
							If YY=0
								If GAD\MISC=0
								GAD\SELECTOR\CURL=QLIMIT(GAD\SELECTOR\CURL-1,0,GAD\SELECTOR\MAXL)
								GAD\MISC=1
								Else
								GAD\MISC=QWRAP(GAD\MISC+1,0,10)
								EndIf
							EndIf
							If YY=GAD\SELECTOR\LINES-1
								If GAD\MISC=0
								GAD\SELECTOR\CURL=QLIMIT(GAD\SELECTOR\CURL+1,0,GAD\SELECTOR\MAXL-GAD\SELECTOR\LINES)
								GAD\MISC=1
								Else
								GAD\MISC=QWRAP(GAD\MISC+1,0,10)
								EndIf
							EndIf
							If YY=0
								GUI_ARROW("U",X+W-10,Y+5,0)
							EndIf
							If YY=GAD\SELECTOR\LINES-1
								GUI_ARROW("D",X+W-10,Y+GAD\SELECTOR\LINES*(GUI_FONTHITE-1)-7,0)
							EndIf
						Else
							GUI_COL(0)
						EndIf
						Text X+4,Y+1+(YY*(GUI_FONTHITE-1)-1),A$	
					EndIf
				Next	
				GUI_REFRESH_GAD(GAD)
				GUI_GADEVENT$="GUI_SELECTOR"
			Case 12
				XOFF=Sgn(MouseX()-(X+(W/2)))*4
				YOFF=Sgn(MouseY()-(Y+(H/2)))*4
				If GAD\IMAGEBOX\W>W
					GAD\IMAGEBOX\X=QLIMIT(GAD\IMAGEBOX\X+XOFF,0,GAD\IMAGEBOX\W-W)
				Else
					GAD\IMAGEBOX\X=(W/2)-(GAD\IMAGEBOX\W/2)
				EndIf
				If GAD\IMAGEBOX\H>H
					GAD\IMAGEBOX\Y=QLIMIT(GAD\IMAGEBOX\Y+YOFF,0,GAD\IMAGEBOX\H-H)
				Else
					GAD\IMAGEBOX\Y=(H/2)-(GAD\IMAGEBOX\H/2)
				EndIf
				GUI_REFRESH_GAD(GAD)
			Case 14
				GUI_TABBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
				WIN\TAB=GAD\MISC
				GUI_REFRESH(WIN)
			Case 15
				Viewport WIN\X,WIN\Y,WIN\W-2,WIN\H-2
				GetColor X-1,Y-1
				If GAD\IMAGEBUT\BORDER<>0
				Rect X-1,Y-1,W+2,H+2
				EndIf
				If GAD\IMAGEBUT\BORDER<>0
					GUI_DRAWBUTTUN(X,Y,W,H,C$,1,ACT,WIN)
					GUI_BUT(X,Y,W,H,1,WIN)
					X=X+3:Y=Y+3
				EndIf
				DrawBlock GAD\IMAGEBUT\IMAGE1,X,Y
				Viewport 0,0,GUI_SCREEHW,GUI_SCREENH				
			Case 16
				MX=MouseX()-WIN\X
				MY=MouseY()-WIN\Y
				IW=GAD\IMAGESEL\IW:IH=GAD\IMAGESEL\IH
				Y=GAD\Y+5
				CUR_POS=GAD\IMAGESEL\CURPOS
				If GUI_GADEVENT$="HIT"
				Repeat
					X=GAD\X+5
					Repeat
						If RectsOverlap(MouseX(),MouseY(),1,1,X+WIN\X,Y+WIN\Y,IW,IH)
							DONE=True
							If GAD\IMAGESEL\EXC<>1
								If GUI_IMAGEON(GAD\CAPTION$,CUR_POS)=0
									GAD\CAPTION$=GUI_SETON$(GAD\CAPTION$,CUR_POS)
								Else
									GAD\CAPTION$=GUI_SETOFF$(GAD\CAPTION$,CUR_POS)
								EndIf
							Else
								If GUI_IMAGEON(GAD\CAPTION$,CUR_POS)=0
									If Len(GAD\CAPTION$)>1
										For CNT=1 To Len(GAD\CAPTION$)
											R$=R$+"0"
										Next
										GAD\CAPTION$=R$
									EndIf
									GAD\CAPTION$=GUI_SETON$(GAD\CAPTION$,CUR_POS)
								Else
									GAD\CAPTION$=GUI_SETOFF$(GAD\CAPTION$,CUR_POS)
								EndIf	
							EndIf	
						Else
							X=X+IW+3
							CUR_POS=CUR_POS+1
						EndIf
					Until X+IW+2>GAD\W Or DONE=True Or CUR_POS=GAD\IMAGESEL\N_IMAGES
					Y=Y+IH+3
				Until Y+2>GAD\H Or DONE=True Or CUR_POS=GAD\IMAGESEL\N_IMAGES
				GUI_REFRESH_GAD(GAD)
				EndIf
			Case 17
				GUI_GADEVENT$="INPUT"
				X=MouseX()-WIN\X:Y=MouseY()-WIN\Y
				X=X-GAD\X;:Y=Y-GAD\Y
				;X=X-2:Y=Y-2
				;Y=Int(Y/(GUI_FONTHITE-3))
				;LY=QLIMIT(GAD\TXTBOX\CURL+Y,0,GAD\TXTBOX\MAXL)
				LY=QLIMIT(GAD\TXTBOX\MAXL-GAD\TXTBOX\LINES,0,99999999)
				AL.GUI_TEXTLINE_TYPE=GAD\TXTBOX\START.GUI_TEXTLINE_TYPE
				Repeat
					If AL<>Null
						If AL\GAD=GAD
							If AL\ID=LY
								POS=POS+Len(AL\TXT$)
								LX=StringWidth(Trim$(AL\TXT$))
								DONE=True
								IP=Len(AL\TXT$)
							Else
								POS=POS+Len(AL\TXT$)
								AL=AL\NXT
							EndIf
						Else
							AL=AL\NXT
						EndIf
					Else
						DONE=True
					EndIf
				Until DONE=True
				GAD\TXTBOX\CURL=LY;GAD\TXTBOX\MAXL
				GAD\TXTBOX\IP=Len(GAD\CAPTION$)+1;POS;IP
				GAD\TXTBOX\IX=LX+GAD\X+4
				GAD\TXTBOX\IY=(GAD\Y+3+(Y*(GUI_FONTHITE-3)))
				GAD\TXTBOX\IL=LY	
				SL.GADGET=GAD\TXTBOX\SLIDER
				SL\SLIDER\VAL=LY	
				GUI_REFRESH_GAD(SL)
				FlushKeys
			Case 18
				If GUI_GADEVENT$="HIT"
					GAD\ON=1-GAD\ON
				EndIf
				SetBuffer ImageBuffer(WIN\IMAGE)
				If GAD\ON=1
					If GAD\GROUP<>0
						GUI_CHKGROUP(GAD\WIN,GAD,GAD\GROUP)
						If GUI_RECHK=0 Then GUI_RECHK=1
					EndIf
				EndIf
				X=X-WIN\X:Y=Y-WIN\Y
				GetColor X-1,Y-1
				If GAD\IMAGEBUT\BORDER<>0
				Rect X-1,Y-1,W+2,H+2
				EndIf
				If GAD\ON=1
					If GAD\IMAGEBUT\BORDER<>0
						GUI_BUT(X,Y,W,H,1,WIN)
						DrawBlock GAD\IMAGEBUT\IMAGE1,X+3,Y+3
					Else
						DrawBlock GAD\IMAGEBUT\IMAGE1,X,Y
					EndIf
				Else
					If GAD\IMAGEBUT\BORDER<>0
						GUI_BUT(X,Y,W,H,0,WIN)
						DrawBlock GAD\IMAGEBUT\IMAGE0,X+2,Y+2
					Else
						DrawBlock GAD\IMAGEBUT\IMAGE0,X,Y
					EndIf
				EndIf
				SetBuffer BackBuffer():Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			Case 19
				If GAD\AFLOAT\LABEL$<>""
					X=X+GAD\AFLOAT\OX;StringWidth(GAD\INTEGER\LABEL$)+2
				EndIf
				If StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))>StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))
				W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MAX,GAD\AFLOAT\DEC))+6
				Else
					W=StringWidth(GUI_FLOATER$(GAD\AFLOAT\MIN,GAD\AFLOAT\DEC))+6
				EndIf
					Select GUI_ZONEHIT
						Case 1
							;GUI_GADEVENT$="INPUT"
							;EVENT$="INPUT"
							;GAD\CAPTION$=""
							;GAD\AFLOAT\VAL=0
						Case 2
							X=X+W+2
							GUI_BOXBUT(X,Y,10,6,1,WIN):GUI_ARROW("U",X+2,Y,0)
							;If GAD\INTEGER\MISC=0
								GAD\AFLOAT\VAL=FLIMIT#(GAD\AFLOAT\VAL+GAD\AFLOAT\PLUS#,GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
							;	If GAD\INTEGER\CLICK=1
							;		GAD\INTEGER\MISC=1
							;	EndIf
							;EndIf
							GUI_REFRESH_GAD(GAD):GUI_GADEVENT$="SCROLL":GAD\SCROLL=1:GUI_DELAY(70)
						Case 3
							X=X+W+2
							GUI_BOXBUT(X,Y+7,10,6,1,WIN):GUI_ARROW("D",X+2,Y+9,0)
							;If GAD\INTEGER\MISC=0
								GAD\AFLOAT\VAL=FLIMIT(GAD\AFLOAT\VAL-GAD\AFLOAT\PLUS#,GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
							;	If GAD\INTEGER\CLIK=1
							;		GAD\INTEGER\MISC=1
							;	EndIf
							;EndIf
							GUI_REFRESH_GAD(GAD):GUI_GADEVENT$="SCROLL":GAD\SCROLL=1:GUI_DELAY(70)
					End Select
				Case 20
					GUI_3DPORT=GAD\MISC
		End Select
	Else
		;EVENT$="NONE"
	EndIf
	Viewport 0,0,GUI_SCREENW,GUI_SCREENH
	If GUI_RECHK=1
		GUI_RECHK=2
		GUI_REFRESH(WIN)
		GUI_RECHK=0
	EndIf
End Function

Function GUI_IMAGE_DARK(X,Y,W,H)
	If DARKOK=True
	BUFF=GraphicsBuffer()
	LockBuffer BUFF
	GW=GraphicsWidth()
	GH=GraphicsHeight()
	Repeat
		XX=0
		DONEX=False
		Repeat
			If XX<W And XX+X<GW-X
				COL=ReadPixelFast(XX+X,YY+Y,BUFF) And $FFFFFF
				COL=COL And (~$0F0f0F)
				WritePixelFast XX+X,YY+Y,COL
				XX=XX+1
			Else
				YY=YY+1
				DONEX=True
			EndIf
		Until DONEX=True
		If YY=H Or YY+Y=GH
			DONEY=True
		EndIf
	Until DONEY=True
	UnlockBuffer BUFF
	Else
		GUI_COL(11)
		Rect X,Y,W,H,1
	EndIf
End Function

Function GUI_SETON$(A$,P)
	P=P+1
	L=Len(A$)
	If L=1
		A$="1"
		Return A$
	EndIf
	LFT$=Mid$(A$,1,P-1)
	RIT$=Mid$(A$,P+1)
	A$=LFT$+"1"+RIT$
	Return A$
End Function

Function GUI_SETOFF$(A$,P)
	P=P+1
	L=Len(A$)
	If L=1
		A$="0"
		Return A$
	EndIf
	LFT$=Mid$(A$,1,P-1)
	RIT$=Mid$(A$,P+1)
	A$=LFT$+"0"+RIT$
	Return A$
End Function


Function GUI_IMAGEON(A$,P)
	P=P+1
	If Mid$(A$,P,1)="1"
		Return 1
	Else
		Return 0
	EndIf
End Function

Function GUI_WHICH_KEY$(MOUSE_Z_SPEED=0)
	A$=""
	If GUI_KEYLOCK=False
		If KeyDown(157)=0
			Select GUI_KEY
				Case 199
					A$="HOME"
				Case 200
					A$="UP"
				Case 201
					A$="PAGEUP"
				Case 203
					A$="LEFT"
				Case 205
					A$="RIGHT"
				Case 207
					A$="END"
				Case 208
					A$="DOWN" 
				Case 209
					A$="PAGEDWN"
			End Select
		EndIf
		If MOUSE_Z_SPEED<>0
			If MOUSE_Z_SPEED<0
				A$="UP"
			Else
				A$="DOWN"
			EndIf
		EndIf
	EndIf
	Return A$
End Function

Function GUI_SCROLLGADS(WIN.WINDOW,GAD.GADGET,MOUSE_Z_SPEED=0)
	If MOUSE_Z_SPEED=0
		PLUS=1
	Else
		PLUS=Abs(MOUSE_Z_SPEED)
	EndIf
	Select GAD\GADTYPE
		Case 4
			SL.GADGET=GAD\TXTBOX\SLIDER
			Select GUI_WHICH_KEY$(MOUSE_Z_SPEED)
				Case "HOME"
					SL\SLIDER\VAL=SL\SLIDER\MINV:SL\SCROLL=1
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1
					GUI_REFRESH_GAD(GAD)
				Case "END"
					SL\SLIDER\VAL=SL\SLIDER\MAXV:SL\SCROLL=1
					GUI_REFRESH_GAD(SL)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "PAGEUP"
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL-GAD\TXTBOX\LINES,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):SL\SCROLL=1
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "PAGEDWN"
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL+GAD\TXTBOX\LINES,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):SL\SCROLL=1
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "UP"
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL-PLUS,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):SL\SCROLL=1
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "DOWN"
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL+PLUS,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):SL\SCROLL=1
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
			End Select
			GUI_DELAY(100)
		Case 5
			Select GUI_WHICH_KEY$(MOUSE_Z_SPEED)
				Case "HOME"
					GAD\SLIDER\VAL=GAD\SLIDER\MINV
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "END"
					GAD\SLIDER\VAL=GAD\SLIDER\MAXV
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "UP"
					GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL-PLUS,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "DOWN"
					GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL+PLUS,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "LEFT"
					GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL-1,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "RIGHT"
					GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL+1,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "PAGEUP"
					If GAD\SLIDER\AGAD=Null
						GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL-10,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
						GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
					Else
						GG.GADGET=GAD\SLIDER\AGAD
						Select GG\GADTYPE
							Case 7
								GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL-GG\TXTLIST\LINES,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
								GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
							Case 4
								GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL-GG\TXTBOX\LINES,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
								GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
								
						End Select
					EndIf
				Case "PAGEDWN"
					If GAD\SLIDER\AGAD=Null
						GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL+10,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
						GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
					Else
						GG.GADGET=GAD\SLIDER\AGAD
						Select GG\GADTYPE
							Case 7
								GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL+GG\TXTLIST\LINES,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
								GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
							Case 4
								GAD\SLIDER\VAL=QLIMIT(GAD\SLIDER\VAL+GG\TXTBOX\LINES,GAD\SLIDER\MINV,GAD\SLIDER\MAXV)
								GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
						End Select
					EndIf
			End Select
			If GAD\SLIDER\AGAD<>Null
				GG.GADGET=GAD\SLIDER\AGAD
				If GG\GADTYPE=16
					VAL=QLIMIT(GAD\SLIDER\VAL,0,GG\IMAGESEL\N_IMAGES)
					VAL=Int(VAL/GG\IMAGESEL\PLUS)*GG\IMAGESEL\PLUS
					GG\IMAGESEL\CURPOS=VAL
					GUI_REFRESH_GAD(GG)
					GUI_DELAY(10)
				Else
					GUI_REFRESH_GAD(GG)
					GUI_DELAY(50)
				EndIf
			Else
				GUI_DELAY(50)
			EndIf
		Case 6
			GUI_DELAY(50)
			If GAD\INTEGER\MISC=0
			Select GUI_WHICH_KEY$(MOUSE_Z_SPEED)
				Case "HOME"
					GAD\INTEGER\VAL=GAD\INTEGER\MIN
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "END"
					GAD\INTEGER\VAL=GAD\INTEGER\MAX
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "UP"
					GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL+PLUS,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1:GUI_DELAY(50)
				Case "DOWN"
					GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL-PLUS,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1:GUI_DELAY(50)
				Case "PAGEUP"
					GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL+10,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "PAGEDWN"
					GAD\INTEGER\VAL=QLIMIT(GAD\INTEGER\VAL-10,GAD\INTEGER\MIN,GAD\INTEGER\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
			End Select
			EndIf
			If GAD\INTEGER\CLICK=1
				GAD\INTEGER\MISC=1
			EndIf
		Case 7
			SL.GADGET=GAD\TXTLIST\SLIDER
			GUI_DELAY(100)
			Select GUI_WHICH_KEY$(MOUSE_Z_SPEED)
				Case "HOME"
					If GAD\CAPTION$<>""
						GAD\CAPTION$=GUI_LPARSE$(GAD,0)
					EndIf
					SL\SLIDER\VAL=SL\SLIDER\MINV
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1:SL\SCROLL=1
					GUI_REFRESH_GAD(GAD)
				Case "END"
					If GAD\CAPTION$<>""
						GAD\CAPTION$=GUI_LPARSE$(GAD,GAD\TXTLIST\MAXL-1)
					EndIf
					SL\SLIDER\VAL=SL\SLIDER\MAXV
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1:SL\SCROLL=1
					GUI_REFRESH_GAD(GAD)
				Case "UP"
					If GAD\CAPTION$<>""
						IT=GUI_WHICHITEM(GAD,GAD\CAPTION$)
						IT=QLIMIT(IT-PLUS,0,GAD\TXTLIST\MAXL)
						GAD\CAPTION$=GUI_LPARSE$(GAD,IT)
					EndIf
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL-PLUS,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1:SL\SCROLL=1
					GUI_REFRESH_GAD(GAD)
				Case "DOWN"
					If GAD\CAPTION$<>""
						IT=GUI_WHICHITEM(GAD,GAD\CAPTION$)
						IT=QLIMIT(IT+PLUS,0,GAD\TXTLIST\MAXL-1)
						GAD\CAPTION$=GUI_LPARSE$(GAD,IT)
					EndIf
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL+PLUS,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1:SL\SCROLL=1
					GUI_REFRESH_GAD(GAD)
				Case "PAGEUP"
					If GAD\CAPTION$<>""
						GAD\CAPTION$=GUI_LPARSE$(GAD,QLIMIT(GAD\TXTLIST\CURL-GAD\TXTLIST\LINES,0,GAD\TXTLIST\MAXL-1))
					EndIf
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL-GAD\TXTLIST\LINES,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1:SL\SCROLL=1
					GUI_REFRESH_GAD(GAD)
				Case "PAGEDWN"
					If GAD\CAPTION$<>""
						GAD\CAPTION$=GUI_LPARSE$(GAD,QLIMIT(GAD\TXTLIST\CURL+GAD\TXTLIST\LINES,0,GAD\TXTLIST\MAXL-1))
					EndIf
					SL\SLIDER\VAL=QLIMIT(SL\SLIDER\VAL+GAD\TXTLIST\LINES,SL\SLIDER\MINV,SL\SLIDER\MAXV)
					GUI_REFRESH_GAD(SL):GAD\SCROLL=1:SL\SCROLL=1
					GUI_REFRESH_GAD(GAD)
			End Select
		Case 12
			Select GUI_WHICH_KEY$(MOUSE_Z_SPEED)
				Case "UP"
					GAD\IMAGEBOX\Y=QLIMIT(GAD\IMAGEBOX\Y-10,0,GAD\IMAGEBOX\H-GAD\H)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "DOWN"
					GAD\IMAGEBOX\Y=QLIMIT(GAD\IMAGEBOX\Y+10,0,GAD\IMAGEBOX\H-GAD\H)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "LEFT"
					GAD\IMAGEBOX\X=QLIMIT(GAD\IMAGEBOX\X-10,0,GAD\IMAGEBOX\W)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "RIGHT"
					GAD\IMAGEBOX\X=QLIMIT(GAD\IMAGEBOX\X+10,0,GAD\IMAGEBOX\W-GAD\W)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
			End Select
		Case 19
			GUI_DELAY(70)
			If GAD\AFLOAT\MISC=0
			Select GUI_WHICH_KEY$(MOUSE_Z_SPEED)
				Case "HOME"
					GAD\AFLOAT\VAL=GAD\AFLOAT\MIN
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "END"
					GAD\AFLOAT\VAL=GAD\AFLOAT\MAX
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "UP"
					GAD\AFLOAT\VAL=FLIMIT(GAD\AFLOAT\VAL+GAD\AFLOAT\PLUS,GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1:GUI_DELAY(50)
				Case "DOWN"
					GAD\AFLOAT\VAL=FLIMIT(GAD\AFLOAT\VAL-GAD\AFLOAT\PLUS,GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1:GUI_DELAY(50)
				Case "PAGEUP"
					GAD\AFLOAT\VAL=FLIMIT(GAD\AFLOAT\VAL+(GAD\AFLOAT\PLUS*10),GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
				Case "PAGEDWN"
					GAD\AFLOAT\VAL=FLIMIT(GAD\AFLOAT\VAL-(GAD\AFLOAT\PLUS*10),GAD\AFLOAT\MIN,GAD\AFLOAT\MAX)
					GUI_REFRESH_GAD(GAD):GAD\SCROLL=1
			End Select
			EndIf
			If GAD\AFLOAT\CLICK=1
				GAD\AFLOAT\MISC=1
			EndIf
	End Select
End Function

Function GUI_WINPRINT(X,Y,W,H,TXT$)
	L=1
	GUI_COL(0)
	X1=X:Y1=Y
	X2=X+W:Y2=Y+H
	Repeat
		READWORD=False
		A$=""
		Repeat
			B$=Mid$(TXT$,L,1)
			BS=Asc(B$)
			If BS<32
				READWORD=True
				A$=A$+B$:L=L+1
			Else
				If BS=32
					READWORD=True
					L=L+1
				Else
					A$=A$+B$
					L=L+1
				EndIf	
			EndIf
		Until READWORD=True Or L>Len(TXT$)
		;Stop
		If L>Len(TXT$)
			FINI=True
		EndIf
	;	If BS>31
		If BS<32
			A$=Left$(A$,Len(A$)-1)
		EndIf
		If X1+StringWidth(A$)<X2			;SMALLER THAN THE WIDTH
			If X1+StringWidth(A$)<X+W
				Locate X1,Y1
				Text X1,Y1,A$+" "
				X1=X1+StringWidth(A$)+4
			Else
				X1=X:Y1=Y1+GUI_FONTHITE-2
				Locate X1,Y1
				Text X1,Y1,A$+" "
				X1=X1+StringWidth(A$)+4
			EndIf
		Else
			X1=X:Y1=Y1+GUI_FONTHITE-2
			Locate X1,Y1
			Text X1,Y1,A$+" "
			X1=X1+StringWidth(A$)+4
		EndIf
		If BS<32
			X1=X:Y1=Y1+GUI_FONTHITE-2
		EndIf
		If Y1>Y2 Or Y1>Y+H
			FINI=True
		EndIf
		If L>Len(TXT$)
			FINI=True
		EndIf
	;	Else
	;		Text X1,Y1,Left$(A$,Len(A$)-1)
	;		X1=X:Y1=Y1+GUI_FONTHITE-2
	;		If Y1>Y2 Or Y1>Y+H
	;			FINI=True
	;		EndIf
	;	EndIf
	Until FINI=True
End Function

Function GUI_MESSAGE_HITE(TXT$,X2)
	L=1
	GUI_COL(0)
	X1=0:Y1=GUI_FONTHITE-2
	W=X2-X1
	Repeat
		READWORD=False
		A$=""
		Repeat
			B$=Mid$(TXT$,L,1)
			BS=Asc(B$)
			If BS<32
				READWORD=True
				A$=A$+B$:L=L+1
			Else
				If BS=32
					READWORD=True
					L=L+1
				Else
					A$=A$+B$
					L=L+1
				EndIf	
			EndIf
		Until READWORD=True Or L>Len(TXT$)
		If L>Len(TXT$)
			FINI=True
		EndIf
		If BS<32
			A$=Left$(A$,Len(A$)-1)
		EndIf
		If X1+StringWidth(A$)<X2			;SMALLER THAN THE WIDTH
			If X1+StringWidth(A$)<X+W
				X1=X1+StringWidth(A$)+4
			Else
				X1=X:Y1=Y1+GUI_FONTHITE-2
				X1=X1+StringWidth(A$)+4
			EndIf
		Else
			X1=X:Y1=Y1+GUI_FONTHITE-2
			X1=X1+StringWidth(A$)+4
		EndIf
		
		If BS<32
			X1=0:Y1=Y1+GUI_FONTHITE-2
		EndIf
		
		If L>Len(TXT$)
			FINI=True
		EndIf
		;Else
		;	X1=0:Y1=Y1+GUI_FONTHITE-2
	;	EndIf
	Until FINI=True
	Return Y1
End Function

Function GUI_MESSAGE(TITLE$,M$,BUT$="OK#Cancel#")
	OQMENU=GUI_QMENU_ON;;:M$="hello"+Chr$(10)+"there"
	GUI_QMENU_ON=0
	MW=265
	WH=GUI_MESSAGE_HITE(M$,MW)
	T.WINDOW=GUI_WINDOW(-1,-1,299,WH+26+(GUI_FONTHITE*2),TITLE$,0,0,1,0,0)
	FRAME0.GADGET=GUI_FRAME(T,4,20,290,WH+12,"",0,"")
	MESSAGE0.GADGET=GUI_TEXT(T,12,25,MW,WH,M$,"")
	EY=26+WH+10
	ITMS=GUI_TXTITEMS(BUT$,"#")
	If ITMS>3 Or ITMS<1
		BUT$="OK#Cancel#"
		ITMS=GUI_TXTITEMS(BUT$,"#")
	EndIf
	W=60
	For R=0 To ITMS-1
		If W<StringWidth(GUI_PARSE$(BUT$,R))+6
			W=StringWidth(GUI_PARSE$(BUT$,R))+6
		EndIf
	Next
	EX=12+280
	Select ITMS
		Case 1
			cmd_1.GADGET=GUI_BUTTUN(T,150-(W/2),EY,W,GUI_PARSE$(BUT$,0),1,"")
		Case 2
			cmd_1.GADGET=GUI_BUTTUN(T,EX-(W*2)-3,EY,W,GUI_PARSE$(BUT$,0),1,"")
			cmd_2.GADGET=GUI_BUTTUN(T,EX-W,EY,W,GUI_PARSE$(BUT$,1),1,"")
		Case 3
			cmd_1.GADGET=GUI_BUTTUN(T,EX-(W*3)-6,EY,W,GUI_PARSE$(BUT$,0),1,"")
			cmd_2.GADGET=GUI_BUTTUN(T,EX-(W*2)-3,EY,W,GUI_PARSE$(BUT$,1),1,"")
			cmd_3.GADGET=GUI_BUTTUN(T,EX-W,EY,W,GUI_PARSE$(BUT$,2),1,"")
	End Select
	GUI_OPENWIN(T)
	Repeat
		Flip:SetBuffer BackBuffer():Cls
		GUI()
		RET=-1
		Select EVENT$
			Case "GUI_GADHIT"
				Select ITMS
					Case 1
						If GUI_GADHIT=cmd_1
							RET=1
							FINI=True
						EndIf
					Case 2
						If GUI_GADHIT=cmd_1
							RET=1
							FINI=True
						EndIf
						If GUI_GADHIT=cmd_2
							RET=2
							FINI=True
						EndIf
					Case 3
						If GUI_GADHIT=cmd_1
							RET=1
							FINI=True
						EndIf
						If GUI_GADHIT=cmd_2
							RET=2
							FINI=True
						EndIf
						If GUI_GADHIT=cmd_3
							RET=3
							FINI=True
						EndIf
				End Select	
		End Select
	Until FINI=True
	GUI_FREEWIN(T)
	GUI_QMENU_ON=OQMENU
	Return RET
End Function

Function GUI_CNTLINES(A$)
	RET=0
	T=1
	Repeat
		T=Instr(A$,Chr$(10),T)
		If T=0
			DONE=True
		Else
			RET=RET+1
			T=T+1
		EndIf		
	Until DONE=True
	If RET=0 And A$<>""
		RET=-1
		A$=A$+Chr$(10)
	EndIf
	Return RET
End Function

Function GUI_ADDZONE(GAD.GADGET,X,Y,W,H,CODE)
	UPD=False
	GUI_ZONES.GUI_ZONE_TYPE=First GUI_ZONE_TYPE
	For GUI_ZONES.GUI_ZONE_TYPE=Each GUI_ZONE_TYPE
		If GUI_ZONES\GAD=GAD
			If GUI_ZONES\RETCODE=CODE
				UPD=True
				GUI_ZONES\X=X:GUI_ZONES\Y=Y:GUI_ZONES\W=W:GUI_ZONES\H=H
				GUI_ZONES\RETCODE=CODE
			EndIf
		EndIf
	Next
	GUI_ZONES.GUI_ZONE_TYPE=First GUI_ZONE_TYPE
	If UPD=False
		GUI_ZONES.GUI_ZONE_TYPE=New GUI_ZONE_TYPE
		GUI_ZONES\GAD=GAD
		GUI_ZONES\X=X:GUI_ZONES\Y=Y:GUI_ZONES\W=W:GUI_ZONES\H=H
		GUI_ZONES\RETCODE=CODE:GUI_ZONES\STATUS=1
	EndIf		
End Function

Function GUI_PARSE$(A$,ITEM)
	T=1
	Repeat
		C$=Mid$(A$,T,1)
		If C$<>"#"
			B$=B$+C$
		Else
			If POS=ITEM
				DONE=True
			Else
				POS=POS+1
				B$=""
			EndIf
		EndIf
		T=T+1
	Until DONE=True Or T>Len(A$)
	Return B$
End Function

Function GUI_QPARSE$(A$,ITEM)
	T2=1
	Repeat
		T=T2
		T2=Instr(A$,"#",T2)
		If T2=0
			RET$="ERROR"
			DONE=True
		Else
			If POS=ITEM
				DONE=True
				RET$=Mid$(A$,T,T2-T)
			Else
				POS=POS+1
				T2=T2+1
			EndIf
		EndIf
	Until DONE=True
Return RET$
End Function 

Function GUI_WHICHITEM(GAD.GADGET,A$)
	ITEM=-1
	AL.GUI_TEXTLINE_TYPE=GAD\TXTLIST\TXT.GUI_TEXTLINE_TYPE
	For YY=0 To GAD\TXTLIST\MAXL-1
		If AL<>Null
			If AL\GAD=GAD And AL\ID=YY And AL\TXT$=A$
				ITEM=YY
			EndIf
			AL.GUI_TEXTLINE_TYPE=AL.GUI_TEXTLINE_TYPE\NXT.GUI_TEXTLINE_TYPE
		EndIf
	Next
	Return ITEM
End Function

Function GUI_TXTITEMS(A$,W$)
	For T=1 To Len(A$)
		If Mid$(A$,T,1)=W$
			A_GUI_COUNT=A_GUI_COUNT+1
		EndIf
	Next
	Return A_GUI_COUNT
End Function

Function QLIMIT(A,B,C)
	If A<B
		Return B
	Else
		If A>C
			Return C
		Else
			Return A
		EndIf
	EndIf
End Function

Function GUI_FIND_LINK.GUI_LINK_TYPE(GAD.GADGET,LNK.GUI_LINK_TYPE)
	ALNK.GUI_LINK_TYPE=LNK
	Repeat
		If ALNK\NXT<>Null
			ALNK=ALNK\NXT
		Else
			DONE=True
		EndIf
	Until DONE
	Return ALNK
End Function

Function GUI_LINK_GAD(GADA.GADGET,GADB.GADGET)
	
	If GADA\LINK=Null
		GADA\LINK=New GUI_LINK_TYPE
		LINKA.GUI_LINK_TYPE=GADA\LINK
	Else
		LINKA.GUI_LINK_TYPE=GUI_FIND_LINK(GADA,GADA\LINK)
		LINKA\NXT=New GUI_LINK_TYPE
		LINKA=LINKA\NXT
	EndIf
	If GADB\LINK=Null
		GADB\LINK=New GUI_LINK_TYPE
		LINKB.GUI_LINK_TYPE=GADB\LINK
	Else
		LINKB.GUI_LINK_TYPE=GUI_FIND_LINK(GADB,GADB\LINK)
		LINKB\NXT=New GUI_LINK_TYPE
		LINKB=LINKB\NXT

	EndIf
	
	LINKA\GAD=GADB
	LINKB\GAD=GADA
	
	LINKA\PARENT=GADA
	LINKB\PARENT=GADB
	
End Function

Function FLIMIT#(A#,B#,C#)
	If A#<B#
		Return B#
	Else
		If A#>C#
			Return C#
		Else
			Return A#
		EndIf
	EndIf
End Function

Function QWRAP(A,B,C)
	If A<B
		Return C
	Else
		If A>C
			Return B
		Else
			Return A
		EndIf
	EndIf
End Function

Function RANGE(A,L,M)
	RET=False
	If A=L Or A>L
		If A=M Or A<M
			RET=True
		EndIf
	EndIf
	Return RET
End Function

Function GUI_CHKGROUP(WIN.WINDOW,ON_GAD.GADGET,GROUP)
	If GROUP<>0
		For GAD.GADGET=Each GADGET 
			If GAD\GROUP=GROUP And GAD\STATUS<>0 And GAD\WIN=WIN
				If GAD<>ON_GAD
					GAD\ON=0
				EndIf
			EndIf
		Next
	EndIf
End Function

Function GUI_ALTER_IMAGE(IMG,PLUS)
	BUFF=GraphicsBuffer()
	LockBuffer ImageBuffer(IMG)
	For Y=0 To ImageHeight(IMG)-1
		For X=0 To ImageWidth(IMG)-1
			COL=ReadPixelFast(X,Y,ImageBuffer(IMG))
			COL=COL And $FFFFFF
			RD=(COL Shr 16) And 255
			GR=(COL Shr 8) And 255
			BL=COL And 255
			
			RD=QLIMIT(RD+PLUS,0,255)
			GR=QLIMIT(GR+PLUS,0,255)
			BL=QLIMIT(GR+PLUS,0,255)
			
			COL=(RD Shl 16)+(GR Shl 8)+BL
			
			WritePixelFast X,Y,COL,ImageBuffer(IMG)
		Next
	Next
	
	UnlockBuffer ImageBuffer(IMG)
	SetBuffer BUFF
End Function


Function GUI_FINDWIN.WINDOW()
	WIN.WINDOW=First WINDOW
	Repeat
		If WIN=Null
			FOUND=True
			WIN=New WINDOW
		Else
			WIN=After WIN
		EndIf
	Until FOUND=True 
	Return WIN
End Function

Function GUI_FINDGAD.GADGET(WIN.WINDOW)
	GAD.GADGET=WIN\START_GAD
	PAR.GADGET=GAD
	If GAD<>Null
		Repeat
			PAR=GAD
			GAD=GAD\NXT
			If GAD=Null
				DONE=True
				GAD=New GADGET
				GAD\PAR=PAR
				RET.GADGET=GAD
			EndIf
		Until DONE=True
	Else
		WIN\START_GAD=New GADGET
		WIN\START_GAD\PAR=Null
		RET.GADGET=WIN\START_GAD
	EndIf
	Return RET		
End Function

Function GUI_FINDMENU()
	Repeat
		If MENUS(T)\STATUS=0
			FOUND=True
			MENUS(T)\STATUS=1
		Else
			T=T+1
		EndIf
	Until FOUND=True Or T=GUI_MAXM
	Return T
End Function

Function GUI_FINDITEM()
	Repeat
		If MITEM(T)\STATUS=0
			FOUND=True
			MITEM(T)\STATUS=1
		Else
			T=T+1
		EndIf
	Until FOUND=True Or T=GUI_MAXMI
	Return T
End Function

Function GUI_SHOWHLP(X,Y,HELP$)
	OLDBUF=GraphicsBuffer()
	SetBuffer BackBuffer():Viewport 0,0,GUI_SCREENW-1,GUI_SCREENH-1
	Y=QLIMIT(Y-10,0,GUI_SCREENH-1)
	W=StringWidth(HELP$)+6:H=GUI_FONTHITE+2
	If Y+H>GUI_SCREENH-1
		Y=GUI_SCREENH-H-1
	EndIf
	If X+W>GUI_SCREENW-1
		X=GUI_SCREENW-W-1
	EndIf
	Color 20,25,25
	Rect X,Y,W,H,0
	;Color 250,250,250
	;Rect X,Y,W,H,0
	Color 250,250,250
	Rect X+1,Y+1,W-2,H-2
	;Rect X+1,Y+1,W-2,H-2
	;LockBuffer BackBuffer()
	
	;UnlockBuffer BackBuffer()
	
	Color 0,0,0
	;Text X+4,Y+2,HELP$
	;Color 250,250,250
	Text X+3,Y+1,HELP$
	SetBuffer OLDBUF
End Function

Function GUI_CHECKHLP(MX,MY)
	WIN.WINDOW=GUI_ACTIVEWIN
	For GAD.GADGET=Each GADGET
		If GAD\WIN=GUI_ACTIVEWIN And GUI_ACTIVEWIN\STATUS=2
			If GAD\TAB=0 Or GAD\TAB=GUI_ACTIVEWIN\TAB
				If RectsOverlap(MX,MY,1,1,GAD\X+WIN\X,GAD\Y+WIN\Y,GAD\W,GAD\H) And GAD\HELP$<>""
					GUI_SHOWHLP(GAD\X+WIN\X,GAD\Y+WIN\Y,GAD\HELP$)
				EndIf
			EndIf
		EndIf
	Next
End Function

Function GUI_MINWIN(WIN.WINDOW)
	WIN\OW=WIN\W:WIN\OH=WIN\H
	WIN\W=110
	WIN\H=20
	FreeImage WIN\IMAGE
	WIN\IMAGE=CreateImage(WIN\W+1,WIN\H+1)
	WIN\STATUS=3
End Function

Function GUI_MAXWIN(WIN.WINDOW)
	WIN\W=WIN\OW:WIN\H=WIN\OH
	FreeImage WIN\IMAGE
	WIN\IMAGE=CreateImage(WIN\W+1,WIN\H+1)
	WIN\STATUS=2
End Function

Function GUI_MAXW()
	For WIN.WINDOW=Each WINDOW
		If WIN\STATUS<>0
			R=R+1
		EndIf
	Next
	Return R
End Function

Function GUI_WIN_EVENT()
	WIN.WINDOW=GUI_ACTIVEWIN
	GUI_GROUPHIT=-1
	If WIN<>Null
		MX=MouseX():MY=MouseY():WX=WIN\X:WY=WIN\Y:W=WIN\W:H=WIN\H
		If GUI_WINEVENT$="MENU" Or GUI_WINEVENT$="QMENU"
			GUI_HLPCOUNT=0:GUI_KEY=0:GUI_LASTKEY=0
			GUI_QMENUHIT=-1
			GUI_MENUHIT=-1
			Select GUI_WINEVENT$
				Case "QMENU"
					If MouseDown(2)
						GUI_QMENUX=MouseX():GUI_QMENUY=MouseY()
					EndIf
					EVENT$="QMENU":GUI_QMENUHIT=-1
					GUI_DOQMENU(GUI_QUICKMENU)
					If EVENT$="NONE"
						While MouseDown(1) Wend
						GUI_FREEMENUS()
						GUI_WINEVENT$="NONE"
						EVENT$="QMENU"
						GUI_QMENUOVER=-1
					Else
						If MouseDown(1) And GUI_QMENUOVER<1
							GUI_FREEMENUS()
							GUI_WINEVENT$="NONE"
							EVENT$="NONE"
							While MouseDown(1) Wend
						EndIf
					EndIf
				Case "MENU"
					EVENT$="MENU":GUI_MENUHIT=-1
					GUI_DOMENU(WIN)
					If EVENT$="NONE"
						While MouseDown(1) Wend
						GUI_FREEMENUS()
						GUI_WINEVENT$="NONE"
						EVENT$="MENU"
						GUI_MENUOVER=-1
					Else
						If MouseDown(1) And GUI_MENUOVER<1
							GUI_FREEMENUS()
							GUI_WINEVENT$="NONE"
							EVENT$="NONE"
							While MouseDown(1) Wend
						EndIf
					EndIf
			End Select
		Else									;NOT MENUS
			If EVENT$="MENU" Or EVENT$="QMENU"
				EVENT$="NONE"
			EndIf
			X=WIN\X:Y=WIN\Y:H=WIN\H:W=WIN\W
			GUI_QMENUHIT=-1
			GUI_MENUHIT=-1
			If MouseDown(2)
				GUI_HLPCOUNT=0:GUI_KEY=0:GUI_LASTKEY=0
				If GUI_WINEVENT$="MENU"
					EVENT$="NONE"
					GUI_WINEVENT$="NONE"
					GUI_MENUOVER=-1
					GUI_MENUHIT=-1
				Else
					If RectsOverlap(MX,MY,1,1,WX,WY,W,GUI_FONTHITE-1) And WIN\TITLE$<>""
						GUI_WINEVENT$="MENU"
						EVENT$="MENU"
						While MouseDown(2) Wend
					Else
						If GUI_QMENU_ON=True
							GUI_WINEVENT$="QMENU":EVENT$="QMENU":GUI_FREEMENUS()
							GUI_QMENUOVER=-1:GUI_QMENUHIT=-1
							GUI_QMENUX=MouseX():GUI_QMENUY=MouseY()
							GUI_HLPCOUNT=0:GUI_KEY=0:GUI_LASTKEY=0
							While MouseDown(2) Wend
						EndIf
					EndIf
				EndIf
				
			Else
				If MouseDown(1) And WIN\STATUS>1 And GUI_SLIDER_SCROLL<1
					;GUI_WINEVENT$="NONE"
					GUI_HLPCOUNT=0:GUI_KEY=0:GUI_LASTKEY=0
					If GUI_GADEVENT$="INPUT" Or GUI_GADEVENT$="SCROLL"
						If GUI_GADEVENT$="INPUT"
							GUI_REFRESH_GAD(GUI_GADHIT)
						Else
							GUI_GADEVENT$="NONE"
						EndIf
					EndIf
	
					If RectsOverlap(X,Y,W,H,MouseX(),MouseY(),1,1)
						If GUI_WINEVENT$="HIT" Or GUI_WINEVENT$="HOLD"
							GUI_WINEVENT$="HOLD"
						Else
							GUI_WINEVENT$="HIT"
						EndIf
					
						If WIN\TITLE$<>""
							If RectsOverlap(MX,MY,1,1,WX,WY,W,GUI_FONTHITE-1)
								If WIN\DRAG<>0
									GUI_WINEVENT$="DRAG"
								EndIf
								If RectsOverlap(MX,MY,1,1,WX+3,WY+3,GUI_FONTHITE-2,GUI_FONTHITE-2) And WIN\QUIT<>0
									GUI_WINEVENT$="KILL"
								EndIf
								If RectsOverlap(MX,MY,1,1,WX+W-GUI_FONTHITE-1,WY+3,GUI_FONTHITE-2,GUI_FONTHITE-2) And WIN\MIN<>0
									GUI_WINEVENT$="MIN"
								EndIf
								If RectsOverlap(MX,MY,1,1,WX+W-GUI_FONTHITE*2,WY+3,GUI_FONTHITE-2,GUI_FONTHITE-2) And WIN\BACK<>0
									GUI_WINEVENT$="BACK"
								EndIf
							EndIf
						EndIf
						If WIN\STATUS=2 And WIN\SCALE<>0
							If RectsOverlap(MouseX(),MouseY(),1,1,WX+W-10,WY+H-10,10,10)
								GUI_MOUSE=GUI_RESIZE
								GUI_WINEVENT$="SCALE"
							EndIf
						EndIf
					Else
						If GUI_GADEVENT$<>"GUI_SELECTOR"
							GUI_WINEVENT$="CHANGE"
						EndIf 
					EndIf
				Else			;MOUSE NOT DOWN
					If GUI_ACTIVEWIN\STATUS=2 And GUI_ACTIVEWIN\SCALE<>0
						If RectsOverlap(MouseX(),MouseY(),1,1,WX+W-10,WY+H-10,10,10); And WIN\SCALE<>0
							GUI_MOUSE=GUI_RESIZE
						EndIf
					EndIf
					If GUI_GADEVENT$="SCROLL" Or GUI_GADEVENT$="INPUT"
						;GUI_WINEVENT$="NONE"
						If GUI_GADEVENT$="SCROLL"
							GUI_KEY=0
							For K=1 To 220
								If KeyDown(K)
								GUI_KEY=K
								GUI_WINEVENT$="GUI_KEY":GUI_HLPCOUNT=0
								EndIf
							Next
						Else
							GUI_KEY=0
							If KeyDown(14) Or KeyHit(14)
								GUI_KEY=14:GUI_LASTKEY=8:GUI_WINEVENT$="GUI_KEY":GUI_HLPCOUNT=0
								GUI_DELAY(80)
							EndIf
							If GUI_KEY=0
								GUI_LASTKEY=0:GUI_WINEVENT$=""
								For K=1 To 220
									If KeyHit(K) And K<>14
										GUI_KEY=K
										GUI_WINEVENT$="GUI_KEY":GUI_HLPCOUNT=0
									EndIf
								Next
							EndIf
							If GUI_LASTKEY=0
								GUI_LASTKEY=GetKey()
								If GUI_LASTKEY>8
									GUI_WINEVENT$="GUI_KEY":GUI_HLPCOUNT=0
								EndIf
							EndIf
						EndIf
					Else
					EndIf
				EndIf
			EndIf						
		Select GUI_WINEVENT$
			Case "KILL"
				EVENT$="KILLWIN"
				GUI_WINEVENT$="NONE"
			Case "CHANGE"
				If WIN\BACK<>0
					GUI_ORDER()
				EndIf
			Case "SCALE"
				SetBuffer BackBuffer()
			GUI_RENDER()
			;SetBuffer FrontBuffer():Cls
			If GUI_BACK_ON<>0 And GUI_BG<>0
				Viewport GUI_BG_VX,GUI_BG_VY,GUI_BG_VW,GUI_BG_VH
				DrawBlock GUI_BG,GUI_BG_X,GUI_BG_Y
				Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			EndIf
			Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			Origin 0,0
			MAXZ=GUI_MAXWINZ()
			For Z=MAXZ To 0 Step -1
				For TT.WINDOW=Each WINDOW
					If TT\Z=Z And TT\STATUS>1
						DrawBlock TT\IMAGE,TT\X,TT\Y
					EndIf
				Next
			Next
			TEMP=CreateImage(GUI_SCREENW,GUI_SCREENH)
			GrabImage TEMP,0,0
			Cls
			WIN.WINDOW=GUI_ACTIVEWIN
			SetBuffer FrontBuffer()
			Repeat
				VWait
				X=WIN\X:Y=WIN\Y
				WIN\W=QLIMIT(MouseX()-X,110,GUI_SCREENW-1)
				WIN\H=QLIMIT(MouseY()-Y,20,GUI_SCREENH-1)
				DrawBlock TEMP,0,0
				GUI_STRETCHBOX(X,Y,WIN\W,WIN\H)
				DrawImage GUI_MOUSE,MouseX(),MouseY()
			Until MouseDown(1)=0
			VWait:DrawBlock TEMP,0,0
			;FreeImage TEMP
			SetBuffer BackBuffer()
			Cls
			DrawBlock TEMP,0,0
			FreeImage TEMP
			FreeImage WIN\IMAGE
			WIN\IMAGE=CreateImage(WIN\W+1,WIN\H+1)
			GUI_REFRESH(WIN)
			GUI_FRM=0
			GUI_DRAWALL()
			GUI_DRAWALL()
			GUI_WINEVENT$="NONE"
			GUI_FRM=0
			Case "DRAG"
				XOF=MouseX()-WIN\X
			YOF=MouseY()-WIN\Y
			Cls
		;	SetBuffer BackBuffer()
			GUI_RENDER()
			If GUI_BACK_ON<>0 And GUI_BG<>0
				Viewport GUI_BG_VX,GUI_BG_VY,GUI_BG_VW,GUI_BG_VH
				DrawBlock GUI_BG,GUI_BG_X,GUI_BG_Y
				Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			EndIf
			SetBuffer BackBuffer()
			Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			Origin 0,0
			MAXZ=GUI_MAXWINZ()
			For Z=MAXZ To 0 Step -1
				For TT.WINDOW=Each WINDOW
					If TT\Z=Z And TT\STATUS>1
						DrawBlock TT\IMAGE,TT\X,TT\Y
					EndIf
				Next
			Next

			TEMP=CreateImage(GUI_SCREENW,GUI_SCREENH)
			GrabImage TEMP,0,0
			Cls
			WIN.WINDOW=GUI_ACTIVEWIN
			SetBuffer FrontBuffer()
			Repeat
				VWait
				If MouseY()<>MOY Or MouseX()<>MOX
					MOX=MouseX():MOY=MouseY()
					X=QLIMIT(MOX-XOF,-1*(WIN\W-4),GUI_SCREENW-4);WIN\W-1)
					Y=QLIMIT(MOY-YOF,0,GUI_SCREENH-4);WIN\H-1)
					DrawBlock TEMP,0,0
					GUI_STRETCHBOX(X,Y,WIN\W,WIN\H)
					DrawImage GUI_MOUSE,MOX,MOY
				EndIf
			Until Not MouseDown(1)
			WIN\X=X:WIN\Y=Y
			SetBuffer BackBuffer()
			DrawBlock TEMP,0,0
			FreeImage TEMP
			GUI_FRM=0
			GUI_DRAWALL()
			GUI_DRAWALL()
			GUI_WINEVENT$="NONE"
			Case "BACK"	
				If WIN\BACK<>0
					If WIN\Z=0
						GUI_WINBACK(WIN)
						GUI_DRAWALL()
						While MouseDown(1) Wend
					EndIf
				EndIf
				GUI_WINEVENT$="NONE"
			Case "MIN"
				If WIN\STATUS=2
					GUI_MINWIN(WIN)
					WIN\STATUS=3
				Else
					If WIN\STATUS=3
						GUI_MAXWIN(WIN)
						WIN\STATUS=2
					EndIf
				EndIf
				GUI_REFRESH(WIN)
				While MouseDown(1) Wend
				GUI_WINEVENT$="NONE"
		End Select
		EndIf
	EndIf
	
	If MouseX()<>GUI_HELPX Or MouseY()<>GUI_HELPY Or MouseDown(1) Or MouseDown(2)
		GUI_HLPCOUNT=0
		GUI_HELPX=MouseX():GUI_HELPY=MouseY()
	Else
		If GUI_HLPCOUNT=50
			GUI_CHECKHLP(MX,MY)
		Else
			GUI_HLPCOUNT=GUI_HLPCOUNT+1
		EndIf		
	EndIf								
	
	GUI_WINHOVER=Null
	ZZ=9999999
	For WIN.WINDOW=Each WINDOW
		If WIN<>Null
			;Stop
			If WIN\Z<ZZ And WIN\STATUS>1
				If RectsOverlap(WIN\X,WIN\Y,WIN\W,WIN\H,MouseX(),MouseY(),1,1)
					GUI_WINHOVER=WIN
					ZZ=WIN\Z
				EndIf
			EndIf
		EndIf
	Next
End Function


Function GUI_RENDER()
	If GUI_UPDATE3D=True
		;VWait
		For GC.GUI_CAMS=Each GUI_CAMS
			GAD.GADGET=GC\GAD
			WIN.WINDOW=GAD\WIN
			If GAD\TAB=WIN\TAB Or GAD\TAB=0 And WIN\STATUS=2
				If GC\FRAME>0
					GC\FRAME=0
					ShowEntity GC\CAM
					WireFrame GC\WIRE
					VWait
					RenderWorld
					CopyRect 0,0,GC\W,GC\H,GAD\X,GAD\Y,BackBuffer(),ImageBuffer(WIN\IMAGE)
					HideEntity GC\CAM
					WireFrame False
				Else
					GC\FRAME=GC\FRAME+1
				EndIf
			Else
				HideEntity GC\CAM
			EndIf
		Next
	Else
		VWait
	EndIf
	Viewport 0,0,GUI_SCREENH,GUI_SCREENW
	RenderWorld
End Function

Function GUI_STRETCHBOX(X,Y,W,H)
	C=255
	Color C,C,C
	Rect X,Y,W,H,0
End Function

Function GUI_NXTWIN.WINDOW()
	RET.WINDOW=Null
	CZ=5000
	For WIN.WINDOW=Each WINDOW
		If WIN\STATUS>1
			If RectsOverlap(MouseX(),MouseY(),1,1,WIN\X,WIN\Y,WIN\W,WIN\H)
				If WIN\Z<CZ And WIN<>GUI_ACTIVEWIN
					CLOSEST.WINDOW=WIN
					RET.WINDOW=WIN
					CZ=WIN\Z
					FOUND=True
				EndIf
			EndIf
		EndIf
	Next
	Return RET
End Function

Function GUI_MAXWINZ()
	For WIN.WINDOW=Each WINDOW
		If WIN\Z>AZ And WIN\STATUS>1
			AZ=WIN\Z
		EndIf
	Next
	Return AZ
End Function

Function GUI_ORDER()
	MAXZ=GUI_MAXWINZ()
	If GUI_WINEVENT$="CHANGE"
		CLOSEST.WINDOW=GUI_NXTWIN()
	EndIf
	If CLOSEST<>Null
		;T=CLOSEST
		CZ=CLOSEST\Z
		For WIN.WINDOW=Each WINDOW
			If WIN\STATUS>1
				If WIN\Z>CZ
					ZZ=WIN\Z
					WIN\Z=WIN\Z-1
				EndIf
			EndIf
		Next
		CLOSEST\Z=0
		WIN=GUI_ACTIVEWIN
		WIN\Z=MAXZ
		GUI_ACTIVEWIN=CLOSEST
	EndIf
End Function


Function GUI_GAD_EVENT()
	WIN.WINDOW=GUI_ACTIVEWIN:GUI_CURGAD.GADGET=Null:OLDGAD.GADGET=GUI_GADHIT
	GUI_OEVENT$=GUI_GADEVENT$
	;GUI_GADHIT=Null
	;EVENT$="NONE"
	;If EVENT$="MENU" And MouseDown(2)=0
	;	EVENT$="NONE"
	;EndIf
	MX=MouseX():MY=MouseY():WX=WIN\X:WY=WIN\Y
	If MouseDown(1) And (EVENT$<>"MENU" And EVENT$<>"QMENU")
		If GUI_GADEVENT$="INPUT" And GUI_WINEVENT$="HIT"
			;GUI_GADHIT=OLDGAD
			GUI_GADHIT\MISC=0:GUI_GADHIT\MISC2=1
			GUI_REFRESH_GAD(GUI_GADHIT)
		;	GUI_REFRESH(GUI_GADHIT\WIN)
			GUI_GADEVENT$="NONE"
		EndIf
		;EVENT$="NONE"
		If GUI_SLIDER_SCROLL=0
			If GUI_OEVENT$="GUI_SELECTOR" Or GUI_GADEVENT$="GUI_SELECTOR"
				GUI_GADEVENT$="GUI_SELECTOR"
				GUI_GADHIT=OLDGAD
				GUI_CURGAD=GUI_GADHIT
				GUI_ZONEHIT=1
				GUI_OEVENT$="GUI_SELECTOR"
				GUI_GADEVENT$="GUI_SELECTOR"
				GUI_CLICKIT(WIN,GUI_GADHIT)
			Else
				GUI_ZONES.GUI_ZONE_TYPE=First GUI_ZONE_TYPE
				For GUI_ZONES.GUI_ZONE_TYPE=Each GUI_ZONE_TYPE
					If GUI_ZONES\STATUS=1 And RectsOverlap(MX,MY,1,1,WX+GUI_ZONES\X,WY+GUI_ZONES\Y,GUI_ZONES\W,GUI_ZONES\H) And RectsOverlap(WIN\X,WIN\Y,WIN\W,WIN\H,MouseX(),MouseY(),1,1) And WIN\ACTIVE=1
						GAD.GADGET=GUI_ZONES\GAD
						If GAD\WIN=WIN And GAD\ACTIVE>0 And GAD\STATUS=1 And WIN\STATUS=2 And (GAD\TAB=0 Or GAD\TAB=WIN\TAB)
							GUI_GADHIT=GAD
							If GUI_OEVENT$="HIT" Or GUI_OEVENT$="HOLD" Or GUI_OEVENT$="SCROLL"
								If GAD=OLDGAD
									GUI_GADEVENT$="HOLD"
									GUI_OEVENT$="HOLD"
									If GAD\GADTYPE=19
										GAD\AFLOAT\COUNT=GAD\AFLOAT\COUNT+1
										If GAD\AFLOAT\COUNT=50
											GAD\AFLOAT\PLUS#=FLIMIT#(GAD\AFLOAT\PLUS#*10,0.00001,0.1)
											GAD\AFLOAT\COUNT=0
										EndIf
									EndIf
								Else
									GUI_GADEVENT$="HIT"
									GUI_OEVENT$="HIT"
									If GAD\GADTYPE=19
										GAD\AFLOAT\PLUS#=GAD\AFLOAT\ACCEL#
										GAD\AFLOAT\COUNT=0
									EndIf
								EndIf
							Else
								GUI_GADEVENT$="HIT"
							EndIf
							GUI_ZONEHIT=GUI_ZONES\RETCODE
							GUI_GADHIT=GAD
							GUI_CURGAD=GUI_GADHIT
							If GAD\GADTYPE=6
								If GAD\INTEGER\CLICK<1
									GUI_CLICKIT(WIN,GAD)
								Else
									If GUI_GADEVENT$="HIT"; Or GUI_GADEVENT$="SCROLL"
										GUI_CLICKIT(WIN,GAD)
										If GUI_GADEVENT$<>"INPUT"
											GUI_GADEVENT$="HOLD"
										EndIf
									EndIf
								EndIf
							Else
								If GAD\GADTYPE=19
									If GAD\AFLOAT\CLICK<1
										GUI_CLICKIT(WIN,GAD)
									Else
										If GUI_GADEVENT$="HIT"; Or GUI_GADEVENT$="SCROLL"
											GUI_CLICKIT(WIN,GAD)
											GUI_GADEVENT$="HOLD"
										EndIf
									EndIf
								Else
									GUI_CLICKIT(WIN,GAD)
								EndIf
							EndIf	
							Exit
						EndIf
					EndIf
				Next
			EndIf
			GUI_SLIDERGAD=GUI_GADHIT
		Else
			GUI_GADEVENT$="HIT"
			GUI_ZONEHIT=1
			GUI_GADHIT=GUI_SLIDERGAD
			GUI_CURGAD=GUI_GADHIT
			GUI_CLICKIT(WIN,GUI_GADHIT)
		EndIf
	Else		;MOUSE NOT HIT
		GAD=GUI_GADHIT
		If GAD<>Null
		If GAD\GADTYPE=19
			GAD\AFLOAT\PLUS#=GAD\AFLOAT\ACCEL#
			GAD\AFLOAT\COUNT=0
		EndIf
		EndIf
		GUI_SLIDER_SCROLL=0
		If EVENT$<>"MENU" And EVENT$<>"QMENU"
			EVENT$="NONE"
			If GUI_GADEVENT$<>"INPUT" And GUI_GADEVENT$<>"SCROLL"
			GUI_WINEVENT$="NONE"
			EndIf
		EndIf
		If GUI_GADEVENT$="HIT" Or GUI_GADEVENT$="HOLD"
			;GUI_GADEVENT$="NONE"
			GAD=GUI_GADHIT
			EVENT$="NONE"
			If GAD<>Null
				GUI_ZONES.GUI_ZONE_TYPE=First GUI_ZONE_TYPE
				For GUI_ZONES.GUI_ZONE_TYPE=Each GUI_ZONE_TYPE
					If GUI_ZONES\GAD=GAD And GUI_ZONES\STATUS=1
						If RectsOverlap(MX,MY,1,1,WX+GUI_ZONES\X,WY+GUI_ZONES\Y,GUI_ZONES\W,GUI_ZONES\H) And RectsOverlap(WIN\X,WIN\Y,WIN\W,WIN\H,MouseX(),MouseY(),1,1) And WIN\ACTIVE=1
							FOUND=True
							EVENT$="GUI_GADHIT"
							GUI_GADEVENT$="NONE"
							GUI_WINEVENT$="NONE"
							GUI_OEVENT$=""
						EndIf
					EndIf
				Next
			EndIf
			If FOUND=False
				GUI_GADEVENT$="NONE"
			EndIf
		Else
			Select GUI_GADEVENT$
				Case "GUI_SELECTOR"
					GUI_GADEVENT$="NONE"
					EVENT$="GUI_GADHIT"
					GUI_OEVENT$=""
					GAD=GUI_GADHIT
				Case "INPUT"
					If GUI_WINEVENT$="GUI_KEY"
						If GUI_GADHIT\GADTYPE=6 Or GUI_GADHIT\GADTYPE=19
							GUI_NUMBERINPUT(WIN,GUI_GADHIT,0)
						Else
							If GUI_GADHIT\GADTYPE=17
							GUI_GETMULTINPUT(WIN,GUI_GADHIT,0)
							Else
							GUI_GETINPUT(WIN,GUI_GADHIT,0)	;GET THE GUI_KEY
							EndIf
						EndIf
						EVENT$="KEYHIT"
						GUI_GADEVENT$="INPUT"
						CHECK_IT=True
					Else
						If MouseDown(1)=0
						If GUI_GADHIT\GADTYPE=6 Or GUI_GADHIT\GADTYPE=19
							GUI_NUMBERINPUT(WIN,GUI_GADHIT,1)
						Else
							If GUI_GADHIT\GADTYPE=17
							GUI_GETMULTINPUT(WIN,GUI_GADHIT,1)
							Else
							GUI_GETINPUT(WIN,GUI_GADHIT,1)	;JUST FLASH IT
							EndIf
						EndIf
						EndIf
						GUI_GADEVENT$="INPUT"
					EndIf
					If GUI_KEY=28 And GUI_GADHIT\GADTYPE<>17
						GUI_WINEVENT$="NONE"
						GUI_GADEVENT$="TEXT INPUT"
						EVENT$="TEXT INPUT"
						If GUI_GADHIT\GADTYPE=6
							GUI_GADHIT\INTEGER\VAL=QLIMIT(GUI_GADHIT\INTEGER\VAL,GUI_GADHIT\INTEGER\MIN,GUI_GADHIT\INTEGER\MAX)
						EndIf
						GUI_REFRESH_GAD(GUI_GADHIT)
						CHECK_IT=True
					EndIf
				Case "SCROLL"
					;GUI_GADHIT=OLDGAD
					MZ=MouseZSpeed()
					If GUI_WINEVENT$="GUI_KEY" And GUI_KEY>0 Or MZ<>0
						GUI_SCROLLGADS(WIN,GUI_GADHIT,MZ)
						GUI_KEY=-1
						CHECK_IT=True
					EndIf
					GUI_GADEVENT$="SCROLL"
			End Select
		EndIf
	EndIf
	If GUI_WINEVENT$="KILL"
		GUI_WINEVENT$="NONE"
		GUI_GADEVENT$="NONE"
		EVENT$="KILLWIN"
	EndIf
	
	If GUI_WINEVENT$="GUI_KEY" And GUI_GADEVENT$="SCROLL"
		CHECK_IT=True
	EndIf
	
	If GUI_WINEVENT$<>"NONE" And (GUI_GADEVENT$="HIT" Or GUI_GADEVENT$="HOLD" Or GUI_GADEVENT$="SCROLLER")
		CHECK_IT=True
	EndIf
	
	If GUI_GADEVENT$="SCROLL" And MouseDown(1)
		CHECK_IT=True
	EndIf
	
	If GUI_GADHIT<>Null 
		If CHECK_IT=True
		If GUI_GADHIT\LINK<>Null
		;	Color 200,0,0:Text 300,0,"CHECKING"
			Select GUI_GADHIT\GADTYPE
				Case 3							;TXTINPUT
					LVAL#=GUI_GADHIT\CAPTION$
					LTXT$=GUI_GADHIT\CAPTION$
				Case 5							;SLIDER
					LVAL#=GUI_GADVAL(GUI_GADHIT)
					LTXT$=Int(LVAL)
				Case 6							;INT BOX
					LVAL#=GUI_GADVAL(GUI_GADHIT)
					LTXT$=Int(LVAL)
				Case 19 
					LVAL#=GUI_FLOATVAL#(GUI_GADHIT)
					LTXT$=GUI_FLOATVAL#(GUI_GADHIT)
			End Select
			ALINK.GUI_LINK_TYPE=GUI_GADHIT\LINK
			DONE=False
			Repeat
				Select ALINK\GAD\GADTYPE
					Case 3				
						GUI_SETTEXT(ALINK\GAD,LTXT$)
					Case 5
						GUI_SETVAL(ALINK\GAD,Int(LVAL))
					Case 6
						GUI_SETVAL(ALINK\GAD,Int(LVAL))
					Case 19
						GUI_SETFLOAT(ALINK\GAD,LVAL)
				End Select
				If ALINK\NXT<>Null
					ALINK=ALINK\NXT
				Else
					DONE=True
				EndIf
			Until DONE=True
		EndIf
		EndIf
	EndIf
	If GUI_GADEVENT$="SCROLL" And GUI_WINEVENT$="HIT" ;And (GUI_GADHIT\GADTYPE=19 Or GUI_GADHIT\GADTYPE=6)
		If GUI_GADHIT<>Null
			If GUI_GADHIT\GADTYPE=19 Or GUI_GADHIT\GADTYPE=6
				EVENT$="GUI_GADHIT"
			EndIf
		EndIf
	EndIf
End Function

Function GUI_GET_EVENT()
	If GUI_ACTIVEWIN<>Null
		GUI_WIN_EVENT()
		GUI_GAD_EVENT()
	EndIf
	;GUI_GADOVER=GUI_GADHIT
	;GUI_CTRLKEYS()
	;GUI_DOEVENT()
	If GUI_DOMOUSE=True
		If GUI_MOUSE_ON>0
			Select GUI_MOUSE
				Case GUI_HAND 
					MXXX=MouseX()-6
					MYYY=MouseY()
				Case GUI_CROSS
					MXXX=MouseX()-7
					MYYY=MouseY()-7
				Default
					MXXX=MouseX()
					MYYY=MouseY()
			End Select
			DrawImage GUI_MOUSE,MXXX,MYYY
			GUI_MOUSE=GUI_POINTER
		EndIf
		GUI_DOMOUSE=False
	EndIf
End Function

Function GUI_NEXTGAD.GADGET(WIN.WINDOW,CG.GADGET)
	;Stop
	Return CG
End Function

Function GUI_PREVGAD.GADGET(WIN.WINDOW,CG.GADGET)
	Return CG
End Function


Function GUI_OUTLINE(GAD.GADGET)
	Flip:SetBuffer FrontBuffer()
	;DrawImage GUI_MOUSE,MouseX(),MouseY()
	WIN.WINDOW=GAD\WIN
	X=GAD\X:Y=GAD\Y
	W=GAD\W:H=GAD\H
	WX=WIN\X
	WY=WIN\Y
	Color 255,250,255
	Select GAD\GADTYPE
		Case 0		;GUI_BUT
			Rect X+WX-2,Y+WY-2,W+4,H+4,0
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
		Case 1		;ON/OFF
			Rect X+WX-2,Y+WY-2,W+4,H+4,0
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
		Case 2		;GUI_CYCLE
			Rect X+WX-2,Y+WY-2,W+4,H+4,0
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
		Case 3		;GUI_TXTINPUT
			If GAD\TXTINPUT\LABEL$<>""
				X=X+StringWidth(GAD\TXTINPUT\LABEL$)+2
			EndIf
			Rect X+WX-1,Y+WY-1,W+2,H+3,0
			Rect X+WX,Y+WY,W,H,0	
		Case 4		;GUI_TXTBOX
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
			Rect X+WX,Y+WY,W,H,0
		Case 5		;GUI_SLIDER
			If GAD\SLIDER\AGAD=Null
				Rect X+WX-1,Y+WY-1,W+2,H+2,0
				Rect X+WX,Y+WY,W,H,0
			EndIf
		Case 6		;GUI_INTEGER
			W=StringWidth(GAD\INTEGER\MAX)+4
			If GAD\INTEGER\LABEL$<>""
				X=X+StringWidth(GAD\INTEGER\LABEL$)+2
			EndIf
			Rect X+WX-1,Y+WY-1,W+15,H+4,0
			Rect X+WX,Y+WY,W,H,0
		Case 7		;GUI_TXTLIST
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
			Rect X+WX,Y+WY,W,H,0
		Case 8		;GUI_TICK BOX
			Rect X+WX-1,Y+WY-1,12,12,0
			Rect X+WX,Y+WY,10,10,0
		Case 9		;GUI_FRAME
		Case 10	;GUI_SELECTOR
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
			Rect X+WX,Y+WY,W,H,0
		Case 11	;GUI_TEXT
		Case 12	;GUI_IMAGEBOX
		Case 13	;GUI_PROG
		Case 14	;GUI_TAB
			Rect X+WX-1,Y+WY-1,W+2,H+2,0
			Rect X+WX,Y+WY,W,H,0
	End Select
	SetBuffer BackBuffer()
	;GUI_DELAY(250)
	Delay 150
End Function

Function GUI_GETNXTWIN()
	CZ=GUI_ACTIVEWIN\Z
	MAXZ=GUI_MAXWINZ()
	TZ=CZ+1:If TZ>MAXZ Then TZ=0
	For WIN.WINDOW=Each WINDOW
		If WIN\STATUS>1
			If WIN\Z=1 And FOUND=0
				FOUND=1
				NXT.WINDOW=WIN
			EndIf
			If WIN\Z>0
				WIN\Z=WIN\Z-1
			EndIf
		EndIf
	Next
	GUI_ACTIVEWIN\Z=MAXZ
	GUI_ACTIVEWIN=NXT
End Function

Function GUI_GETPRVWIN()
	CZ=GUI_ACTIVEWIN\Z
	MAXZ=GUI_MAXWINZ()
	TZ=CZ-1:If TZ<0 Then TZ=MAXZ
	For WIN.WINDOW=Each WINDOW
		If WIN\STATUS>1
			If WIN\Z=MAXZ And FOUND=0
			FOUND=1
			NXT.WINDOW=WIN
		EndIf
		WIN\Z=WIN\Z+1
		EndIf
	Next
	NXT\Z=0
	GUI_ACTIVEWIN=NXT
End Function	

Function GUI_CTRLKEYS()
End Function

Function GUI_DRAWALL()
	If GUI_AUTO3D=True
		If GUI_FRM=0
			Flip:SetBuffer BackBuffer()
			GUI_RENDER()
			GUI_FRM=1
			GUI_DOMOUSE=False
		Else
			If GUI_BACK_ON<>0 And GUI_BG<>0
				Viewport GUI_BG_VX,GUI_BG_VY,GUI_BG_VW,GUI_BG_VH
				DrawBlock GUI_BG,GUI_BG_X,GUI_BG_Y
				Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			EndIf
			SetBuffer BackBuffer()
			Viewport 0,0,GUI_SCREENW,GUI_SCREENH
			Origin 0,0
			MAXZ=GUI_MAXWINZ()
			For Z=MAXZ To 0 Step -1
				For WIN.WINDOW=Each WINDOW
					If WIN\Z=Z And WIN\STATUS>1
						DrawBlock WIN\IMAGE,WIN\X,WIN\Y
					EndIf
				Next
			Next
			GUI_FRM=0
			GUI_DOMOUSE=True
		EndIf
	Else
		GUI_FRM=0
		GUI_DOMOUSE=True
		GUI_RENDER()
		If GUI_BACK_ON<>0 And GUI_BG<>0
			Viewport GUI_BG_VX,GUI_BG_VY,GUI_BG_VW,GUI_BG_VH
			DrawBlock GUI_BG,GUI_BG_X,GUI_BG_Y
			Viewport 0,0,GUI_SCREENW,GUI_SCREENH
		EndIf
		SetBuffer BackBuffer()
		Viewport 0,0,GUI_SCREENW,GUI_SCREENH
		Origin 0,0
		MAXZ=GUI_MAXWINZ()
		For Z=MAXZ To 0 Step -1
			For WIN.WINDOW=Each WINDOW
				If WIN\Z=Z And WIN\STATUS>1
					DrawBlock WIN\IMAGE,WIN\X,WIN\Y
				EndIf
			Next
		Next
	EndIf
End Function

Function GUI_DOEVENT()
	WIN.WINDOW=GUI_ACTIVEWIN
	If GUI_WINEVENT$="KILL"
		EVENT$="KILLWIN"
	Else
		If GUI_WINEVENT$="MENU"
			EVENT$="MENU"
		Else
			If EVENT$="QMENU"
				EVENT$="QMENU"
			Else
				If GUI_GADEVENT$="HIT" Or GUI_GADEVENT$="HOLD"
				EVENT$=""
				EndIf
			EndIf
		EndIf
	EndIf
	Select GUI_GADEVENT$
		Case "HIT"
			GUI_CLICKIT(WIN,GUI_GADHIT)
			If GUI_GADHIT\GADTYPE=8
				;While MouseDown(1):VWait:Wend
			EndIf
		Case "HOLD"
			If GUI_GADHIT\GADTYPE<>8
			GUI_CLICKIT(WIN,GUI_GADHIT)
			;EVENT$="GUI_GADHOLD"
			EndIf
		Case "INPUT"
			If GUI_WINEVENT$="GUI_KEY"
				If GUI_GADHIT\GADTYPE=6
					GUI_NUMBERINPUT(WIN,GUI_GADHIT,0)
				Else
					GUI_GETINPUT(WIN,GUI_GADHIT,0)	;GET THE GUI_KEY
				EndIf
				EVENT$="KEYHIT"
			Else
			;	Stop
				If GUI_GADHIT\GADTYPE=6
					GUI_NUMBERINPUT(WIN,GUI_GADHIT,1)
				Else
					GUI_GETINPUT(WIN,GUI_GADHIT,1)	;JUST FLASH IT
				EndIf
			EndIf
			If GUI_KEY=28
				GUI_WINEVENT$="NONE"
				GUI_GADEVENT$="TEXT INPUT"
				EVENT$="TEXT INPUT"
				GUI_REFRESH_GAD(GUI_GADHIT)
			EndIf
		Case "SCROLL"
			If GUI_WINEVENT$="GUI_KEY" And GUI_KEY<>0
				GUI_SCROLLGADS(WIN,GUI_GADHIT)
			EndIf
	End Select
End Function



Function GUI_MESSAGEBOX(TITLE$,M$)
	GUI_MESSAGE(TITLE$,M$,"OK#")	
End Function

Function GUI_READDIR$(DIRECTORY$,SGAD.GADGET,FORD$,SRT)
	;READ A LIST OF DIRECTORIES IN THE PASSED DIRECTORY 
	;AND RETURN A TEXTLIST
	WCARD$=Upper$(GUI_GADTEXT$(SGAD)):LW=Len(WCARD$)
	If Right$(DIRECTORY$,2)="\\"
		DIRECTORY$=Mid$(DIRECTORY$,1,Len(DIRECTORY$)-1)
	EndIf
	If Instr(DIRECTORY$,":\\")
		DIRECTORY$=Replace$(DIRECTORY$,":\\",":\")
	EndIf
	ChangeDir DIRECTORY$				;CHANGE THE CURRENT DIRECTORY
	DIR=ReadDir(CurrentDir$())			;READ THE DIRECTORY
	If Right$(DIRECTORY$,1)="\"
		TST$=CurrentDir$()
		If Right$(TST$,1)<>"\"
			TST$=TST$+"\"
		EndIf
	Else
		TST$=CurrentDir$()
	EndIf
	If Right$(TST$,2)="\\"
		TST$=Mid$(TST$,1,Len(TST$)-1)
	EndIf
	If TST$=DIRECTORY$
		Repeat
			F$=NextFile$(DIR)				;GET THE NEXT ENTRY
			If F$=""							
				DONE=True					;IF THERE AIN`T ONE THEN WE`RE DONE
			Else
				T=FileType(F$)				;GET THE TYPE OF FILE
				F$=Trim$(F$)
				Select T
					Case 1
						If WCARD$="ALL FILES" Or Upper$(Right$(F$,LW))=WCARD$
							If Upper$(FORD$)="F"
								D$=D$+F$+"#"	;ADD TO THE FILE LIST
								FIL=FIL+1
							EndIf
						Else
							If WCARD$="ALL IMAGES"
								If Upper$(Right$(F$,4))=".BMP" Or Upper$(Right$(F$,4))=".JPG" Or Upper$(Right$(F$,4))=".PNG"
									If Upper$(FORD$)="F"
										D$=D$+F$+"#"
										FIL=FIL+1
									EndIf
								EndIf
							EndIf
						EndIf
					Case 2					;FILETYPE 2=DIRECTORY
						If Upper$(FORD$)="D"
							D$=D$+F$+"#"		;ADD THE DIRECTORY NAME TO THE TEXTLIST AND ADD THE TEXTLIST CHAR "#"
							FIL=FIL+1
						EndIf
				End Select
			EndIf
		Until DONE=True						;CLOSE THE DIRECTORY
	Else
		If Upper$(FORD$)="D"
			GUI_MESSAGEBOX("Directory Error!","There was a problem reading directory:"+Chr$(10)+DIRECTORY$+Chr$(10)+"Please Select another...")
			D$="ERROR"
		EndIf
	EndIf
	CloseDir DIR
	If SRT<>0 And D$<>"ERROR";Upper$(FORD$)="F" And SRT<>0
		D$=GUI_FILESORT$(D$,FIL)
	EndIf
	Return D$
End Function

Function GUI_FILESORT$(D$,NFILES)
	RET$=D$
	If NFILES>1 And NFILES<1000
		For T=0 To NFILES-1
			GUI_SORT$(T)=GUI_QPARSE$(D$,T)
		Next
		Repeat
			RESORT=False
			DONE=False
			C=1
			Repeat
				L=1
				DONEONE=False
				Repeat
					A$=Lower$(Mid$(GUI_SORT$(C),L,1))
					B$=Lower$(Mid$(GUI_SORT$(C-1),L,1))
					If Asc(A$)<Asc(B$)
						SMALLER=True
						DONEONE=True
					EndIf
					If Asc(A$)=Asc(B$)
						SMALLER=False
						L=L+1
						DONEONE=False
					EndIf
					If Asc(A$)>Asc(B$)
						SMALLER=False
						DONEONE=True
					EndIf
				Until L>Len(GUI_SORT$(C)) Or L>Len(GUI_SORT$(C-1)) Or DONEONE=True
				If SMALLER=False
					C=C+1
				Else
					Z$=GUI_SORT$(C):GUI_SORT$(C)=GUI_SORT$(C-1):GUI_SORT$(C-1)=Z$
					C=C+1		
					RESORT=True
				EndIf
				If C=NFILES Then DONE=True
			Until DONE
		Until RESORT=False
		RET$=""
		For T=0 To NFILES-1
			RET$=RET$+GUI_SORT$(T)+"#"
		Next
	EndIf
	Return RET$
End Function

Function GUI_PARENTDIR$(FILE$)
	DL=Len(FILE$)-1:DIRDONE=False;:DebugLog FILE$+" "+DL+" "+"OK"
	If DL>2
		Repeat
			If Mid$(FILE$,DL,1)<>"\"
				DL=DL-1
			Else
				DIRDONE=True
			EndIf
		Until DIRDONE=True
		FILE$=Mid$(FILE$,1,DL)
	EndIf
	Return FILE$
End Function

Function GUI_DRVLIST$()
	For AL.GUI_FILE_TYPE=Each GUI_FILE_TYPE
		If AL<>Null
			Delete AL
		EndIf
	Next
	AL.GUI_FILE_TYPE=New GUI_FILE_TYPE
	AL\F$="MY DOCUMENTS"
	AL\TYP$=".DIR"
	AL.GUI_FILE_TYPE=New GUI_FILE_TYPE
	AL\F$="A:\"
	AL\TYP$=".DIR"
	AL.GUI_FILE_TYPE=New GUI_FILE_TYPE
	AL\F$="C:\"
	AL\TYP$=".DIR"
	AL.GUI_FILE_TYPE=New GUI_FILE_TYPE
	AL\F$="D:\"
	AL\TYP$=".DIR"
	OLD$=CurrentDir$()
	D$="My Documents*ic0#A:\*ic6#C:\*ic6#D:\*ic6#"
	For A=Asc("B") To Asc("Z")
		If A<>Asc("D") And A<>Asc("C")
			DIR$=Chr$(A)+":\"
			If GUI_CHECKDIR(DIR$)=1
				D$=D$+Chr$(A)+":\*ic6"+"#"
				AL.GUI_FILE_TYPE=New GUI_FILE_TYPE
				AL\F$=Chr$(A)+":\"
				AL\TYP$=".DIR"
			EndIf
		EndIf
	Next
	ChangeDir OLD$
	Return D$
End Function

Function GUI_CHECKDIR(DIR$)
	RET=-1
	ODIR$=CurrentDir$()
	If Left$(DIR$,1)="\"
		DIR$=Mid$(DIR$,2)
	EndIf
	ChangeDir DIR$
	If CurrentDir$()<>ODIR$ Or ODIR$=DIR$
		RET=1
	EndIf
	ChangeDir ODIR$
	Return RET
End Function

Function GUI_FILETYPE$(F$)
	DOT=Instr(F$,".")
	RET$="NONE"
	If DOT>0
		RET$=Upper$(Mid$(F$,DOT))
	EndIf
	Return RET$
End Function

Function GUI_READ_DIR$(DIR$,WC$,SORT)
	WC$=Upper$(WC$)
	If Left$(DIR$,1)="\"
		DIR$=Mid$(DIR$,2)
	EndIf
	If Upper$(DIR$)="MY DOCUMENTS"
		DIR$="C:\MY DOCUMENTS"
	EndIf
	If GUI_CHECKDIR(DIR$)=1
		For FL.GUI_FILE_TYPE=Each GUI_FILE_TYPE
			Delete FL.GUI_FILE_TYPE
		Next
		ChangeDir DIR$
		DIL=ReadDir(CurrentDir$())
		If Right$(DIR$,2)=":\"
			FL.GUI_FILE_TYPE=New GUI_FILE_TYPE
			FL\F$=Chr$(1)+"."
			FL\TYP$=".DIR"
		EndIf
		Repeat
			F$=NextFile(DIL)
			If F$=""
				DONE=True
			Else
				Select FileType(F$)
					Case 1 	;FILE
						FTYP$=GUI_FILETYPE(F$)
						If WC$="ALL FILES"
							FL.GUI_FILE_TYPE=New GUI_FILE_TYPE
							FL\F$=F$:FL\SIZE=FileSize(F$)
							If FTYP$=".BMP" Or FTYP$=".JPG" Or FTYP$=".PNG"
								FL\TYP$=".IMG"
							Else
								FL\TYP$=".FIL"
							EndIf
						Else
							If WC$="ALL IMAGES"
								Select FTYP$
									Case ".BMP",".JPG",".PNG"
										FL.GUI_FILE_TYPE=New GUI_FILE_TYPE
										FL\F$=F$:FL\SIZE=FileSize(F$)
										FL\TYP$=".IMG"
								End Select
							Else
								If WC$=FTYP$
									FL.GUI_FILE_TYPE=New GUI_FILE_TYPE
									FL\F$=F$:FL\SIZE=FileSize(F$)
									If WC$=".BMP" Or WC$=".JPG" Or WC$=".PNG"
										FL\TYP$=".IMG"
									Else
										FL\TYP$=".FIL"
									EndIf
								EndIf
							EndIf
						EndIf
					Case 2	;DIR
						FL.GUI_FILE_TYPE=New GUI_FILE_TYPE
						FL\F$=Chr$(1)+F$
						FL\TYP$=".DIR"
				End Select
			EndIf
		Until DONE=True
		CloseDir DIL
		If SORT=1
			RET$=GUI_SORTFILE$()
		Else
			RET$=GUI_QUIK_SORTFILE$()
		EndIf
		Return RET$	
	Else
		M$="Unable to access Directory"+Chr$(10)+Chr$(10)
		M$=M$+DIR$+Chr$(10)+Chr$(10)
		M$=M$+"Please Click [OK] to continue..."+Chr$(10)
		GUI_MESSAGE("Directory Error",M$,"OK#")
		RET$=GUI_READ_DIR$(CurrentDir$(),WC$,1)
		Return RET$
	EndIf
End Function

Function GUI_QUIK_SORTFILE$()
	Repeat
		AL.GUI_FILE_TYPE=First GUI_FILE_TYPE
		GO_AGAIN=False
		Repeat
			BL.GUI_FILE_TYPE=After AL.GUI_FILE_TYPE
			If BL<>Null And AL<>Null
				F$=AL\F$:TP$=AL\TYP$:SIZE=AL\SIZE
				SMALL=0
				If BL\TYP$=".DIR" And AL\TYP$<>".DIR"
					SMALL=1
				EndIf
				If BL\F$="."
					SMALL=1
				EndIf
				If BL\F$=".." And AL\F$<>"."
					SMALL=1
				EndIf
				If SMALL=0
					AL.GUI_FILE_TYPE=After AL.GUI_FILE_TYPE
					FINI=False
				Else
					AL\F$=BL\F$:AL\TYP$=BL\TYP$:AL\SIZE=BL\SIZE
					BL\F$=F$:BL\TYP$=TP$:BL\SIZE=SIZE
					AL.GUI_FILE_TYPE=After AL.GUI_FILE_TYPE
					GO_AGAIN=True
					FINI=False
				EndIf
			Else
				FINI=True
			EndIf
		Until FINI=True
	Until GO_AGAIN=False
	For AL.GUI_FILE_TYPE=Each GUI_FILE_TYPE
		Select AL\TYP$
			Case ".IMG"
				RET$=RET$+AL\F$+"*IC5#"
			Case ".FIL"
				RET$=RET$+AL\F$+"*IC3#"
			Case ".DIR"
				AL\F$=Mid$(AL\F$,2)
				Select AL\F$
					Case "."
						RET$=RET$+"Drives*IC6#"
					Case ".."
						RET$=RET$+"Parent Dir*IC1#"
					Default
						RET$=RET$+AL\F$+"*IC0#"
				End Select
		End Select
	Next
	Return RET$
End Function

Function GUI_FLOATER$(VAL#,DEC)
	FS$=VAL#
	FS$=Upper$(FS$)
	
	For T=0 To DEC-1
		D$=D$+"0"
	Next
	
	If VAL#<>0
	
	If Instr(FS$,"E")
	
		EXP_VAL$=Mid$(FS$,Instr(FS$,"E")+1)
		EVAL=EXP_VAL$
		For T=0 To Abs(EVAL)-1
			ZERO$=ZERO$+"0"
		Next
		
		DEC_PLACE=Instr(FS$,".")
		INT_VAL$=Left$(FS$,DEC_PLACE-1)
		DEC_VAL$=Mid$(FS$,DEC_PLACE+1,Instr(FS$,"E")-DEC_PLACE-1)
		DEC_VAL$=Left$(DEC_VAL$,DEC-1)
				
		If Left$(INT_VAL$,1)="-"
			MINUS=True
			INT_VAL$=Mid$(INT_VAL$,2)
		EndIf
		
		If Instr(FS$,"E-")
			If ZERO$<>"0"
			;	ZERO$=Left$(ZERO$,DEC-1)
				FIN$="0."+Mid$(ZERO$,2)
			Else
				FIN$="0."
			EndIf
			DEC_VAL$=INT_VAL$+DEC_VAL$
			DEC_VAL$=Left$(DEC_VAL$,DEC-1)
			FIN$=FIN$+DEC_VAL$
			If Len(ZERO$)>DEC
				FIN$="0."+D$
			EndIf
		Else
			;ZERO$=Left$(ZERO$,DEC-1
		;	DEC_VAL$=Left$(DEC_VAL$,DEC-1)
			FIN$=INT_VAL$+DEC_VAL$+ZERO$+"."+D$
		EndIf
				
		If MINUS=True
			FIN$="-"+FIN$
		EndIf
		
		Return FIN$
	Else
		DEC_PLACE=Instr(FS$,".")
		DEC_VAL$=Mid$(FS$,DEC_PLACE+1,DEC)
		If Len(DEC_VAL$)<DEC
			DEC_VAL$=DEC_VAL$+"0"
		EndIf
		INT_VAL$=Left$(FS$,DEC_PLACE)
		Return INT_VAL$+DEC_VAL$
	EndIf
	
	Else
	
	FIN$="0."+D$
	Return FIN$
	EndIf
	
End Function

Function GUI_SORTFILE$()
	Repeat
		AL.GUI_FILE_TYPE=First GUI_FILE_TYPE
		GO_AGAIN=False
		Repeat
			BL.GUI_FILE_TYPE=After AL.GUI_FILE_TYPE
			If BL<>Null And AL<>Null
				F$=AL\F$:TP$=AL\TYP$:SIZE=AL\SIZE
				SMALL=GUI_SMALLER_STRING(AL.GUI_FILE_TYPE,BL.GUI_FILE_TYPE)
				If SMALL=0
					AL.GUI_FILE_TYPE=After AL.GUI_FILE_TYPE
					FINI=False
				Else
					AL\F$=BL\F$:AL\TYP$=BL\TYP$:AL\SIZE=BL\SIZE
					BL\F$=F$:BL\TYP$=TP$:BL\SIZE=SIZE
					AL.GUI_FILE_TYPE=After AL.GUI_FILE_TYPE
					GO_AGAIN=True
					FINI=False
				EndIf
			Else
				FINI=True
			EndIf
		Until FINI=True
	Until GO_AGAIN=False
	For AL.GUI_FILE_TYPE=Each GUI_FILE_TYPE
		Select AL\TYP$
			Case ".IMG"
				RET$=RET$+AL\F$+"*IC5#"
			Case ".FIL"
				RET$=RET$+AL\F$+"*IC3#"
			Case ".DIR"
				AL\F$=Mid$(AL\F$,2)
				Select AL\F$
					Case "."
						RET$=RET$+"Drives*IC6#"
					Case ".."
						RET$=RET$+"Parent Dir*IC1#"
					Default
						RET$=RET$+AL\F$+"*IC0#"
				End Select
		End Select
	Next
	Return RET$
End Function

Function GUI_SMALLER_STRING(A.GUI_FILE_TYPE,B.GUI_FILE_TYPE)
	RET=0
	If B\TYP$=".DIR" And A\TYP$<>".DIR"
		RET=1
		Return RET
	Else
	If Lower$(A\F$)>Lower$(B\F$)
		RET=1
	Else
		RET=0
	EndIf
	;	L=1
	;	Repeat
	;		AS$=Lower$(Mid$(A\F$,L,1))
	;		BS$=Lower$(Mid$(B\F$,L,1))
	;		If Asc(AS$)=Asc(BS$)
	;			DONE=False
	;			L=L+1
	;			RET=0
	;		Else
	;			If Asc(AS$)>Asc(BS$)
	;				DONE=True
	;				RET=1
	;				Exit
	;			Else
	;				DONE=True
	;				RET=0
	;				Exit
	;			EndIf
	;		EndIf
	;	Until L>Len(A\F$) Or L>Len(B\F$) Or DONE=True
	EndIf
	Return RET
End Function


Function GUI_FILEREQUEST$(TITLE$,CARD$="",CDIR$="",SRT=1,SX=-1,SY=-1)
	QM=GUI_QMENU_ON
	GUI_QMENU_ON=0
	If CARD$="" Or Instr(CARD$,"#")=0
		CARD$=".txt#.htm#.bmp#.jpg#.png#All Images#All Files#"
	EndIf
	If CDIR$=""
		CDIR$=CurrentDir$()
	EndIf
	
	T.WINDOW=GUI_WINDOW(250,200,306,296,TITLE$,1,0,1,0,0)
	TYP.GADGET=GUI_SELECTOR(T,172,228,73,CARD$,1,"Select FileType")
	DL$=GUI_READ_DIR$(CDIR$,GUI_GADTEXT$(TYP),1)
	LIST.GADGET=GUI_TXTLIST(T,4,23,150,169,DL$,1,"Select Directory/File")
	DIR.GADGET=GUI_TXTINPUT(T,12,204,256,CDIR$,"Dir.",50,0,"Current Directory")
	FIL.GADGET=GUI_TXTINPUT(T,12,228,128,"","File",50,1,"Current File")
	OK.GADGET=GUI_BUTTUN(T,4,276,64,"OK",1,"OK")
	SORT.GADGET=GUI_TICK(T,260,230,"Sort",1,0,1,"File sort On/Off")
	DRV.GADGET=GUI_BUTTUN(T,4,252,64,"Drives",1,"List Drives")
	PAR.GADGET=GUI_BUTTUN(T,76,252,64,"Parent",1,"Previous Directory")
	CAN.GADGET=GUI_BUTTUN(T,215,276,64,"Cancel",1,"Cancel Operation")
	FRAME0.GADGET=GUI_FRAME(T,172,20,126,168,"File Info",0,"")
	FRAME1.GADGET=GUI_FRAME(T,4,199,296,48,"",0,"")
	MESS.GADGET=GUI_TEXT(T,176,35,110,150,"File Size: ","")
	IMG.GADGET=GUI_IMAGEBOX(T,185,80,100,100,"",1,1,"")
	ABT.GADGET=GUI_BUTTUN(T,284,276,15,"?",1,"Info....")
	GUI_OPENWIN(T)
	
	GUI_WIN_SKIN(T,GUI_SKIN0_NORM,GUI_SKIN1_NORM)
	
	Repeat
		Flip:SetBuffer BackBuffer():Cls
		OLDDIR$=GUI_GADTEXT$(DIR)
		OLDFIL$=GUI_GADTEXT$(FIL)
		OLDLST$=GUI_GADTEXT$(LIST)
		If EVENT$="NONE" And GUI_GADEVENT$<>"GUI_SELECTOR"
			OLDTYP$=GUI_GADTEXT$(TYP)
		EndIf
		GUI()
		
		If OLDLST$<>GUI_GADTEXT$(LIST)
			Select Upper$(GUI_GADTEXT$(LIST))
				Case "DRIVES"
					GUI_SETTEXT(LIST,GUI_DRVLIST$())
					GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
					GUI_SETTEXT(DIR,"")
					GUI_GADACTIVE(PAR,0)
				Case "PARENT DIR"
					NEW_DIR$=GUI_PARENTDIR$(CurrentDir$())
					GUI_SETTEXT(LIST,GUI_READ_DIR$(NEW_DIR$,GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
					GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
					GUI_SETTEXT(DIR,CurrentDir$())
				Default
					If GUI_GADTEXT$(LIST)<>"ERROR" And GUI_GADTEXT$(LIST)<>""
						AL.GUI_FILE_TYPE=First GUI_FILE_TYPE
						DONE=False
						NEW_FIL$=Upper$(GUI_GADTEXT$(LIST))
						Repeat
							If AL<>Null
								If Upper$(AL\F$)=NEW_FIL$
									Select AL\TYP$
										Case ".DIR"
											GUI_GADACTIVE(PAR,1)
											NEW_DIR$=GUI_GADTEXT$(DIR)
											If Right$(NEW_DIR$,1)="\"
												NEW_DIR$=NEW_DIR$+GUI_GADTEXT$(LIST)
											Else
												NEW_DIR$=NEW_DIR$+"\"+GUI_GADTEXT$(LIST)
											EndIf
											GUI_SETTEXT(LIST,GUI_READ_DIR$(NEW_DIR$,GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
											GUI_SETTEXT(DIR,CurrentDir$())
											GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
										Default
											GUI_SETTEXT(FIL,GUI_GADTEXT$(LIST))
											If AL\TYP$<>".IMG"
												If AL\SIZE<1024
													GUI_SETTEXT(MESS,"File Size: "+AL\SIZE+" b")
												Else
													GUI_SETTEXT(MESS,"File Size: "+AL\SIZE/1024+" Kb")
												EndIf	
											Else
												GUI_SETTEXT(IMG,CurrentDir$()+"\"+AL\F$)
												If AL\SIZE<1024
													M$="File Size: "+AL\SIZE+" b"
												Else
													M$="File Size: "+AL\SIZE/1024+" Kb"
												EndIf
												M$=M$+Chr$(10)
												M$=M$+IMG\IMAGEBOX\W+"x"+IMG\IMAGEBOX\H
												GUI_SETTEXT(MESS,M$)
											EndIf
									End Select
									DONE=True
								Else
									AL=After AL
								EndIf
							Else
								DONE=True
							EndIf
						Until DONE=True
					EndIf
			End Select
			If GUI_GADTEXT$(LIST)=""
				GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
				GUI_SETTEXT(MESS,"File Size:")
			EndIf
		EndIf
				
		DIR\HELP$=GUI_GADTEXT$(DIR)
		
		Select EVENT$
			Case "KILLWIN"
				FINI=True
				RET$="NONE"
			Case "GUI_GADHIT"
				Select GUI_GADHIT\ID
					Case ABT\ID
						M$="XLNT-GUI File Requester v2.0"+Chr$(10)
						M$=M$+"Written by Yappy (stew yapp)"+Chr$(10)
						M$=M$+"For use with Xlnt v1.73 and higher."+Chr$(10)+Chr$(10)
						M$=M$+"Xlnt-GUI, coded by myself, is a a fully featured set of Graphic User Interface functions for use within BlitzBasic programs."+Chr$(10)
						M$=M$+"For more information about the latest version, feature requests, or to report any bugs then please contact me at...."+Chr$(10)+Chr$(10)
						M$=M$+"stew.yapp@btinternet.com"+Chr$(10)+Chr$(10)
						M$=M$+"Greetings go to all the Blitz lads...."+Chr$(10)
						M$=M$+"Thanx for all your feedback and advice :)"+Chr$(10)+Chr$(10)
						M$=M$+"Cheers, Yappy 13/10/01"+Chr$(10)
						GUI_MESSAGE("XLNT-GUI Information",M$,"Okay!#")
					Case TYP\ID
						If GUI_GADTEXT$(TYP)<>OLDTYP$
							GUI_SETTEXT(LIST,GUI_READ_DIR$(CurrentDir$(),GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
							GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
							GUI_SETTEXT(DIR,CurrentDir$())
						EndIf
					Case OK\ID
						FINI=True
						RET$=GUI_GADTEXT$(DIR)+"\"+GUI_GADTEXT$(FIL)
					Case CAN\ID
						RET$="NONE"
						FINI=True
					Case DRV\ID
						GUI_SETTEXT(LIST,GUI_DRVLIST$())
						GUI_SETTEXT(DIR,"")
						GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
						GUI_GADACTIVE(PAR,0)
					Case PAR\ID
						NEW_DIR$=GUI_PARENTDIR$(CurrentDir$())
						GUI_SETTEXT(LIST,GUI_READ_DIR$(NEW_DIR$,GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
						GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
						GUI_SETTEXT(DIR,CurrentDir$())
				End Select
			Case "TEXT INPUT"
				Select GUI_GADHIT\ID
					Case DIR\ID
					Case FIL\ID
						If Right$(GUI_GADTEXT$(DIR),1)="\"
							RET$=GUI_GADTEXT$(DIR)+GUI_GADTEXT$(FIL)
							directoryforadam$=GUI_GADTEXT$(DIR)
						Else
							RET$=GUI_GADTEXT$(DIR)+"\"+GUI_GADTEXT$(FIL)
							directoryforadam$=GUI_GADTEXT$(DIR)+"\"
						EndIf
						FINI=True
				End Select
				
		End Select
	Until FINI=True
	GUI_FREEWIN(T)
	GUI_QMENU_ON=QM
	RET$=Replace$(RET$,"\\","\")
	directoryforadam$=GUI_GADTEXT$(DIR)
	Return RET$
End Function

Function GUI_IMAGEREQUEST$(TITLE$,CARD$="",CDIR$="",SRT=1,SX=-1,SY=-1)
	QM=GUI_QMENU_ON
	GUI_QMENU_ON=0
	If CARD$="" Or Instr(CARD$,"#")=0
		CARD$=".bmp#.jpg#.png#All Images#"
	EndIf
	If CDIR$=""
		CDIR$=CurrentDir$()
	EndIf
	T.WINDOW=GUI_WINDOW(250,200,306,296,TITLE$,1,0,1,0,0)
	TYP.GADGET=GUI_SELECTOR(T,172,228,73,CARD$,1,"Select FileType")
	DL$=GUI_READ_DIR$(CDIR$,GUI_GADTEXT$(TYP),1)
	LIST.GADGET=GUI_TXTLIST(T,4,23,150,169,DL$,1,"Select Directory/File")
	DIR.GADGET=GUI_TXTINPUT(T,12,204,256,CDIR$,"Dir.",50,0,"Current Directory")
	FIL.GADGET=GUI_TXTINPUT(T,12,228,128,"","File",50,1,"Current File")
	OK.GADGET=GUI_BUTTUN(T,4,276,64,"OK",1,"OK")
	SORT.GADGET=GUI_TICK(T,260,230,"Sort",1,0,1,"File sort On/Off")
	DRV.GADGET=GUI_BUTTUN(T,4,252,64,"Drives",1,"List Drives")
	PAR.GADGET=GUI_BUTTUN(T,76,252,64,"Parent",1,"Previous Directory")
	CAN.GADGET=GUI_BUTTUN(T,215,276,64,"Cancel",1,"Cancel Operation")
	FRAME0.GADGET=GUI_FRAME(T,172,20,126,168,"File Info",0,"")
	FRAME1.GADGET=GUI_FRAME(T,4,199,296,48,"",0,"")
	MESS.GADGET=GUI_TEXT(T,176,35,110,150,"File Size: ","")
	IMG.GADGET=GUI_IMAGEBOX(T,185,80,100,100,"",1,1,"")
	ABT.GADGET=GUI_BUTTUN(T,284,276,15,"?",1,"Info....")
	GUI_OPENWIN(T)
	
	GUI_WIN_SKIN(T,GUI_SKIN0_NORM,GUI_SKIN1_NORM)
	
	Repeat
		Flip:SetBuffer BackBuffer():Cls
		OLDDIR$=GUI_GADTEXT$(DIR)
		OLDFIL$=GUI_GADTEXT$(FIL)
		OLDLST$=GUI_GADTEXT$(LIST)
		If EVENT$="NONE" And GUI_GADEVENT$<>"GUI_SELECTOR"
			OLDTYP$=GUI_GADTEXT$(TYP)
		EndIf
		GUI()
		
		If OLDLST$<>GUI_GADTEXT$(LIST)
			Select Upper$(GUI_GADTEXT$(LIST))
				Case "DRIVES"
					GUI_SETTEXT(LIST,GUI_DRVLIST$())
					GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
					GUI_SETTEXT(DIR,"")
					GUI_GADACTIVE(PAR,0)
				Case "PARENT DIR"
					NEW_DIR$=GUI_PARENTDIR$(CurrentDir$())
					GUI_SETTEXT(LIST,GUI_READ_DIR$(NEW_DIR$,GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
					GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
					GUI_SETTEXT(DIR,CurrentDir$())
				Default
					If GUI_GADTEXT$(LIST)<>"ERROR" And GUI_GADTEXT$(LIST)<>""
						AL.GUI_FILE_TYPE=First GUI_FILE_TYPE
						DONE=False
						NEW_FIL$=Upper$(GUI_GADTEXT$(LIST))
						Repeat
							If AL<>Null
								If Upper$(AL\F$)=NEW_FIL$
									Select AL\TYP$
										Case ".DIR"
											GUI_GADACTIVE(PAR,1)
											NEW_DIR$=GUI_GADTEXT$(DIR)
											If Right$(NEW_DIR$,1)="\"
												NEW_DIR$=NEW_DIR$+GUI_GADTEXT$(LIST)
											Else
												NEW_DIR$=NEW_DIR$+"\"+GUI_GADTEXT$(LIST)
											EndIf
											GUI_SETTEXT(LIST,GUI_READ_DIR$(NEW_DIR$,GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
											GUI_SETTEXT(DIR,CurrentDir$())
											GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
										Default
											GUI_SETTEXT(FIL,GUI_GADTEXT$(LIST))
											If AL\TYP$<>".IMG"
												If AL\SIZE<1024
													GUI_SETTEXT(MESS,"File Size: "+AL\SIZE+" b")
												Else
													GUI_SETTEXT(MESS,"File Size: "+AL\SIZE/1024+" Kb")
												EndIf	
											Else
												GUI_SETTEXT(IMG,CurrentDir$()+"\"+AL\F$)
												If AL\SIZE<1024
													M$="File Size: "+AL\SIZE+" b"
												Else
													M$="File Size: "+AL\SIZE/1024+" Kb"
												EndIf
												M$=M$+Chr$(10)
												M$=M$+IMG\IMAGEBOX\W+"x"+IMG\IMAGEBOX\H
												GUI_SETTEXT(MESS,M$)
											EndIf
									End Select
									DONE=True
								Else
									AL=After AL
								EndIf
							Else
								DONE=True
							EndIf
						Until DONE=True
					EndIf
			End Select
				
		If GUI_GADTEXT$(LIST)=""
			GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
			GUI_SETTEXT(MESS,"File Size:")
		EndIf
		EndIf
		
		DIR\HELP$=GUI_GADTEXT$(DIR)
		
		Select EVENT$
			Case "KILLWIN"
				FINI=True
				RET$="NONE"
			Case "GUI_GADHIT"
				Select GUI_GADHIT\ID
					Case ABT\ID
						M$="XLNT-GUI File Requester v2.0"+Chr$(10)
						M$=M$+"Written by Yappy (stew yapp)"+Chr$(10)
						M$=M$+"For use with Xlnt v1.73 and higher."+Chr$(10)+Chr$(10)
						M$=M$+"Xlnt-GUI, coded by myself, is a a fully featured set of Graphic User Interface functions for use within BlitzBasic programs."+Chr$(10)
						M$=M$+"For more information about the latest version, feature requests, or to report any bugs then please contact me at...."+Chr$(10)+Chr$(10)
						M$=M$+"stew.yapp@btinternet.com"+Chr$(10)+Chr$(10)
						M$=M$+"Greetings go to all the Blitz lads...."+Chr$(10)
						M$=M$+"Thanx for all your feedback and advice :)"+Chr$(10)+Chr$(10)
						M$=M$+"Cheers, Yappy 13/10/01"+Chr$(10)
						GUI_MESSAGE("XLNT-GUI Information",M$,"Okay!#")
					Case TYP\ID
						If GUI_GADTEXT$(TYP)<>OLDTYP$
							GUI_SETTEXT(LIST,GUI_READ_DIR$(CurrentDir$(),GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
							GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
							GUI_SETTEXT(DIR,CurrentDir$())
						EndIf
					Case OK\ID
						FINI=True
						RET$=GUI_GADTEXT$(DIR)+"\"+GUI_GADTEXT$(FIL)
					Case CAN\ID
						RET$="NONE"
						FINI=True
					Case DRV\ID
						GUI_SETTEXT(LIST,GUI_DRVLIST$())
						GUI_SETTEXT(DIR,"")
						GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
						GUI_GADACTIVE(PAR,0)
					Case PAR\ID
						NEW_DIR$=GUI_PARENTDIR$(CurrentDir$())
						GUI_SETTEXT(LIST,GUI_READ_DIR$(NEW_DIR$,GUI_GADTEXT$(TYP),GUI_GADVAL(SORT)))
						GUI_SETTEXT(FIL,""):GUI_SETTEXT(MESS,"File Size:")
						GUI_SETTEXT(DIR,CurrentDir$())
				End Select
			Case "TEXT INPUT"
				Select GUI_GADHIT\ID
					Case DIR\ID
					Case FIL\ID
						If Right$(GUI_GADTEXT$(DIR),1)="\"
							RET$=GUI_GADTEXT$(DIR)+GUI_GADTEXT$(FIL)
						Else
							RET$=GUI_GADTEXT$(DIR)+"\"+GUI_GADTEXT$(FIL)
						EndIf
						FINI=True
				End Select
				
		End Select
	Until FINI=True
	GUI_FREEWIN(T)
	GUI_QMENU_ON=QM
	RET$=Replace$(RET$,"\\","\")
	Return RET$
End Function

Function GUI_DOMENU(WIN.WINDOW)
	SetBuffer BackBuffer()
	GUI_MENUHIT=-1
	GUI_MENUOVER=-1
	X=WIN\X:Y=WIN\Y:W=WIN\W:H=WIN\H
	GUI_BOXBUT(X+GUI_FONTHITE+2,Y+3,W-(GUI_FONTHITE*3)-3,GUI_FONTHITE-2,0,WIN)
	GUI_COL(0)
	MENUX=X+GUI_FONTHITE+4:MENUY=Y+2
	If RectsOverlap(WIN\X,WIN\Y,WIN\W,GUI_FONTHITE-3,MouseX(),MouseY(),1,1)
		For M=0 To GUI_MAXM
			If MENUS(M)\STATUS<>0 And MENUS(M)\WIN=WIN And MENUS(M)\TYP=0
				MENUS(M)\X=MENUX:MENUS(M)\Y=MENUY:MENUS(M)\W=StringWidth(MENUS(M)\TITLE$)+4:MENUS(M)\H=GUI_FONTHITE-2
				If RectsOverlap(MENUX,MENUY,MENUS(M)\W,MENUS(M)\H,MouseX(),MouseY(),1,1)
					GUI_FREEMENUS()
					GUI_MNULIST(0)\MNU=M
					GUI_MNULIST(0)\STATUS=1
					GUI_MENUOVER=M
				Else
					GUI_COL(0):Text MENUS(M)\X+3,MENUS(M)\Y,MENUS(M)\TITLE$
				EndIf
				MENUX=MENUX+StringWidth(MENUS(M)\TITLE$)+6
			EndIf
		Next
	Else
		For M=0 To GUI_MAXM
			If MENUS(M)\STATUS<>0 And MENUS(M)\WIN=WIN And MENUS(M)\TYP=0
				MENUS(M)\X=MENUX:MENUS(M)\Y=MENUY:MENUS(M)\W=StringWidth(MENUS(M)\TITLE$)+4:MENUS(M)\H=GUI_FONTHITE-2
				GUI_COL(0):Text MENUS(M)\X+3,MENUS(M)\Y,MENUS(M)\TITLE$
				MENUX=MENUX+StringWidth(MENUS(M)\TITLE$)+6
			EndIf
		Next
	EndIf
		
	If GUI_MNULIST(0)\STATUS<>0
		M=GUI_MNULIST(0)\MNU
		MENUX=MENUS(M)\X:MENUY=MENUS(M)\Y:
		GUI_BOXBUT(MENUX,MENUY,MENUS(M)\W,MENUS(M)\H,1,WIN)
		GUI_COL(0):Text MENUS(M)\X+3,MENUS(M)\Y,MENUS(M)\TITLE$
		For MNU=0 To 10
			If GUI_MNULIST(MNU)\STATUS<>0
				GUI_DRAWMENU(GUI_MNULIST(MNU)\MNU,MENUS(GUI_MNULIST(MNU)\MNU)\X,MENUS(GUI_MNULIST(MNU)\MNU)\Y)
			EndIf
		Next
		OM=GUI_OPENMENU():OM=GUI_MNULIST(OM)\MNU
		If MENUS(OM)\TYP=0
			MH=MENUS(OM)\MH+GUI_FONTHITE+4
		Else
			MH=MENUS(OM)\MH
		EndIf
		If RectsOverlap(MouseX(),MouseY(),1,1,MENUS(OM)\X,MENUS(OM)\Y,MENUS(OM)\MW,MH)
		GUI_MENUOVER=OM
		For M=0 To GUI_MAXMI
			If MITEM(M)\STATUS<>0 And MITEM(M)\MENU=OM
				IX=MENUS(OM)\X:IY=MITEM(M)\Y:IW=MENUS(OM)\MW:IH=MITEM(M)\H
				If RectsOverlap(MouseX(),MouseY(),1,1,IX,IY,IW,IH) And MITEM(M)\ACTIVE<>0
					Select MITEM(M)\TYP
						Case 0
							GUI_BOXBUT(IX+1,IY,IW-2,IH-1,1,WIN)
							GUI_COL(0)
							Text IX+3,IY,MITEM(M)\CAPTION$
							If MITEM(M)\KEY$<>""
								Text IX+IW-StringWidth(MITEM(M)\KEY$)-3,IY,MITEM(M)\KEY$
							EndIf
							If MouseDown(1)
								GUI_MENUHIT=M
							;	EVENT$="NONE"
								GUI_MENUOVER=-1
								GUI_FREEMENUS()
								GUI_MWAIT=True
								GUI_MENUOVER=-1
								GUI_WINEVENT$="NONE"
								EVENT$="NONE"
								GUI_GADEVENT$="NONE"
								GUI_FREEMENUS()
								GUI_MENUOVER=-1
							EndIf
						Case 3
							GUI_BOXBUT(IX+14,IY,IW-2-14,IH-2,1,WIN)
							GUI_COL(0)
							Text IX+16,IY-1,MITEM(M)\CAPTION$
							If MITEM(M)\KEY$<>""
								Text IX+IW-StringWidth(MITEM(M)\KEY$)-3,IY,MITEM(M)\KEY$
							EndIf
							If MouseDown(1) And RectsOverlap(MouseX(),MouseY(),1,1,IX,IY,IW,IH)
								While MouseDown(1) Wend
								GUI_MENUHIT=M
								MITEM(M)\MISC=1-MITEM(M)\MISC
								If MITEM(M)\GROUP<>0 And MITEM(M)\MISC=1 
									GUI_MENUGROUP(MITEM(M)\GROUP,M)
								EndIf
							EndIf
						Case 4
							OM=GUI_OPENMENU()
							OPM=GUI_MNULIST(OM)\MNU
							NXM=MITEM(M)\MISC
							GUI_MNULIST(OM+1)\STATUS=1
							GUI_MNULIST(OM+1)\MNU=MITEM(M)\MISC
							MENUS(NXM)\X=MENUS(OPM)\X+MENUS(OPM)\MW
							MENUS(NXM)\Y=IY
							MENUS(NXM)\OX=MENUS(OPM)\X:MENUS(NXM)\OY=IY:MENUS(NXM)\OW=MENUS(OPM)\MW:MENUS(NXM)\OH=IH
					End Select
				EndIf
			EndIf
		Next
		Else
		OM=GUI_OPENMENU()
		OM=GUI_MNULIST(OM)\MNU
			If RectsOverlap(MouseX(),MouseY(),1,1,MENUS(OM)\OX,MENUS(OM)\OY,MENUS(OM)\OW,MENUS(OM)\OH)=False
				OM=GUI_OPENMENU()
				GUI_MNULIST.GUI_MNU(OM)=New GUI_MNU
				GUI_MNULIST(OM)\STATUS=0
			EndIf
		EndIf
	EndIf
End Function


Function GUI_DRAWMENU(MNU,X,Y)
	WIN.WINDOW=GUI_ACTIVEWIN
	W=MENUS(MNU)\MW:H=MENUS(MNU)\MH+1
	If MENUS(MNU)\TYP=0 Then Y=WIN\Y+GUI_FONTHITE+4
	If MENUS(MNU)\TYP<>0
		WIN=GUI_DEF_WIN
	EndIf
	GUI_BOXBUT(X,Y,W,H,0,WIN)
	IX=X+3:IY=Y+1:IW=MENUS(MNU)\MW
	For M=0 To GUI_MAXMI
		If MITEM(M)\STATUS<>0 And MITEM(M)\MENU=MNU
			Select MITEM(M)\TYP
				Case 0				;A NORMAL ITEM
					MITEM(M)\X=IX:MITEM(M)\Y=IY:MITEM(M)\W=IW:MITEM(M)\H=GUI_FONTHITE
					If MITEM(M)\ACTIVE<>0
						GUI_COL(0):Text IX,IY,MITEM(M)\CAPTION$
						If MITEM(M)\KEY$<>""
							Text IX+IW-StringWidth(MITEM(M)\KEY$)-6,IY-1,MITEM(M)\KEY$
						EndIf
					Else
						GUI_EMBOSS(IX,IY,MITEM(M)\CAPTION$,GUI_BUTCOL0)
					EndIf
					IY=IY+MITEM(M)\H
				Case 1			;A Line
					MITEM(M)\X=IX:MITEM(M)\Y=IY:MITEM(M)\W=IW-6:MITEM(M)\H=2
					;GUI_WINBUT(IX-1,IY,IW-6,2)
					Color 100,100,100
					Rect IX-1,IY+((GUI_FONTHITE-4)/2),IW-6,1
					Color 250,250,250
					Rect IX-1,IY+1+((GUI_FONTHITE-4)/2),IW-6,1
					IY=IY+GUI_FONTHITE-4;MITEM(M)\H
				Case 2			;A SPACE
					IY=IY+GUI_FONTHITE-4
				Case 3			;A ON/OFF MENUITEM
					MITEM(M)\X=IX:MITEM(M)\Y=IY:MITEM(M)\W=IW:MITEM(M)\H=GUI_FONTHITE
					If MITEM(M)\MISC=False
						GUI_BOXBUT(IX,IY,10,10,1,WIN)
					Else
						
						GUI_BOXBUT(IX,IY,10,10,1,WIN)
						GUI_BOXBUT(IX+1,IY+1,8,8,0,WIN)
					EndIf
					If MITEM(M)\ACTIVE<>0
						GUI_COL(0):Text IX+13,IY-1,MITEM(M)\CAPTION$
						If MITEM(M)\KEY$<>""
							Text IX+IW-StringWidth(MITEM(M)\KEY$)-6,IY-1,MITEM(M)\KEY$
						EndIf
					Else
						GUI_EMBOSS(IX+13,IY-1,MITEM(M)\CAPTION$,GUI_BUTCOL0)
					EndIf
					IY=IY+MITEM(M)\H+1
				Case 4
					MITEM(M)\X=IX:MITEM(M)\Y=IY:MITEM(M)\W=IW:MITEM(M)\H=GUI_FONTHITE
					If MITEM(M)\ACTIVE<>0
						GUI_COL(0):Text IX,IY,MITEM(M)\CAPTION$
						GUI_ARROW("R",IX+IW-9,IY+4,0)
					Else
						GUI_EMBOSS(IX,IY,MITEM(M)\CAPTION$,GUI_BUTCOL0)
						GUI_ARROW("R",IX+IW-8,IY+5,GUI_BUTCOL0+1)
						GUI_ARROW("R",IX+IW-9,IY+4,GUI_BUTCOL0-1)
					EndIf
					IY=IY+MITEM(M)\H
			End Select
		EndIf
	Next
	If MENUS(MNU)\TYP=0
		MENUS(MNU)\MH=IY-Y
	EndIf
End Function


Function GUI_OPENMENU()
	RET=-1
	For T=0 To 10
		If GUI_MNULIST(T)\STATUS<>0
			RET=T
		EndIf
	Next
	Return RET
End Function

Function GUI_MENUGROUP(GROUP,ION)		
	For M=0 To GUI_MAXMI
		If MITEM(M)\STATUS<>0 And MITEM(M)\TYP=3
			If MITEM(M)\GROUP=GROUP
				If M<>ION
					MITEM(M)\MISC=False
				EndIf
			EndIf
		EndIf
	Next
End Function



Function GUI_FREEMENUS()
	For T=0 To 10
		Delete GUI_MNULIST(T)
		GUI_MNULIST.GUI_MNU(T)=New GUI_MNU
		GUI_MNULIST(T)\STATUS=0
	Next
End Function

Function GUI_DOQMENU(M)
	SetBuffer BackBuffer()
	GUI_MENUHIT=-1
	;GUI_BUT(GUI_QMENUX,GUI_QMENUY,100,300,0)
	;GUI_COL(0)
	;GUI_DRAWMENU(M,GUI_QMENUX,GUI_QMENUY)
	;GUI_FREEMENUS()
	If GUI_OPENMENU()=-1
		GUI_FREEMENUS()
		GUI_MNULIST(0)\STATUS=1
		GUI_MNULIST(0)\MNU=M
		MENUS(M)\X=GUI_QMENUX
		MENUS(M)\Y=GUI_QMENUY
		GUI_QMENUOVER=0	
	EndIf
	If GUI_MNULIST(0)\STATUS<>0
		M=GUI_MNULIST(0)\MNU
		MENUX=MENUS(M)\X:MENUY=MENUS(M)\Y
		For MN=0 To 10
			If GUI_MNULIST(MN)\STATUS<>0
				If RectsOverlap(MouseX(),MouseY(),1,1,MENUS(GUI_MNULIST(MN)\MNU)\X,MENUS(GUI_MNULIST(MN)\MNU)\Y,MENUS(GUI_MNULIST(MN)\MNU)\MW,MENUS(GUI_MNULIST(MN)\MNU)\MH)
					GUI_QMENUOVER=1
				EndIf
				GUI_DRAWMENU(GUI_MNULIST(MN)\MNU,MENUS(GUI_MNULIST(MN)\MNU)\X,MENUS(GUI_MNULIST(MN)\MNU)\Y)
			EndIf
		Next
		OM=GUI_OPENMENU():OM=GUI_MNULIST(OM)\MNU
		If MENUS(OM)\TYP=0
			MH=MENUS(OM)\MH+GUI_FONTHITE+4
		Else
			MH=MENUS(OM)\MH
		EndIf
		If RectsOverlap(MouseX(),MouseY(),1,1,MENUS(OM)\X,MENUS(OM)\Y,MENUS(OM)\MW,MH)
		For M=0 To GUI_MAXMI
			If MITEM(M)\STATUS<>0 And MITEM(M)\MENU=OM
				IX=MENUS(OM)\X:IY=MITEM(M)\Y:IW=MENUS(OM)\MW:IH=MITEM(M)\H
				If RectsOverlap(MouseX(),MouseY(),1,1,IX,IY,IW,IH) And MITEM(M)\ACTIVE<>0
					Select MITEM(M)\TYP
						Case 0
							GUI_BOXBUT(IX+1,IY,IW-2,IH-1,1,Null)
							GUI_COL(0)
							Text IX+3,IY,MITEM(M)\CAPTION$
							If MITEM(M)\KEY$<>""
								Text IX+IW-StringWidth(MITEM(M)\KEY$)-3,IY,MITEM(M)\KEY$
							EndIf
							If MouseDown(1)
								GUI_QMENUHIT=M
								GUI_WINEVENT$="QMENU_HIT"
								EVENT$="NONE"
								GUI_MWAIT=True
							;	While MouseDown(1) Wend
							EndIf
						Case 3
							GUI_BOXBUT(IX+14,IY,IW-2-14,IH-2,1,Null)
							GUI_COL(0)
							Text IX+16,IY-1,MITEM(M)\CAPTION$
							If MITEM(M)\KEY$<>""
								Text IX+IW-StringWidth(MITEM(M)\KEY$)-3,IY,MITEM(M)\KEY$
							EndIf
							If MouseDown(1) And RectsOverlap(MouseX(),MouseY(),1,1,IX,IY,IW,IH)
								GUI_QMENUHIT=M
								MITEM(M)\MISC=1-MITEM(M)\MISC
								If MITEM(M)\GROUP<>0 And MITEM(M)\MISC=1 
									GUI_MENUGROUP(MITEM(M)\GROUP,M)
								EndIf
							EndIf
							While MouseDown(1) Wend
						Case 4
							FlushMouse
							OM=GUI_OPENMENU()
							OPM=GUI_MNULIST(OM)\MNU
							NXM=MITEM(M)\MISC
							GUI_MNULIST(OM+1)\STATUS=1
							GUI_MNULIST(OM+1)\MNU=MITEM(M)\MISC
							MENUS(NXM)\X=MENUS(OPM)\X+MENUS(OPM)\MW
							MENUS(NXM)\Y=IY
							MENUS(NXM)\OX=MENUS(OPM)\X:MENUS(NXM)\OY=IY:MENUS(NXM)\OW=MENUS(OPM)\MW:MENUS(NXM)\OH=IH
							;Color 255,0,0:Rect MENUS(NXM)\X,MENUS(NXM)\Y,100,100
					End Select
				EndIf
			EndIf
		Next
		Else
		OM=GUI_OPENMENU()
		OM=GUI_MNULIST(OM)\MNU
			If RectsOverlap(MouseX(),MouseY(),1,1,MENUS(OM)\OX,MENUS(OM)\OY,MENUS(OM)\OW,MENUS(OM)\OH)=False
				OM=GUI_OPENMENU()
				GUI_MNULIST.GUI_MNU(OM)=New GUI_MNU
				GUI_MNULIST(OM)\STATUS=0
			EndIf
		EndIf
	EndIf
	If GUI_WINEVENT$="QMENU_HIT"
		EVENT$="QMENU"
		GUI_WINEVENT$="QMENU"
		GUI_QMENUOVER=-1
		GUI_WINEVENT$="NONE"
		EVENT$="NONE"
		GUI_GADEVENT$="NONE"
		GUI_FREEMENUS()
		GUI_QMENUOVER=-1
	EndIf
End Function




Function GUI_GFXSETUP()

SetBuffer BackBuffer()
GUI_SCREENW=GraphicsWidth()		;WIDTH OF SCREEN
GUI_SCREENH=GraphicsHeight()

If GUI_BG_VW=-1 Then GUI_BG_VW=GUI_SCREENW
If GUI_BG_VH=-1 Then GUI_BG_VH=GUI_SCREENH

If GUI_MOUSE>0
	;FreeImage GUI_MOUSE
EndIf

GUI_MOUSE=CreateImage(57,15)
Restore GFX
SetBuffer ImageBuffer(GUI_MOUSE)
LockBuffer ImageBuffer(GUI_MOUSE)
For T=0 To 15
	GRAY=T*17
	COL=(GRAY Shl 16)+(GRAY Shl 8)+GRAY
	WritePixelFast 0,0,COL,ImageBuffer(GUI_MOUSE)
	GR=ReadPixelFast(0,0,ImageBuffer(GUI_MOUSE)) And $FFFFFF
	GUI_RGB(T)=GR
Next

 
WritePixelFast 0,0,64512,ImageBuffer(GUI_MOUSE)
GCOL=ReadPixelFast(0,0,ImageBuffer(GUI_MOUSE)) And $FFFFFF
GCOL=(GCOL Shr 8) And 255

;GREEN=255 Shl 8
;WritePixelFast 0,0,GREEN And $FFFFFF,ImageBuffer(GUI_MOUSE)
;GCOL=ReadPixelFast(0,0,ImageBuffer(GUI_MOUSE)) And $FFFFFF
;GCOL=(GCOL Shr 8) And 255
For Y=0 To ImageHeight(GUI_MOUSE)-1
	For X=0 To ImageWidth(GUI_MOUSE)-1
		Read COL
		WritePixelFast X,Y,COL,ImageBuffer(GUI_MOUSE)
	Next
Next
UnlockBuffer ImageBuffer(GUI_MOUSE)
MaskImage GUI_MOUSE,0,GCOL,0
If GUI_POINTER>0
	;FreeImage GUI_POINTER
	;FreeImage GUI_RESIZE
EndIf
GUI_POINTER=CreateImage(11,15)
GUI_RESIZE=CreateImage(7,15)
GUI_HAND=CreateImage(11,15)
GUI_GO=CreateImage(13,15)
GUI_CROSS=CreateImage(15,15)
SetBuffer ImageBuffer(GUI_MOUSE)
GrabImage GUI_POINTER,0,0
GrabImage GUI_RESIZE,11,0
GrabImage GUI_HAND,18,0
GrabImage GUI_GO,29,0
GrabImage GUI_CROSS,42,0
MaskImage GUI_POINTER,0,GCOL,0
MaskImage GUI_RESIZE,0,GCOL,0
MaskImage GUI_HAND,0,GCOL,0
MaskImage GUI_GO,0,GCOL,0
MaskImage GUI_CROSS,0,GCOL,0
FreeImage GUI_MOUSE
GUI_MOUSE=GUI_POINTER
SetBuffer BackBuffer()
GUI_ICONS=CreateImage(10,9,7)
For F=0 To 6
SetBuffer ImageBuffer(GUI_ICONS,F)
LockBuffer ImageBuffer(GUI_ICONS,F)
For Y=0 To 8
	For X=0 To 9
		Read COL
		WritePixelFast X,Y,COL,ImageBuffer(GUI_ICONS,F)
	Next
Next
UnlockBuffer ImageBuffer(GUI_ICONS,F)
Next

SetBuffer BackBuffer()

GUI_FONTHITE=14
GUI_FONT=LoadFont("ARIAL",GUI_FONTHITE,1)	;LOAD OUR GUI FONT
SetFont GUI_FONT
For T=0 To 15
	Read GUI_RGBADD(T)
Next

GUI_DEF_WIN=GUI_WINDOW(0,0,10,10,"",0,0,0,0,0)
GUI_OPENWIN(GUI_DEF_WIN)
GUI_HIDEWIN(GUI_DEF_WIN)

End Function

Function GUI_DELAY(D)
	If D=0 And GUI_TIME>0
;		GUI_TIME=GUI_TIME/10
		TIME=MilliSecs()
		While MilliSecs()-TIME<GUI_TIME
		Wend
		GUI_TIME=0
	Else
		If GUI_TIME<D
			GUI_TIME=D
		EndIf
	EndIf	
End Function

Function GUI_BOXBUT_SKIN(x,y,w,h,INV,WIN.WINDOW)
	BUFF=GraphicsBuffer()
	IMG=CreateImage(W,H)
	SetBuffer ImageBuffer(IMG)
	If INV=0
		SetBuffer BUFF
		GUI_COL(0)
		Rect X-1,Y-1,W+2,H+2,0
		SetBuffer ImageBuffer(IMG)
		GUI_SHP_LINE(WIN,0,0,W,H,BUFF,WIN\SKIN1_NORM,X,Y)
		GUI_SHP_LINE(WIN,0,0,W,1,BUFF,WIN\SKIN1_LITE,X,Y)
		GUI_SHP_LINE(WIN,0,0,1,H,BUFF,WIN\SKIN1_LITE,X,Y)
		GUI_SHP_LINE(WIN,0,H-1,W,1,BUFF,WIN\SKIN1_DARK,X,Y+H-1)
		GUI_SHP_LINE(WIN,W-1,0,1,H,BUFF,WIN\SKIN1_DARK,X+W-1,Y)
	Else
		GUI_SHP_LINE(WIN,0,0,W,H,BUFF,WIN\SKIN1_DARK,X,Y)
		GUI_SHP_LINE(WIN,0,0,W,1,BUFF,WIN\SKIN1_DARK2,X,Y)
		GUI_SHP_LINE(WIN,0,0,1,H,BUFF,WIN\SKIN1_DARK2,X,Y)
		GUI_SHP_LINE(WIN,0,H-1,W,1,BUFF,WIN\SKIN1_LITE,X,Y+H-1)
		GUI_SHP_LINE(WIN,W-1,0,1,H,BUFF,WIN\SKIN1_LITE,X+W-1,Y)
	EndIf
	SetBuffer BUFF
	DrawBlock IMG,X,Y
	FreeImage IMG
End Function

Function GUI_DARKBUT_SKIN(x,y,w,h,WIN.WINDOW)
	BUFF=GraphicsBuffer()
	IMG=CreateImage(W,H)
	SetBuffer ImageBuffer(IMG)
	GUI_SHP_LINE(WIN,0,0,W,H,BUFF,WIN\SKIN0_DARK,X,Y)
	GUI_SHP_LINE(WIN,0,0,W,1,BUFF,WIN\SKIN0_DARK2,X,Y)
	GUI_SHP_LINE(WIN,0,0,1,H,BUFF,WIN\SKIN0_DARK2,X,Y)
	GUI_SHP_LINE(WIN,0,H-1,W,1,BUFF,WIN\SKIN0_LITE,X,Y+H-1)
	GUI_SHP_LINE(WIN,W-1,0,1,H,BUFF,WIN\SKIN0_LITE,X+W-1,Y)
	SetBuffer BUFF
	DrawBlock IMG,X,Y
	FreeImage IMG
End Function

Function GUI_AFRAME_SKIN(X,Y,W,H,WIN.WINDOW)
	BUFF=GraphicsBuffer()
	IMG=CreateImage(W,H)
	SetBuffer ImageBuffer(IMG)
	GUI_SHP_LINE(WIN,0,0,W,1,BUFF,WIN\SKIN0_DARK2,X,Y)
	GUI_SHP_LINE(WIN,0,0,1,H,BUFF,WIN\SKIN0_DARK2,X,Y)
	GUI_SHP_LINE(WIN,0,H-1,W,1,BUFF,WIN\SKIN0_LITE,X,Y+H-1)
	GUI_SHP_LINE(WIN,W-1,0,1,H,BUFF,WIN\SKIN0_LITE,X+W-1,Y)
	SetBuffer BUFF
	DrawImage IMG,X,Y
	FreeImage IMG
	
End Function

Function GUI_WINBUT_SKIN(x,y,w,h,WIN.WINDOW)
	BUFF=GraphicsBuffer()
	IMG=CreateImage(W,H)
	SetBuffer ImageBuffer(IMG)
	TileBlock WIN\SKIN0_NORM
	GUI_SHP_LINE(WIN,0,0,W,1,BUFF,WIN\SKIN0_LITE,0,0)
	GUI_SHP_LINE(WIN,0,0,1,H,BUFF,WIN\SKIN0_LITE,0,0)
	GUI_SHP_LINE(WIN,0,H-1,W,1,BUFF,WIN\SKIN0_DARK,0,0)
	GUI_SHP_LINE(WIN,W-1,0,1,H,BUFF,WIN\SKIN0_DARK,0,0)
	SetBuffer BUFF
	DrawBlock IMG,X,Y
	FreeImage IMG
End Function

Function GUI_BUT_SKIN(X,Y,W,H,INV,WIN.WINDOW)
	GUI_BOXBUT_SKIN(x,y,w,h,INV,WIN.WINDOW)
End Function

Function GUI_TABBUT_SKIN(X,Y,W,H,INV,WIN.WINDOW)
	GUI_BOXBUT_SKIN(x,y,w,h,INV,WIN.WINDOW)
End Function

Function GUI_SHP_LINE(WIN.WINDOW,X,Y,W,H,BUFF,FILL,OX,OY)
	OLD_BUFF=GraphicsBuffer()
	
	IMG=CreateImage(W,H)
	
	If BUFF=FrontBuffer() Or BUFF=BackBuffer()
		OX=OX-WIN\X
		OY=OY-WIN\Y
		SetBuffer ImageBuffer(IMG)
		TileBlock FILL,-OX,-OY
	Else
		SetBuffer ImageBuffer(IMG)
		TileBlock FILL,-OX,-OY
	EndIf
		
	IMG2=CreateImage(W,H)
	GrabImage IMG2,0,0
	
	SetBuffer OLD_BUFF
	
	DrawBlock IMG2,X,Y
	
	FreeImage IMG
	FreeImage IMG2
		
End Function


.GFX
Data 0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,16317688,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,64512,64512,64512,64512,64512,64512,64512,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,64512,64512,64512,64512,64512,64512,64512
Data 0,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,16317688,16317688,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512,0,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,16317688,0,64512,64512,64512,64512,64512,64512,64512,64512,16317688,0,16317688,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,16317688,16317688,0,64512,64512,64512,64512,64512,64512,64512,16317688,0,0,16317688,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512,0,16317688,16317688,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,16317688,16317688,16317688,0,64512,64512,64512,64512,64512,64512,16317688,0,0,0,16317688,64512,64512,64512,64512,0,16317688,0,0,64512,64512,64512,64512,64512,0,16317688,16317688,16317688,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,16317688,16317688,16317688,16317688,0,64512,64512,64512,64512,64512,16317688,0,0,0,16317688,16317688,64512,64512,64512,0,16317688,0,16317688,0,0,64512,64512,64512,0,16317688,0,0,0,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,16317688,0,64512,64512,64512,64512,64512
Data 0,16317688,16317688,16317688,16317688,16317688,0,64512,64512,64512,64512,16317688,0,0,16317688,64512,64512,16317688,64512,0,0,16317688,0,16317688,0,16317688,0,64512,64512,0,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,0,0,0,16317688,0,64512,0,16317688,0,0,0,0,64512
Data 0,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,64512,16317688,16317688,16317688,64512,16317688,16317688,16317688,0,16317688,0,16317688,0,16317688,0,16317688,0,0,64512,0,64512,64512,0,0,0,64512,64512,64512,64512,64512,64512,64512,0,16317688,16317688,16317688,16317688,0,64512,64512,64512,0,16317688,16317688,16317688,16317688,0
Data 0,16317688,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,16317688,64512,64512,16317688,0,0,16317688,0,16317688,0,16317688,16317688,16317688,16317688,16317688,0,16317688,0,64512,64512,0,16317688,16317688,16317688,0,64512,0,0,0,0,64512,64512,0,0,0,0,16317688,0,64512,0,16317688,0,0,0,0,64512
Data 0,16317688,16317688,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,16317688,16317688,0,0,0,16317688,0,16317688,0,16317688,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,0,16317688,0,0,0,0,16317688,16317688,16317688,16317688,0,64512,64512,64512,64512,64512,0,16317688,0,16317688,0,64512,64512,64512,64512,64512
Data 0,16317688,16317688,16317688,0,0,0,0,0,0,0,64512,64512,16317688,0,0,0,16317688,64512,0,16317688,16317688,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,0,16317688,0,16317688,16317688,0,16317688,0,0,16317688,0,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,16317688,16317688,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,16317688,0,0,16317688,64512,0,16317688,16317688,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,0,16317688,0,0,16317688,0,16317688,0,0,16317688,0,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,16317688,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,16317688,0,16317688,64512,64512,0,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,64512,0,16317688,16317688,16317688,16317688,0,16317688,16317688,16317688,16317688,0,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,16317688,16317688,64512,64512,0,16317688,16317688,16317688,16317688,16317688,16317688,0,64512,64512,64512,64512,0,0,0,0,64512,0,0,0,0,64512,64512,64512,64512,64512,64512,64512,0,16317688,0,64512,64512,64512,64512,64512,64512
Data 0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,16317688,64512,64512,64512,0,0,0,0,0,0,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,64512,0,64512,64512,64512,64512,64512,64512,64512

;**********************
Data 15790080,15790080,14211096,14211096,14211096,14211096,6317152,11053224,11053224,11053224
Data 15790080,15790080,15790080,15790080,15790080,15790080,14211096,14211096,14211096,11053224
Data 15790080,16317440,16317440,16317440,16317440,16317440,15790080,15790080,14211096,6317152
Data 15790080,16317440,16317440,16317440,16317440,16317440,16317440,15790080,14211096,6317152
Data 15790080,16317440,16317440,16317440,16317440,16317440,16317440,15790080,14211096,6317152
Data 15790080,16317440,16317440,16317440,16317440,16317440,16317440,15790080,14211096,6317152
Data 15790080,16317440,16317440,16317440,16317440,16317440,15790080,15790080,14211096,6317152
Data 15790080,15790080,15790080,15790080,15790080,15790080,14211096,14211096,14211096,6317152
Data 11053224,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152
Data 15790080,15790080,14211096,14211096,14211096,14211096,6317152,11053224,11053224,11053224
Data 15790080,15790080,15790080,15790080,15790080,15790080,14211096,14211096,14211096,11053224
Data 15790080,16317440,16317440,0,16317440,0,0,15790080,14211096,6317152
Data 15790080,16317440,0,0,15790080,15790080,0,14211096,14211096,6317152
Data 15790080,0,0,0,0,0,0,14211096,14211096,6317152
Data 15790080,16317440,0,0,15790080,15790080,15790080,14211096,14211096,6317152
Data 15790080,16317440,16317440,0,15790080,16317440,15790080,15790080,14211096,6317152
Data 15790080,15790080,15790080,15790080,14211096,15790080,14211096,14211096,14211096,6317152
Data 11053224,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152
Data 15790080,15790080,14211096,14211096,14211096,14211096,6317152,11053224,11053224,11053224
Data 14211096,14211096,14211096,14211096,14211096,14211096,14211096,14211096,14211096,11053224
Data 16317688,16317688,16317688,16317688,16317688,16317688,16317688,16317688,14211096,6317152
Data 14211096,14211096,14211096,14211096,14211096,13159624,16317688,16317688,8947712,6317152
Data 15790080,15790080,15790080,15790080,15790080,14211096,13159624,16317688,8947712,6317152
Data 14211096,16317440,16317440,16317440,16317440,15790080,14211096,13159624,8947712,6317152
Data 11053224,14211096,16317440,16317440,16317440,16317440,15790080,14211096,0,6317152
Data 11053224,6317152,14211096,15790080,15790080,15790080,14211096,14211096,14211096,6317152
Data 11053224,11053224,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152
Data 13159624,13159624,13159624,13159624,13159624,11053224,6317152,11053224,11053224,11053224
Data 13159624,15263976,16317688,16317688,13159624,13159624,11053224,6317152,11053224,11053224
Data 13159624,15263976,16317688,16317688,13159624,15263976,13159624,11053224,6317152,11053224
Data 13159624,15263976,16317688,16317688,13159624,16317688,15263976,13159624,11053224,6317152
Data 13159624,15263976,16317688,16317688,13159624,11053224,11053224,11053224,11053224,6317152
Data 13159624,15263976,16317688,16317688,15263976,13159624,13159624,13159624,13159624,6317152
Data 13159624,15263976,16317688,16317688,16317688,16317688,16317688,16317688,13159624,6317152
Data 13159624,13159624,13159624,13159624,13159624,13159624,13159624,13159624,13159624,6317152
Data 11053224,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152
Data 13159624,13159624,13159624,13159624,13159624,13159624,13159624,13159624,13159624,11053224
Data 13159624,16317688,16317688,8388608,8388608,8388608,13159624,16317688,13159624,6317152
Data 13159624,16317688,8388608,13159624,13159624,8388608,8388608,13159624,13159624,6317152
Data 13159624,16317688,16317688,13159624,16317688,8388608,8388608,13159624,13159624,6317152
Data 13159624,16317688,16317688,16317688,8388608,8388608,13159624,16317688,13159624,6317152
Data 13159624,16317688,16317688,16317688,8388608,8388608,13159624,16317688,13159624,6317152
Data 13159624,16317688,16317688,16317688,16317688,13159624,13159624,16317688,13159624,6317152
Data 13159624,13159624,13159624,13159624,8388608,8388608,13159624,13159624,13159624,6317152
Data 11053224,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152
Data 11053224,11053224,11053224,10527904,10001560,9474192,10527904,9474192,11053224,11053224
Data 9474192,10000536,10526880,12105920,12634328,11587808,9483480,10527912,10527904,11053224
Data 10527904,10532056,11063536,12119288,13170936,10535080,9481408,10001576,10001560,6317152
Data 10527904,11058400,10004640,12118240,12642520,6853712,3160096,9473184,8422528,6317152
Data 9474192,10002600,5274664,4746296,6319168,11050104,13681800,13157536,11053224,6317152
Data 10526880,10525872,9473128,13678720,14728320,13154424,12102776,11051152,11053224,6317152
Data 10527904,10527920,12104856,12632224,11579568,11054256,10000544,9475216,9475216,6317152
Data 11053224,9475216,10527912,9475216,10000536,10526880,6317152,6317152,6317152,6317152
Data 11053224,11053224,6317152,6317152,6317152,6317152,6317152,11053224,11053224,11053224
Data 136,136,13685976,0,13685976,13685976,13685976,136,136,11053224
Data 136,35064,13685976,0,13685976,13685976,13685976,200,136,6317152
Data 136,35064,13685976,13685976,13685976,13685976,13685976,200,136,6317152
Data 136,35064,35064,200,200,200,200,200,136,6317152
Data 136,35064,13685976,16317688,16317688,16317688,13685976,35064,136,6317152
Data 136,35064,13685976,16317688,16317688,16317688,13685976,35064,136,6317152
Data 136,35064,13685976,16317688,16317688,16317688,13685976,35064,136,6317152
Data 136,136,13159624,13685976,13685976,13685976,13159624,136,136,6317152
Data 11053224,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152,6317152

Data -255,-220,-200,-180,-150,-120,-80,-40,-20,-10,0,10,20,40,80,120

;.GAD_TYPES
;Case 0		;GUI_BUT
;Case 1		;ON/OFF
;Case 2		;GUI_CYCLE
;Case 3		;GUI_TXTINPUT
;Case 4		;GUI_TXTBOX
;			Case 5		;GUI_SLIDER
;			Case 6		;GUI_INTEGER
;			Case 7		;GUI_TXTLIST
;			Case 8		;GUI_TICK BOX
;			Case 9		;GUI_FRAME
;			Case 10		;GUI_SELECTOR
;			Case 11		;GUI_TEXT
;			Case 12		;GUI_IMAGEBOX
;			Case 13		;GUI_PROG
;;			Case 14		;GUI_TAB
	;		Case 15	    ;IMAGE BUT
;			Case 16		;IMAGE SELECTOR
	;		Case 17		;MULTI-LINE
	;		Case 18		;IMAGE SWITCH
	;		Case 19		;FLOAT

;************************************